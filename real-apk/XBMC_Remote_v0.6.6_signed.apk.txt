Running data flow analysis on H:\GitHub\AndroidCallingContext\real-apk\XBMC_Remote_v0.6.6_signed.apk with 127 sources and 60 sinks...
Starting infoflow computation...
Using 'H:\ADT\sdk\platforms\android-4\android.jar' as android.jar
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: javax.swing.JFrame is a phantom class!
Warning: javax.swing.event.ListSelectionListener is a phantom class!
Warning: javax.swing.JTextArea is a phantom class!
Warning: javax.swing.JList is a phantom class!
Warning: javax.swing.DefaultListModel is a phantom class!
Warning: javax.swing.event.ListSelectionEvent is a phantom class!
Warning: javax.swing.table.AbstractTableModel is a phantom class!
Warning: java.awt.BorderLayout is a phantom class!
Warning: java.awt.Color is a phantom class!
Warning: java.awt.Component is a phantom class!
Warning: java.awt.Container is a phantom class!
Warning: java.awt.GridLayout is a phantom class!
Warning: java.awt.LayoutManager is a phantom class!
Warning: javax.swing.JLabel is a phantom class!
Warning: javax.swing.JPanel is a phantom class!
Warning: javax.swing.JScrollPane is a phantom class!
Warning: javax.swing.ListModel is a phantom class!
Warning: javax.swing.SwingUtilities is a phantom class!
Warning: javax.swing.border.Border is a phantom class!
Warning: javax.swing.border.EmptyBorder is a phantom class!
The dummy main method is like this: 
    public static void dummyMainMethod()
    {
        int $i0, $i1, $i2;
        org.xbmc.android.remote.business.provider.HostProvider $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48;
        java.lang.String[] $r1, $r3, $r4, $r5;
        android.content.ContentValues $r2, $r8;
        android.database.Cursor $r6;
        java.lang.String $r7;
        android.net.Uri $r9;
        org.xbmc.android.remote.presentation.activity.RemoteActivity $r10;
        android.os.Bundle $r11, $r20, $r21, $r22, $r40, $r42, $r43, $r44, $r62, $r64, $r185, $r210, $r216, $r221, $r230, $r233, $r237, $r238, $r239, $r261, $r263, $r265, $r266, $r267, $r280, $r282;
        org.xbmc.android.remote.presentation.controller.RemoteController $r12;
        org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction $r13;
        android.view.View $r14, $r25, $r27, $r31, $r34, $r35, $r39, $r45, $r49, $r51, $r55, $r58, $r61, $r68, $r71, $r81, $r84, $r88, $r92, $r95, $r106, $r108, $r123, $r128, $r131, $r136, $r139, $r142, $r145, $r149, $r154, $r158, $r161, $r164, $r167, $r170, $r177, $r180, $r183, $r188, $r198, $r208, $r219, $r225, $r244, $r246, $r250, $r252, $r257, $r260, $r273, $r277, $r278, $r285, $r290, $r295, $r298, $r305;
        android.view.MotionEvent $r15, $r17;
        android.view.KeyEvent $r16, $r18, $r28, $r36, $r46, $r52, $r133, $r200, $r201, $r211, $r217, $r218, $r226, $r231, $r234, $r247, $r251, $r274, $r279, $r291, $r293, $r294;
        org.xbmc.android.remote.presentation.activity.MusicArtistActivity $r19;
        org.xbmc.api.object.Album $r23, $r29, $r32, $r47, $r56, $r59, $r93, $r134, $r165, $r242, $r248, $r255;
        org.xbmc.android.remote.presentation.activity.DialogFactory$5 $r24, $r48, $r166, $r243;
        org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener $r26, $r50, $r245, $r272, $r289;
        org.xbmc.android.remote.presentation.activity.DialogFactory$2 $r30, $r57, $r135, $r249;
        org.xbmc.android.remote.presentation.activity.DialogFactory$3 $r33, $r60, $r94, $r256;
        org.xbmc.android.remote.presentation.controller.AlbumListController $r37, $r152, $r240, $r253, $r258;
        org.xbmc.android.remote.presentation.controller.AlbumListController$1 $r38, $r153, $r259;
        org.xbmc.android.remote.presentation.activity.MusicGenreActivity $r41;
        org.xbmc.android.remote.presentation.controller.ArtistListController $r53, $r168;
        org.xbmc.android.remote.presentation.controller.ArtistListController$1 $r54, $r169;
        org.xbmc.android.remote.presentation.activity.HomeActivity $r63;
        org.xbmc.android.remote.presentation.activity.NowPlayingActivity $r65, $r125, $r155, $r184;
        org.xbmc.android.remote.presentation.controller.NowPlayingController $r66, $r126, $r156, $r186, $r189, $r196, $r206;
        org.xbmc.android.remote.presentation.controller.NowPlayingController$4 $r67, $r187;
        org.xbmc.android.remote.presentation.controller.FileListController $r69;
        org.xbmc.android.remote.presentation.controller.FileListController$1 $r70;
        android.widget.GridView $r72, $r85, $r89;
        org.xbmc.android.remote.presentation.controller.HomeController $r73, $r86, $r90;
        org.xbmc.android.remote.presentation.controller.HomeController$2 $r74;
        org.xbmc.android.remote.presentation.controller.MediaIntentController $r75, $r193, $r286;
        org.xbmc.android.remote.presentation.controller.MediaIntentController$2 $r76, $r194, $r287;
        org.xbmc.android.remote.presentation.controller.AbstractController$6 $r77, $r195, $r288;
        org.xbmc.api.object.Movie $r78, $r97, $r112, $r121, $r222;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController $r79, $r98, $r113, $r223;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1 $r80, $r224;
        org.xbmc.android.widget.slidingtabs.SlidingTabWidget $r82;
        org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2 $r83;
        org.xbmc.android.remote.presentation.controller.HomeController$4 $r87;
        org.xbmc.android.remote.presentation.controller.HomeController$1 $r91;
        org.xbmc.android.remote.presentation.controller.AbstractController$4 $r96, $r205, $r302;
        android.widget.TextView $r99, $r100, $r101, $r102, $r114, $r115, $r116, $r117;
        android.widget.Button $r103, $r118;
        android.widget.LinearLayout $r104, $r119;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3 $r105, $r120;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3 $r107;
        org.xbmc.android.remote.presentation.controller.HostPreference $r109, $r159, $r172;
        org.xbmc.android.remote.presentation.controller.HostPreference$1 $r110, $r160, $r173;
        org.xbmc.android.remote.presentation.controller.HostPreference$1$1 $r111;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1 $r122;
        org.xbmc.android.remote.presentation.activity.HomeActivity$4 $r124;
        org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction $r127, $r197;
        org.xbmc.android.remote.presentation.controller.SongListController $r129;
        org.xbmc.android.remote.presentation.controller.SongListController$1 $r130;
        android.app.Dialog $r132;
        org.xbmc.android.remote.presentation.controller.AbstractController$3 $r137, $r204, $r301;
        org.xbmc.android.remote.presentation.activity.HomeActivity$2 $r138;
        org.xbmc.android.remote.presentation.controller.MovieGenreListController $r140;
        org.xbmc.android.remote.presentation.controller.MovieGenreListController$1 $r141;
        org.xbmc.android.remote.presentation.controller.MovieListController $r143, $r268, $r270, $r275;
        org.xbmc.android.remote.presentation.controller.MovieListController$1 $r144, $r276;
        org.xbmc.android.remote.presentation.activity.HomeActivity$3 $r146;
        org.xbmc.android.remote.presentation.controller.MusicPlaylistController $r147, $r162, $r181, $r283, $r296, $r303;
        org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4 $r148, $r297;
        org.xbmc.android.remote.presentation.controller.AbstractController$5 $r150, $r203, $r300;
        org.xbmc.android.remote.presentation.controller.AbstractController$8 $r151, $r202, $r299;
        org.xbmc.android.remote.presentation.controller.NowPlayingController$3 $r157, $r207;
        org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction $r163, $r284;
        org.xbmc.android.remote.presentation.controller.AbstractController$7 $r171, $r199, $r292;
        org.xbmc.android.remote.presentation.controller.HostPreference$1$2 $r174;
        org.xbmc.android.remote.presentation.controller.ActorListController $r175;
        org.xbmc.android.remote.presentation.controller.ActorListController$1 $r176;
        org.xbmc.android.remote.presentation.controller.MusicGenreListController $r178;
        org.xbmc.android.remote.presentation.controller.MusicGenreListController$1 $r179;
        org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3 $r182, $r304;
        org.xbmc.android.remote.presentation.controller.NowPlayingController$2 $r190;
        android.widget.SeekBar $r191, $r192;
        org.xbmc.android.remote.presentation.activity.HostSettingsActivity $r209;
        org.xbmc.android.remote.presentation.controller.SettingsController $r212, $r214, $r235;
        org.xbmc.android.remote.presentation.controller.SettingsController$1 $r213;
        org.xbmc.android.remote.presentation.activity.ListActivity $r215;
        org.xbmc.android.remote.presentation.activity.MovieDetailsActivity $r220;
        org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver $r227;
        android.content.Intent $r228;
        org.xbmc.android.remote.presentation.activity.AboutActivity $r229;
        org.xbmc.android.remote.presentation.activity.SettingsActivity $r232;
        org.xbmc.android.remote.presentation.activity.MusicLibraryActivity $r236;
        org.xbmc.android.remote.presentation.controller.AlbumListController$3 $r241;
        org.xbmc.android.remote.presentation.controller.AlbumListController$2 $r254;
        org.xbmc.android.remote.presentation.activity.MediaIntentActivity $r262;
        org.xbmc.android.remote.presentation.activity.MovieLibraryActivity $r264;
        org.xbmc.android.remote.presentation.controller.MovieListController$6 $r269;
        org.xbmc.android.remote.presentation.controller.MovieListController$5 $r271;
        org.xbmc.android.remote.presentation.activity.PlaylistActivity $r281;

        $i0 = 0;

     label01:
        $r0 = new org.xbmc.android.remote.business.provider.HostProvider;
        specialinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: void <init>()>();
        $z0 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()>();
        if $i0 == 1 goto label01;

     label02:
        if $i0 == 2 goto label04;

        if $i0 == 3 goto label04;

     label03:
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "";
        $i1 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(null, "", $r1);
        $r2 = new android.content.ContentValues;
        specialinvoke $r2.<android.content.ContentValues: void <init>()>();
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = "";
        $i2 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(null, $r2, "", $r3);
        $r2 = null;
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = "";
        $r5 = newarray (java.lang.String)[1];
        $r5[0] = "";
        $r6 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(null, $r4, "", $r5, "");
        $r7 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)>(null);
        $r8 = new android.content.ContentValues;
        specialinvoke $r8.<android.content.ContentValues: void <init>()>();
        $r9 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(null, $r8);
        $r8 = null;
        if $i0 == 9 goto label03;

     label04:
        if $i0 == 10 goto label07;

        $r10 = new org.xbmc.android.remote.presentation.activity.RemoteActivity;
        specialinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()>();
        if $i0 == 11 goto label07;

        $r11 = new android.os.Bundle;
        specialinvoke $r11.<android.os.Bundle: void <init>()>();
        virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)>($r11);
        $r11 = null;

     label05:
        virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()>();

     label06:
        $r12 = new org.xbmc.android.remote.presentation.controller.RemoteController;
        specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>($r10);
        $r13 = new org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction;
        specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>($r12, "");
        $r14 = new android.view.View;
        specialinvoke $r14.<android.view.View: void <init>(android.content.Context)>($r10);
        $r15 = new android.view.MotionEvent;
        specialinvoke $r15.<android.view.MotionEvent: void <init>()>();
        $z1 = virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)>($r14, $r15);
        $r14 = null;
        $r15 = null;
        $r16 = new android.view.KeyEvent;
        specialinvoke $r16.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z2 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r16);
        $r16 = null;
        $z3 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null);
        $r17 = new android.view.MotionEvent;
        specialinvoke $r17.<android.view.MotionEvent: void <init>()>();
        $z4 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)>($r17);
        $r17 = null;
        $z5 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r18 = new android.view.KeyEvent;
        specialinvoke $r18.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z6 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r18);
        $r18 = null;
        if $i0 == 18 goto label06;

        if $i0 == 19 goto label06;

        virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()>();
        if $i0 == 20 goto label05;

        if $i0 == 21 goto label07;

        if $i0 == 22 goto label05;

     label07:
        if $i0 == 24 goto label11;

        $r19 = new org.xbmc.android.remote.presentation.activity.MusicArtistActivity;
        specialinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void <init>()>();
        if $i0 == 25 goto label11;

        $r20 = new android.os.Bundle;
        specialinvoke $r20.<android.os.Bundle: void <init>()>();
        virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)>($r20);
        $r20 = null;

     label08:
        $r21 = new android.os.Bundle;
        specialinvoke $r21.<android.os.Bundle: void <init>()>();
        virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r21);
        $r21 = null;
        $r22 = new android.os.Bundle;
        specialinvoke $r22.<android.os.Bundle: void <init>()>();
        virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r22);
        $r22 = null;

     label09:
        virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()>();

     label10:
        $r23 = new org.xbmc.api.object.Album;
        specialinvoke $r23.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r24 = new org.xbmc.android.remote.presentation.activity.DialogFactory$5;
        specialinvoke $r24.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r19, $r23, $r19);
        $r25 = new android.view.View;
        specialinvoke $r25.<android.view.View: void <init>(android.content.Context)>($r19);
        virtualinvoke $r24.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r25);
        $r25 = null;
        $r26 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener;
        specialinvoke $r26.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>();
        $r27 = new android.view.View;
        specialinvoke $r27.<android.view.View: void <init>(android.content.Context)>($r19);
        $r28 = new android.view.KeyEvent;
        specialinvoke $r28.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z7 = virtualinvoke $r26.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r27, 0, $r28);
        $r27 = null;
        $r28 = null;
        $r29 = new org.xbmc.api.object.Album;
        specialinvoke $r29.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r30 = new org.xbmc.android.remote.presentation.activity.DialogFactory$2;
        specialinvoke $r30.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r29, $r19);
        $r31 = new android.view.View;
        specialinvoke $r31.<android.view.View: void <init>(android.content.Context)>($r19);
        virtualinvoke $r30.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r31);
        $r31 = null;
        $r32 = new org.xbmc.api.object.Album;
        specialinvoke $r32.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r33 = new org.xbmc.android.remote.presentation.activity.DialogFactory$3;
        specialinvoke $r33.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r32, $r19);
        $r34 = new android.view.View;
        specialinvoke $r34.<android.view.View: void <init>(android.content.Context)>($r19);
        virtualinvoke $r33.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r34);
        $r34 = null;
        $z8 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null);
        $z9 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r35 = new android.view.View;
        specialinvoke $r35.<android.view.View: void <init>(android.content.Context)>($r19);
        virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r35, null);
        $r35 = null;
        $z10 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        $r36 = new android.view.KeyEvent;
        specialinvoke $r36.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z11 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r36);
        $r36 = null;
        $r37 = new org.xbmc.android.remote.presentation.controller.AlbumListController;
        specialinvoke $r37.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>();
        $r38 = new org.xbmc.android.remote.presentation.controller.AlbumListController$1;
        specialinvoke $r38.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r37);
        $r39 = new android.view.View;
        specialinvoke $r39.<android.view.View: void <init>(android.content.Context)>($r19);
        virtualinvoke $r38.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r39, 0, 0L);
        $r39 = null;
        if $i0 == 36 goto label10;

        if $i0 == 37 goto label10;

        virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()>();
        $r40 = new android.os.Bundle;
        specialinvoke $r40.<android.os.Bundle: void <init>()>();
        virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r40);
        $r40 = null;
        if $i0 == 38 goto label09;

        if $i0 == 39 goto label11;

        if $i0 == 40 goto label08;

     label11:
        if $i0 == 42 goto label15;

        $r41 = new org.xbmc.android.remote.presentation.activity.MusicGenreActivity;
        specialinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void <init>()>();
        if $i0 == 43 goto label15;

        $r42 = new android.os.Bundle;
        specialinvoke $r42.<android.os.Bundle: void <init>()>();
        virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)>($r42);
        $r42 = null;

     label12:
        $r43 = new android.os.Bundle;
        specialinvoke $r43.<android.os.Bundle: void <init>()>();
        virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r43);
        $r43 = null;
        $r44 = new android.os.Bundle;
        specialinvoke $r44.<android.os.Bundle: void <init>()>();
        virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r44);
        $r44 = null;

     label13:
        virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()>();

     label14:
        $z12 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        $z13 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r45 = new android.view.View;
        specialinvoke $r45.<android.view.View: void <init>(android.content.Context)>($r41);
        virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r45, null);
        $r45 = null;
        $r46 = new android.view.KeyEvent;
        specialinvoke $r46.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z14 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r46);
        $r46 = null;
        $z15 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null);
        $r47 = new org.xbmc.api.object.Album;
        specialinvoke $r47.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r48 = new org.xbmc.android.remote.presentation.activity.DialogFactory$5;
        specialinvoke $r48.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r41, $r47, $r41);
        $r49 = new android.view.View;
        specialinvoke $r49.<android.view.View: void <init>(android.content.Context)>($r41);
        virtualinvoke $r48.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r49);
        $r49 = null;
        $r50 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener;
        specialinvoke $r50.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>();
        $r51 = new android.view.View;
        specialinvoke $r51.<android.view.View: void <init>(android.content.Context)>($r41);
        $r52 = new android.view.KeyEvent;
        specialinvoke $r52.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z16 = virtualinvoke $r50.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r51, 0, $r52);
        $r51 = null;
        $r52 = null;
        $r53 = new org.xbmc.android.remote.presentation.controller.ArtistListController;
        specialinvoke $r53.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>();
        $r54 = new org.xbmc.android.remote.presentation.controller.ArtistListController$1;
        specialinvoke $r54.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r53);
        $r55 = new android.view.View;
        specialinvoke $r55.<android.view.View: void <init>(android.content.Context)>($r41);
        virtualinvoke $r54.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r55, 0, 0L);
        $r55 = null;
        $r56 = new org.xbmc.api.object.Album;
        specialinvoke $r56.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r57 = new org.xbmc.android.remote.presentation.activity.DialogFactory$2;
        specialinvoke $r57.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r56, $r41);
        $r58 = new android.view.View;
        specialinvoke $r58.<android.view.View: void <init>(android.content.Context)>($r41);
        virtualinvoke $r57.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r58);
        $r58 = null;
        $r59 = new org.xbmc.api.object.Album;
        specialinvoke $r59.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r60 = new org.xbmc.android.remote.presentation.activity.DialogFactory$3;
        specialinvoke $r60.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r59, $r41);
        $r61 = new android.view.View;
        specialinvoke $r61.<android.view.View: void <init>(android.content.Context)>($r41);
        virtualinvoke $r60.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r61);
        $r61 = null;
        if $i0 == 54 goto label14;

        if $i0 == 55 goto label14;

        virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()>();
        $r62 = new android.os.Bundle;
        specialinvoke $r62.<android.os.Bundle: void <init>()>();
        virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r62);
        $r62 = null;
        if $i0 == 56 goto label13;

        if $i0 == 57 goto label15;

        if $i0 == 58 goto label12;

     label15:
        if $i0 == 60 goto label18;

        $r63 = new org.xbmc.android.remote.presentation.activity.HomeActivity;
        specialinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()>();
        if $i0 == 61 goto label18;

        $r64 = new android.os.Bundle;
        specialinvoke $r64.<android.os.Bundle: void <init>()>();
        virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)>($r64);
        $r64 = null;

     label16:
        virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()>();

     label17:
        $r65 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity;
        specialinvoke $r65.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>();
        $r66 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r66.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r65);
        $r67 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$4;
        specialinvoke $r67.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r66);
        $r68 = new android.view.View;
        specialinvoke $r68.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r67.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>($r68);
        $r68 = null;
        $r69 = new org.xbmc.android.remote.presentation.controller.FileListController;
        specialinvoke $r69.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>();
        $r70 = new org.xbmc.android.remote.presentation.controller.FileListController$1;
        specialinvoke $r70.<org.xbmc.android.remote.presentation.controller.FileListController$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController)>($r69);
        $r71 = new android.view.View;
        specialinvoke $r71.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r70.<org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r71, 0, 0L);
        $r71 = null;
        $r72 = new android.widget.GridView;
        specialinvoke $r72.<android.widget.GridView: void <init>(android.content.Context)>($r63);
        $r73 = new org.xbmc.android.remote.presentation.controller.HomeController;
        specialinvoke $r73.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r72);
        $r74 = new org.xbmc.android.remote.presentation.controller.HomeController$2;
        specialinvoke $r74.<org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>($r73, null);
        virtualinvoke $r74.<org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r75 = new org.xbmc.android.remote.presentation.controller.MediaIntentController;
        specialinvoke $r75.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r63);
        $r76 = new org.xbmc.android.remote.presentation.controller.MediaIntentController$2;
        specialinvoke $r76.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r75);
        virtualinvoke $r76.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r77 = new org.xbmc.android.remote.presentation.controller.AbstractController$6;
        specialinvoke $r77.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r77.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r78 = new org.xbmc.api.object.Movie;
        specialinvoke $r78.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0);
        $r79 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController;
        specialinvoke $r79.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r78);
        $r80 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1;
        specialinvoke $r80.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r79);
        $r81 = new android.view.View;
        specialinvoke $r81.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r80.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>($r81);
        $r81 = null;
        $r82 = new org.xbmc.android.widget.slidingtabs.SlidingTabWidget;
        specialinvoke $r82.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context)>($r63);
        $r83 = new org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2;
        specialinvoke $r83.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r82);
        $r84 = new android.view.View;
        specialinvoke $r84.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r83.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)>($r84);
        $r84 = null;
        $r85 = new android.widget.GridView;
        specialinvoke $r85.<android.widget.GridView: void <init>(android.content.Context)>($r63);
        $r86 = new org.xbmc.android.remote.presentation.controller.HomeController;
        specialinvoke $r86.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r85);
        $r87 = new org.xbmc.android.remote.presentation.controller.HomeController$4;
        specialinvoke $r87.<org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r86);
        $r88 = new android.view.View;
        specialinvoke $r88.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r87.<org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r88, 0, 0L);
        $r88 = null;
        $r89 = new android.widget.GridView;
        specialinvoke $r89.<android.widget.GridView: void <init>(android.content.Context)>($r63);
        $r90 = new org.xbmc.android.remote.presentation.controller.HomeController;
        specialinvoke $r90.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r89);
        $r91 = new org.xbmc.android.remote.presentation.controller.HomeController$1;
        specialinvoke $r91.<org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r90);
        $r92 = new android.view.View;
        specialinvoke $r92.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r91.<org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)>($r92);
        $r92 = null;
        $r93 = new org.xbmc.api.object.Album;
        specialinvoke $r93.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r94 = new org.xbmc.android.remote.presentation.activity.DialogFactory$3;
        specialinvoke $r94.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r93, $r63);
        $r95 = new android.view.View;
        specialinvoke $r95.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r94.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r95);
        $r95 = null;
        $r96 = new org.xbmc.android.remote.presentation.controller.AbstractController$4;
        specialinvoke $r96.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r96.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r97 = new org.xbmc.api.object.Movie;
        specialinvoke $r97.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0);
        $r98 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController;
        specialinvoke $r98.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r97);
        $r99 = new android.widget.TextView;
        specialinvoke $r99.<android.widget.TextView: void <init>(android.content.Context)>($r63);
        $r100 = null;
        $r101 = null;
        $r102 = null;
        $r103 = new android.widget.Button;
        specialinvoke $r103.<android.widget.Button: void <init>(android.content.Context)>($r63);
        $r104 = new android.widget.LinearLayout;
        specialinvoke $r104.<android.widget.LinearLayout: void <init>(android.content.Context)>($r63);
        $r105 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3;
        specialinvoke $r105.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r98, $r99, $r100, $r101, $r102, $r103, $r104);
        $r106 = new android.view.View;
        specialinvoke $r106.<android.view.View: void <init>(android.content.Context)>($r63);
        $r107 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3;
        specialinvoke $r107.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,android.view.View)>($r105, $r106);
        $r108 = new android.view.View;
        specialinvoke $r108.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r107.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)>($r108);
        $r108 = null;
        $r109 = new org.xbmc.android.remote.presentation.controller.HostPreference;
        specialinvoke $r109.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63);
        $r110 = new org.xbmc.android.remote.presentation.controller.HostPreference$1;
        specialinvoke $r110.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r109, null);
        $r111 = new org.xbmc.android.remote.presentation.controller.HostPreference$1$1;
        specialinvoke $r111.<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>($r110, null);
        virtualinvoke $r111.<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r112 = new org.xbmc.api.object.Movie;
        specialinvoke $r112.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0);
        $r113 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController;
        specialinvoke $r113.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r112);
        $r114 = new android.widget.TextView;
        specialinvoke $r114.<android.widget.TextView: void <init>(android.content.Context)>($r63);
        $r115 = null;
        $r116 = null;
        $r117 = null;
        $r118 = new android.widget.Button;
        specialinvoke $r118.<android.widget.Button: void <init>(android.content.Context)>($r63);
        $r119 = new android.widget.LinearLayout;
        specialinvoke $r119.<android.widget.LinearLayout: void <init>(android.content.Context)>($r63);
        $r120 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3;
        specialinvoke $r120.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r113, $r114, $r115, $r116, $r117, $r118, $r119);
        $r121 = null;
        $r122 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1;
        specialinvoke $r122.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,org.xbmc.api.object.Movie)>($r120, $r121);
        $r123 = new android.view.View;
        specialinvoke $r123.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r122.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)>($r123);
        $r123 = null;
        $r124 = new org.xbmc.android.remote.presentation.activity.HomeActivity$4;
        specialinvoke $r124.<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63);
        virtualinvoke $r124.<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r125 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity;
        specialinvoke $r125.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>();
        $r126 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r126.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r125);
        $r127 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction;
        specialinvoke $r127.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r126, "");
        $r128 = new android.view.View;
        specialinvoke $r128.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r127.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>($r128);
        $r128 = null;
        $r129 = new org.xbmc.android.remote.presentation.controller.SongListController;
        specialinvoke $r129.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>();
        $r130 = new org.xbmc.android.remote.presentation.controller.SongListController$1;
        specialinvoke $r130.<org.xbmc.android.remote.presentation.controller.SongListController$1: void <init>(org.xbmc.android.remote.presentation.controller.SongListController)>($r129);
        $r131 = new android.view.View;
        specialinvoke $r131.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r130.<org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r131, 0, 0L);
        $r131 = null;
        $z17 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r132 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)>(0);
        $z18 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null);
        $r133 = new android.view.KeyEvent;
        specialinvoke $r133.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z19 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r133);
        $r133 = null;
        $r134 = new org.xbmc.api.object.Album;
        specialinvoke $r134.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r135 = new org.xbmc.android.remote.presentation.activity.DialogFactory$2;
        specialinvoke $r135.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r134, $r63);
        $r136 = new android.view.View;
        specialinvoke $r136.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r135.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r136);
        $r136 = null;
        $r137 = new org.xbmc.android.remote.presentation.controller.AbstractController$3;
        specialinvoke $r137.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r137.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r138 = new org.xbmc.android.remote.presentation.activity.HomeActivity$2;
        specialinvoke $r138.<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63);
        $r139 = new android.view.View;
        specialinvoke $r139.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r138.<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)>($r139);
        $r139 = null;
        $r140 = new org.xbmc.android.remote.presentation.controller.MovieGenreListController;
        specialinvoke $r140.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>();
        $r141 = new org.xbmc.android.remote.presentation.controller.MovieGenreListController$1;
        specialinvoke $r141.<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieGenreListController)>($r140);
        $r142 = new android.view.View;
        specialinvoke $r142.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r141.<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r142, 0, 0L);
        $r142 = null;
        $r143 = new org.xbmc.android.remote.presentation.controller.MovieListController;
        specialinvoke $r143.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>();
        $r144 = new org.xbmc.android.remote.presentation.controller.MovieListController$1;
        specialinvoke $r144.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r143);
        $r145 = new android.view.View;
        specialinvoke $r145.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r144.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r145, 0, 0L);
        $r145 = null;
        $r146 = new org.xbmc.android.remote.presentation.activity.HomeActivity$3;
        specialinvoke $r146.<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63);
        virtualinvoke $r146.<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r147 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r147.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r148 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4;
        specialinvoke $r148.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r147);
        $r149 = new android.view.View;
        specialinvoke $r149.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r148.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>($r149);
        $r149 = null;
        $r150 = new org.xbmc.android.remote.presentation.controller.AbstractController$5;
        specialinvoke $r150.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r150.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r151 = new org.xbmc.android.remote.presentation.controller.AbstractController$8;
        specialinvoke $r151.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r151.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r152 = new org.xbmc.android.remote.presentation.controller.AlbumListController;
        specialinvoke $r152.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>();
        $r153 = new org.xbmc.android.remote.presentation.controller.AlbumListController$1;
        specialinvoke $r153.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r152);
        $r154 = new android.view.View;
        specialinvoke $r154.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r153.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r154, 0, 0L);
        $r154 = null;
        $r155 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity;
        specialinvoke $r155.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>();
        $r156 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r156.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r155);
        $r157 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$3;
        specialinvoke $r157.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r156);
        $r158 = new android.view.View;
        specialinvoke $r158.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r157.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>($r158);
        $r158 = null;
        $r159 = new org.xbmc.android.remote.presentation.controller.HostPreference;
        specialinvoke $r159.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63);
        $r160 = new org.xbmc.android.remote.presentation.controller.HostPreference$1;
        specialinvoke $r160.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r159, null);
        $r161 = new android.view.View;
        specialinvoke $r161.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r160.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)>($r161);
        $r161 = null;
        $r162 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r162.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r163 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction;
        specialinvoke $r163.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r162, "");
        $r164 = new android.view.View;
        specialinvoke $r164.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r163.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>($r164);
        $r164 = null;
        $r165 = new org.xbmc.api.object.Album;
        specialinvoke $r165.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r166 = new org.xbmc.android.remote.presentation.activity.DialogFactory$5;
        specialinvoke $r166.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r63, $r165, $r63);
        $r167 = new android.view.View;
        specialinvoke $r167.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r166.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r167);
        $r167 = null;
        $r168 = new org.xbmc.android.remote.presentation.controller.ArtistListController;
        specialinvoke $r168.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>();
        $r169 = new org.xbmc.android.remote.presentation.controller.ArtistListController$1;
        specialinvoke $r169.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r168);
        $r170 = new android.view.View;
        specialinvoke $r170.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r169.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r170, 0, 0L);
        $r170 = null;
        $r171 = new org.xbmc.android.remote.presentation.controller.AbstractController$7;
        specialinvoke $r171.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r171.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r172 = new org.xbmc.android.remote.presentation.controller.HostPreference;
        specialinvoke $r172.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63);
        $r173 = new org.xbmc.android.remote.presentation.controller.HostPreference$1;
        specialinvoke $r173.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r172, null);
        $r174 = new org.xbmc.android.remote.presentation.controller.HostPreference$1$2;
        specialinvoke $r174.<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r173);
        virtualinvoke $r174.<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r175 = new org.xbmc.android.remote.presentation.controller.ActorListController;
        specialinvoke $r175.<org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>(0);
        $r176 = new org.xbmc.android.remote.presentation.controller.ActorListController$1;
        specialinvoke $r176.<org.xbmc.android.remote.presentation.controller.ActorListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ActorListController)>($r175);
        $r177 = new android.view.View;
        specialinvoke $r177.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r176.<org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r177, 0, 0L);
        $r177 = null;
        $r178 = new org.xbmc.android.remote.presentation.controller.MusicGenreListController;
        specialinvoke $r178.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>();
        $r179 = new org.xbmc.android.remote.presentation.controller.MusicGenreListController$1;
        specialinvoke $r179.<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicGenreListController)>($r178);
        $r180 = new android.view.View;
        specialinvoke $r180.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r179.<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r180, 0, 0L);
        $r180 = null;
        $r181 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r181.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r182 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3;
        specialinvoke $r182.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r181);
        $r183 = new android.view.View;
        specialinvoke $r183.<android.view.View: void <init>(android.content.Context)>($r63);
        virtualinvoke $r182.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r183, 0, 0L);
        $r183 = null;
        if $i0 == 103 goto label17;

        if $i0 == 104 goto label17;

        virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()>();
        if $i0 == 105 goto label16;

        if $i0 == 106 goto label18;

        if $i0 == 107 goto label16;

     label18:
        if $i0 == 109 goto label21;

        $r184 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity;
        specialinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>();
        if $i0 == 110 goto label21;

        $r185 = new android.os.Bundle;
        specialinvoke $r185.<android.os.Bundle: void <init>()>();
        virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)>($r185);
        $r185 = null;

     label19:
        virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()>();

     label20:
        $r186 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r186.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184);
        $r187 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$4;
        specialinvoke $r187.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r186);
        $r188 = new android.view.View;
        specialinvoke $r188.<android.view.View: void <init>(android.content.Context)>($r184);
        virtualinvoke $r187.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>($r188);
        $r188 = null;
        $r189 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r189.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184);
        $r190 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$2;
        specialinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r189);
        $r191 = new android.widget.SeekBar;
        specialinvoke $r191.<android.widget.SeekBar: void <init>(android.content.Context)>($r184);
        virtualinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>($r191, 0, false);
        $r191 = null;
        $r192 = new android.widget.SeekBar;
        specialinvoke $r192.<android.widget.SeekBar: void <init>(android.content.Context)>($r184);
        virtualinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)>($r192);
        $r192 = null;
        $r193 = new org.xbmc.android.remote.presentation.controller.MediaIntentController;
        specialinvoke $r193.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r184);
        $r194 = new org.xbmc.android.remote.presentation.controller.MediaIntentController$2;
        specialinvoke $r194.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r193);
        virtualinvoke $r194.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r195 = new org.xbmc.android.remote.presentation.controller.AbstractController$6;
        specialinvoke $r195.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r195.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r196 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r196.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184);
        $r197 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction;
        specialinvoke $r197.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r196, "");
        $r198 = new android.view.View;
        specialinvoke $r198.<android.view.View: void <init>(android.content.Context)>($r184);
        virtualinvoke $r197.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>($r198);
        $r198 = null;
        $r199 = new org.xbmc.android.remote.presentation.controller.AbstractController$7;
        specialinvoke $r199.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r199.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r200 = new android.view.KeyEvent;
        specialinvoke $r200.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z20 = virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r200);
        $r200 = null;
        $r201 = new android.view.KeyEvent;
        specialinvoke $r201.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z21 = virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r201);
        $r201 = null;
        $r202 = new org.xbmc.android.remote.presentation.controller.AbstractController$8;
        specialinvoke $r202.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r202.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r203 = new org.xbmc.android.remote.presentation.controller.AbstractController$5;
        specialinvoke $r203.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r203.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r204 = new org.xbmc.android.remote.presentation.controller.AbstractController$3;
        specialinvoke $r204.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r204.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r205 = new org.xbmc.android.remote.presentation.controller.AbstractController$4;
        specialinvoke $r205.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r205.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r206 = new org.xbmc.android.remote.presentation.controller.NowPlayingController;
        specialinvoke $r206.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184);
        $r207 = new org.xbmc.android.remote.presentation.controller.NowPlayingController$3;
        specialinvoke $r207.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r206);
        $r208 = new android.view.View;
        specialinvoke $r208.<android.view.View: void <init>(android.content.Context)>($r184);
        virtualinvoke $r207.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>($r208);
        $r208 = null;
        if $i0 == 125 goto label20;

        if $i0 == 126 goto label20;

        virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()>();
        if $i0 == 127 goto label19;

        if $i0 == 128 goto label21;

        if $i0 == 129 goto label19;

     label21:
        if $i0 == 131 goto label24;

        $r209 = new org.xbmc.android.remote.presentation.activity.HostSettingsActivity;
        specialinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void <init>()>();
        if $i0 == 132 goto label24;

        $r210 = new android.os.Bundle;
        specialinvoke $r210.<android.os.Bundle: void <init>()>();
        virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)>($r210);
        $r210 = null;

     label22:
        virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()>();

     label23:
        $z22 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>(0, null);
        $r211 = new android.view.KeyEvent;
        specialinvoke $r211.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z23 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r211);
        $r211 = null;
        $z24 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null);
        $r212 = new org.xbmc.android.remote.presentation.controller.SettingsController;
        specialinvoke $r212.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r209);
        $r213 = new org.xbmc.android.remote.presentation.controller.SettingsController$1;
        specialinvoke $r213.<org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>($r212);
        virtualinvoke $r213.<org.xbmc.android.remote.presentation.controller.SettingsController$1: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r214 = new org.xbmc.android.remote.presentation.controller.SettingsController;
        specialinvoke $r214.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r209);
        virtualinvoke $r214.<org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>(null, "");
        if $i0 == 138 goto label23;

        if $i0 == 139 goto label23;

        virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()>();
        if $i0 == 140 goto label22;

        if $i0 == 141 goto label24;

        if $i0 == 142 goto label22;

     label24:
        if $i0 == 144 goto label27;

        $r215 = new org.xbmc.android.remote.presentation.activity.ListActivity;
        specialinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()>();
        if $i0 == 145 goto label27;

        $r216 = new android.os.Bundle;
        specialinvoke $r216.<android.os.Bundle: void <init>()>();
        virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)>($r216);
        $r216 = null;

     label25:
        virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()>();

     label26:
        $r217 = new android.view.KeyEvent;
        specialinvoke $r217.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z25 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r217);
        $r217 = null;
        $r218 = new android.view.KeyEvent;
        specialinvoke $r218.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z26 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r218);
        $r218 = null;
        $z27 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null);
        $r219 = new android.view.View;
        specialinvoke $r219.<android.view.View: void <init>(android.content.Context)>($r215);
        virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r219, null);
        $r219 = null;
        $z28 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $z29 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        if $i0 == 152 goto label26;

        if $i0 == 153 goto label26;

        virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()>();
        if $i0 == 154 goto label25;

        if $i0 == 155 goto label27;

        if $i0 == 156 goto label25;

     label27:
        if $i0 == 158 goto label30;

        $r220 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity;
        specialinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <init>()>();
        if $i0 == 159 goto label30;

        $r221 = new android.os.Bundle;
        specialinvoke $r221.<android.os.Bundle: void <init>()>();
        virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)>($r221);
        $r221 = null;

     label28:
        virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()>();

     label29:
        $r222 = new org.xbmc.api.object.Movie;
        specialinvoke $r222.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0);
        $r223 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController;
        specialinvoke $r223.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r220, $r222);
        $r224 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1;
        specialinvoke $r224.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r223);
        $r225 = new android.view.View;
        specialinvoke $r225.<android.view.View: void <init>(android.content.Context)>($r220);
        virtualinvoke $r224.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>($r225);
        $r225 = null;
        $r226 = new android.view.KeyEvent;
        specialinvoke $r226.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z30 = virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r226);
        $r226 = null;
        staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>();
        if $i0 == 163 goto label29;

        if $i0 == 164 goto label29;

        virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()>();
        if $i0 == 165 goto label28;

        if $i0 == 166 goto label30;

        if $i0 == 167 goto label28;

     label30:
        if $i0 == 169 goto label32;

        $r227 = new org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver;
        specialinvoke $r227.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <init>()>();
        if $i0 == 170 goto label32;

        $r228 = new android.content.Intent;
        specialinvoke $r228.<android.content.Intent: void <init>()>();

     label31:
        virtualinvoke $r227.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, $r228);
        $r228 = null;
        if $i0 == 171 goto label31;

     label32:
        if $i0 == 172 goto label35;

        $r229 = new org.xbmc.android.remote.presentation.activity.AboutActivity;
        specialinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void <init>()>();
        if $i0 == 173 goto label35;

        $r230 = new android.os.Bundle;
        specialinvoke $r230.<android.os.Bundle: void <init>()>();
        virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)>($r230);
        $r230 = null;

     label33:
        virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()>();

     label34:
        $r231 = new android.view.KeyEvent;
        specialinvoke $r231.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z31 = virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r231);
        $r231 = null;
        if $i0 == 175 goto label34;

        if $i0 == 176 goto label34;

        virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()>();
        if $i0 == 177 goto label33;

        if $i0 == 178 goto label35;

        if $i0 == 179 goto label33;

     label35:
        if $i0 == 181 goto label38;

        $r232 = new org.xbmc.android.remote.presentation.activity.SettingsActivity;
        specialinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void <init>()>();
        if $i0 == 182 goto label38;

        $r233 = new android.os.Bundle;
        specialinvoke $r233.<android.os.Bundle: void <init>()>();
        virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)>($r233);
        $r233 = null;

     label36:
        virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()>();

     label37:
        $r234 = new android.view.KeyEvent;
        specialinvoke $r234.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z32 = virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r234);
        $r234 = null;
        $r235 = new org.xbmc.android.remote.presentation.controller.SettingsController;
        specialinvoke $r235.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r232);
        virtualinvoke $r235.<org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>(null, "");
        if $i0 == 185 goto label37;

        if $i0 == 186 goto label37;

        virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()>();
        if $i0 == 187 goto label36;

        if $i0 == 188 goto label38;

        if $i0 == 189 goto label36;

     label38:
        if $i0 == 191 goto label42;

        $r236 = new org.xbmc.android.remote.presentation.activity.MusicLibraryActivity;
        specialinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void <init>()>();
        if $i0 == 192 goto label42;

        $r237 = new android.os.Bundle;
        specialinvoke $r237.<android.os.Bundle: void <init>()>();
        virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)>($r237);
        $r237 = null;

     label39:
        $r238 = new android.os.Bundle;
        specialinvoke $r238.<android.os.Bundle: void <init>()>();
        virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r238);
        $r238 = null;
        $r239 = new android.os.Bundle;
        specialinvoke $r239.<android.os.Bundle: void <init>()>();
        virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r239);
        $r239 = null;

     label40:
        virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()>();

     label41:
        $r240 = new org.xbmc.android.remote.presentation.controller.AlbumListController;
        specialinvoke $r240.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>();
        $r241 = new org.xbmc.android.remote.presentation.controller.AlbumListController$3;
        specialinvoke $r241.<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r240);
        virtualinvoke $r241.<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r242 = new org.xbmc.api.object.Album;
        specialinvoke $r242.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r243 = new org.xbmc.android.remote.presentation.activity.DialogFactory$5;
        specialinvoke $r243.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r236, $r242, $r236);
        $r244 = new android.view.View;
        specialinvoke $r244.<android.view.View: void <init>(android.content.Context)>($r236);
        virtualinvoke $r243.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r244);
        $r244 = null;
        $r245 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener;
        specialinvoke $r245.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>();
        $r246 = new android.view.View;
        specialinvoke $r246.<android.view.View: void <init>(android.content.Context)>($r236);
        $r247 = new android.view.KeyEvent;
        specialinvoke $r247.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z33 = virtualinvoke $r245.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r246, 0, $r247);
        $r246 = null;
        $r247 = null;
        $r248 = new org.xbmc.api.object.Album;
        specialinvoke $r248.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r249 = new org.xbmc.android.remote.presentation.activity.DialogFactory$2;
        specialinvoke $r249.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r248, $r236);
        $r250 = new android.view.View;
        specialinvoke $r250.<android.view.View: void <init>(android.content.Context)>($r236);
        virtualinvoke $r249.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r250);
        $r250 = null;
        $z34 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null);
        $z35 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        $z36 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r251 = new android.view.KeyEvent;
        specialinvoke $r251.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z37 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r251);
        $r251 = null;
        $r252 = new android.view.View;
        specialinvoke $r252.<android.view.View: void <init>(android.content.Context)>($r236);
        virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r252, null);
        $r252 = null;
        $r253 = new org.xbmc.android.remote.presentation.controller.AlbumListController;
        specialinvoke $r253.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>();
        $r254 = new org.xbmc.android.remote.presentation.controller.AlbumListController$2;
        specialinvoke $r254.<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r253);
        virtualinvoke $r254.<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r255 = new org.xbmc.api.object.Album;
        specialinvoke $r255.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0);
        $r256 = new org.xbmc.android.remote.presentation.activity.DialogFactory$3;
        specialinvoke $r256.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r255, $r236);
        $r257 = new android.view.View;
        specialinvoke $r257.<android.view.View: void <init>(android.content.Context)>($r236);
        virtualinvoke $r256.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r257);
        $r257 = null;
        $r258 = new org.xbmc.android.remote.presentation.controller.AlbumListController;
        specialinvoke $r258.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>();
        $r259 = new org.xbmc.android.remote.presentation.controller.AlbumListController$1;
        specialinvoke $r259.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r258);
        $r260 = new android.view.View;
        specialinvoke $r260.<android.view.View: void <init>(android.content.Context)>($r236);
        virtualinvoke $r259.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r260, 0, 0L);
        $r260 = null;
        if $i0 == 205 goto label41;

        if $i0 == 206 goto label41;

        virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()>();
        $r261 = new android.os.Bundle;
        specialinvoke $r261.<android.os.Bundle: void <init>()>();
        virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r261);
        $r261 = null;
        if $i0 == 207 goto label40;

        if $i0 == 208 goto label42;

        if $i0 == 209 goto label39;

     label42:
        if $i0 == 211 goto label44;

        $r262 = new org.xbmc.android.remote.presentation.activity.MediaIntentActivity;
        specialinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void <init>()>();
        if $i0 == 212 goto label44;

        $r263 = new android.os.Bundle;
        specialinvoke $r263.<android.os.Bundle: void <init>()>();
        virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)>($r263);
        $r263 = null;

     label43:
        virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()>();
        virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()>();
        if $i0 == 214 goto label43;

        if $i0 == 215 goto label44;

        if $i0 == 216 goto label43;

     label44:
        if $i0 == 218 goto label48;

        $r264 = new org.xbmc.android.remote.presentation.activity.MovieLibraryActivity;
        specialinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void <init>()>();
        if $i0 == 219 goto label48;

        $r265 = new android.os.Bundle;
        specialinvoke $r265.<android.os.Bundle: void <init>()>();
        virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)>($r265);
        $r265 = null;

     label45:
        $r266 = new android.os.Bundle;
        specialinvoke $r266.<android.os.Bundle: void <init>()>();
        virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r266);
        $r266 = null;
        $r267 = new android.os.Bundle;
        specialinvoke $r267.<android.os.Bundle: void <init>()>();
        virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r267);
        $r267 = null;

     label46:
        virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()>();

     label47:
        $r268 = new org.xbmc.android.remote.presentation.controller.MovieListController;
        specialinvoke $r268.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>();
        $r269 = new org.xbmc.android.remote.presentation.controller.MovieListController$6;
        specialinvoke $r269.<org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r268);
        virtualinvoke $r269.<org.xbmc.android.remote.presentation.controller.MovieListController$6: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r270 = new org.xbmc.android.remote.presentation.controller.MovieListController;
        specialinvoke $r270.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>();
        $r271 = new org.xbmc.android.remote.presentation.controller.MovieListController$5;
        specialinvoke $r271.<org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>($r270, $r264);
        virtualinvoke $r271.<org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r272 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener;
        specialinvoke $r272.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>();
        $r273 = new android.view.View;
        specialinvoke $r273.<android.view.View: void <init>(android.content.Context)>($r264);
        $r274 = new android.view.KeyEvent;
        specialinvoke $r274.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z38 = virtualinvoke $r272.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r273, 0, $r274);
        $r273 = null;
        $r274 = null;
        $r275 = new org.xbmc.android.remote.presentation.controller.MovieListController;
        specialinvoke $r275.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>();
        $r276 = new org.xbmc.android.remote.presentation.controller.MovieListController$1;
        specialinvoke $r276.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r275);
        $r277 = new android.view.View;
        specialinvoke $r277.<android.view.View: void <init>(android.content.Context)>($r264);
        virtualinvoke $r276.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r277, 0, 0L);
        $r277 = null;
        $z39 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null);
        $z40 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r278 = new android.view.View;
        specialinvoke $r278.<android.view.View: void <init>(android.content.Context)>($r264);
        virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r278, null);
        $r278 = null;
        $r279 = new android.view.KeyEvent;
        specialinvoke $r279.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z41 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r279);
        $r279 = null;
        $z42 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        if $i0 == 229 goto label47;

        if $i0 == 230 goto label47;

        virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()>();
        $r280 = new android.os.Bundle;
        specialinvoke $r280.<android.os.Bundle: void <init>()>();
        virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r280);
        $r280 = null;
        if $i0 == 231 goto label46;

        if $i0 == 232 goto label48;

        if $i0 == 233 goto label45;

     label48:
        if $i0 == 235 goto label51;

        $r281 = new org.xbmc.android.remote.presentation.activity.PlaylistActivity;
        specialinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()>();
        if $i0 == 236 goto label51;

        $r282 = new android.os.Bundle;
        specialinvoke $r282.<android.os.Bundle: void <init>()>();
        virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)>($r282);
        $r282 = null;

     label49:
        virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()>();

     label50:
        $r283 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r283.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r284 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction;
        specialinvoke $r284.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r283, "");
        $r285 = new android.view.View;
        specialinvoke $r285.<android.view.View: void <init>(android.content.Context)>($r281);
        virtualinvoke $r284.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>($r285);
        $r285 = null;
        $r286 = new org.xbmc.android.remote.presentation.controller.MediaIntentController;
        specialinvoke $r286.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r281);
        $r287 = new org.xbmc.android.remote.presentation.controller.MediaIntentController$2;
        specialinvoke $r287.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r286);
        virtualinvoke $r287.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r288 = new org.xbmc.android.remote.presentation.controller.AbstractController$6;
        specialinvoke $r288.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r288.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r289 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener;
        specialinvoke $r289.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>();
        $r290 = new android.view.View;
        specialinvoke $r290.<android.view.View: void <init>(android.content.Context)>($r281);
        $r291 = new android.view.KeyEvent;
        specialinvoke $r291.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z43 = virtualinvoke $r289.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r290, 0, $r291);
        $r290 = null;
        $r291 = null;
        $r292 = new org.xbmc.android.remote.presentation.controller.AbstractController$7;
        specialinvoke $r292.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r292.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r293 = new android.view.KeyEvent;
        specialinvoke $r293.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z44 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r293);
        $r293 = null;
        $z45 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)>(null);
        $r294 = new android.view.KeyEvent;
        specialinvoke $r294.<android.view.KeyEvent: void <init>(int,int)>(0, 0);
        $z46 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r294);
        $r294 = null;
        $z47 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null);
        $r295 = new android.view.View;
        specialinvoke $r295.<android.view.View: void <init>(android.content.Context)>($r281);
        virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r295, null);
        $r295 = null;
        $z48 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null);
        $r296 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r296.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r297 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4;
        specialinvoke $r297.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r296);
        $r298 = new android.view.View;
        specialinvoke $r298.<android.view.View: void <init>(android.content.Context)>($r281);
        virtualinvoke $r297.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>($r298);
        $r298 = null;
        $r299 = new org.xbmc.android.remote.presentation.controller.AbstractController$8;
        specialinvoke $r299.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r299.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r300 = new org.xbmc.android.remote.presentation.controller.AbstractController$5;
        specialinvoke $r300.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r300.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r301 = new org.xbmc.android.remote.presentation.controller.AbstractController$3;
        specialinvoke $r301.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r301.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r302 = new org.xbmc.android.remote.presentation.controller.AbstractController$4;
        specialinvoke $r302.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null);
        virtualinvoke $r302.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0);
        $r303 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController;
        specialinvoke $r303.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>();
        $r304 = new org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3;
        specialinvoke $r304.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r303);
        $r305 = new android.view.View;
        specialinvoke $r305.<android.view.View: void <init>(android.content.Context)>($r281);
        virtualinvoke $r304.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r305, 0, 0L);
        $r305 = null;
        if $i0 == 254 goto label50;

        if $i0 == 255 goto label50;

        virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()>();
        if $i0 == 256 goto label49;

        if $i0 == 257 goto label51;

        if $i0 == 258 goto label49;

     label51:
        if $i0 == 260 goto label02;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 2.1 seconds.
[Spark] Solution found in 2.1 seconds.
CLINIT edge: $r0 = new org.xbmc.android.remote.business.provider.HostProvider in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
CLINIT edge: $r305 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r298 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r295 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r294 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r293 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r291 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r290 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r289 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r285 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r282 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r281 = new org.xbmc.android.remote.presentation.activity.PlaylistActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r280 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r279 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r278 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r277 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r274 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r273 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r272 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r267 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r266 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r265 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r264 = new org.xbmc.android.remote.presentation.activity.MovieLibraryActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r263 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r262 = new org.xbmc.android.remote.presentation.activity.MediaIntentActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r261 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r260 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r257 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r252 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r251 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r250 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r247 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r246 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r245 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r244 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r239 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r238 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r237 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r236 = new org.xbmc.android.remote.presentation.activity.MusicLibraryActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r234 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r233 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r232 = new org.xbmc.android.remote.presentation.activity.SettingsActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r231 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r230 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r229 = new org.xbmc.android.remote.presentation.activity.AboutActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r228 = new android.content.Intent in <dummyMainClass: void dummyMainMethod()> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r227 = new org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()>
CLINIT edge: staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
CLINIT edge: $r226 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r225 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r221 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r220 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r220 = new org.xbmc.android.remote.presentation.activity.MovieDetailsActivity in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
CLINIT edge: $r219 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r218 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r217 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r216 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r215 = new org.xbmc.android.remote.presentation.activity.ListActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r211 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r210 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r209 = new org.xbmc.android.remote.presentation.activity.HostSettingsActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r208 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r201 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r200 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r198 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r192 = new android.widget.SeekBar in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r191 = new android.widget.SeekBar in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r188 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r185 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r184 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r183 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r180 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r177 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r170 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r167 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r164 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r161 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r158 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r155 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r154 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r149 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r145 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r142 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r139 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r136 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r133 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r131 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r128 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r125 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r123 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r119 = new android.widget.LinearLayout in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r118 = new android.widget.Button in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r114 = new android.widget.TextView in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r108 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r106 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r104 = new android.widget.LinearLayout in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r103 = new android.widget.Button in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r99 = new android.widget.TextView in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r95 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r92 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r89 = new android.widget.GridView in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r88 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r85 = new android.widget.GridView in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r84 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r82 = new org.xbmc.android.widget.slidingtabs.SlidingTabWidget in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r81 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r72 = new android.widget.GridView in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r71 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r68 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r65 = new org.xbmc.android.remote.presentation.activity.NowPlayingActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r64 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r63 = new org.xbmc.android.remote.presentation.activity.HomeActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r62 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r61 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r58 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r55 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r52 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r51 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r50 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r49 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r46 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r45 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r44 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r43 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r42 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r41 = new org.xbmc.android.remote.presentation.activity.MusicGenreActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r40 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r39 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r36 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r35 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r34 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r31 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r28 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r27 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r26 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r25 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r22 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r21 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r20 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r19 = new org.xbmc.android.remote.presentation.activity.MusicArtistActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r18 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r17 = new android.view.MotionEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.MotionEvent: void <clinit>()>
CLINIT edge: $r16 = new android.view.KeyEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r15 = new android.view.MotionEvent in <dummyMainClass: void dummyMainMethod()> ==> <android.view.MotionEvent: void <clinit>()>
CLINIT edge: $r14 = new android.view.View in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r11 = new android.os.Bundle in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: $r10 = new org.xbmc.android.remote.presentation.activity.RemoteActivity in <dummyMainClass: void dummyMainMethod()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r8 = new android.content.ContentValues in <dummyMainClass: void dummyMainMethod()> ==> <android.content.ContentValues: void <clinit>()>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <dummyMainClass: void dummyMainMethod()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r4 = newarray (java.lang.String)[1] in <dummyMainClass: void dummyMainMethod()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = newarray (java.lang.String)[1] in <dummyMainClass: void dummyMainMethod()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = new android.content.ContentValues in <dummyMainClass: void dummyMainMethod()> ==> <android.content.ContentValues: void <clinit>()>
CLINIT edge: $r1 = newarray (java.lang.String)[1] in <dummyMainClass: void dummyMainMethod()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> = $r0 in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> = $r8 in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: int[] sStarImages> = $r0 in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: int[] sStarImages> = $r0 in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: <android.view.View: int[] EMPTY_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_ENABLED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_FOCUSED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] PRESSED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_FOCUSED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] SELECTED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] FOCUSED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] FOCUSED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] WINDOW_FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] SELECTED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] FOCUSED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.View: int[] ENABLED_STATE_SET> = null in <android.view.View: void <clinit>()> ==> <android.view.View: void <clinit>()>
CLINIT edge: <android.view.KeyEvent: android.os.Parcelable$Creator CREATOR> = null in <android.view.KeyEvent: void <clinit>()> ==> <android.view.KeyEvent: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[$i1] in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean sHandleMenuLongPress> = 0 in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: java.lang.String[] DEVICES_HANDLE_MENU_LONGPRESS> in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r1 = <android.os.Build: java.lang.String MODEL> in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: java.lang.String[] DEVICES_HANDLE_MENU_LONGPRESS> in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean sHandleMenuLongPress> = 1 in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: java.lang.String[] DEVICES_HANDLE_MENU_LONGPRESS> = $r0 in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: <android.os.Bundle: android.os.Bundle EMPTY> = null in <android.os.Bundle: void <clinit>()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: <android.os.Bundle: android.os.Parcelable$Creator CREATOR> = null in <android.os.Bundle: void <clinit>()> ==> <android.os.Bundle: void <clinit>()>
CLINIT edge: <android.app.Activity: int[] FOCUSED_STATE_SET> = null in <android.app.Activity: void <clinit>()> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: <android.content.Intent: android.os.Parcelable$Creator CREATOR> = null in <android.content.Intent: void <clinit>()> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: int sPlayState> = -1 in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()>
CLINIT edge: <android.view.MotionEvent: android.os.Parcelable$Creator CREATOR> = null in <android.view.MotionEvent: void <clinit>()> ==> <android.view.MotionEvent: void <clinit>()>
CLINIT edge: <android.content.ContentValues: android.os.Parcelable$Creator CREATOR> = null in <android.content.ContentValues: void <clinit>()> ==> <android.content.ContentValues: void <clinit>()>
CLINIT edge: <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = null in <java.lang.String: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String ID> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String HOST> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String USER> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: long TIME> = 0L in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String FINGERPRINT> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String TAGS> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String TYPE> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String MODEL> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String BRAND> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String MANUFACTURER> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String CPU_ABI> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String BOARD> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String DEVICE> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String PRODUCT> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
CLINIT edge: <android.os.Build: java.lang.String DISPLAY> = null in <android.os.Build: void <clinit>()> ==> <android.os.Build: void <clinit>()>
SPECIAL edge: specialinvoke $r8.<java.util.HashMap: void <init>()>() in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: void <init>()>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("_id", "_id") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", "name") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("address", "address") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http_port", "http_port") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("user", "user") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pass", "pass") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("esport", "esport") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeout", "timeout") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("wifi_only", "wifi_only") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("access_point", "access_point") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("mac_addr", "mac_addr") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("wol_port", "wol_port") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("wol_wait", "wol_wait") in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<android.content.UriMatcher: void <init>(int)>(-1) in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <android.content.UriMatcher: void <init>(int)>
VIRTUAL edge: virtualinvoke $r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("org.xbmc.android.provider.remote", "hosts", 1) in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r0.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("org.xbmc.android.provider.remote", "hosts/#", 2) in <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()> ==> <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.UriMatcher: void <init>(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.UriMatcher: void <init>(int)> ==> <java.lang.Object: void <init>()>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r305.<android.view.View: void <init>(android.content.Context)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
FINALIZE edge: null in <android.view.View: void <init>(android.content.Context)> ==> <android.view.View: void finalize()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.view.View: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r304.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r303) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
VIRTUAL edge: virtualinvoke $r304.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r305, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
STATIC edge: $r10 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i0 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $r13 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IMusicManager access$9(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IMusicManager access$9(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i0 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.business.DataResponse: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r303.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r302.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r302.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.settings.WIRELESS_SETTINGS") in <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.Intent: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r301.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r301.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/SettingsActivity") in <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r300.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r300.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/SettingsActivity") in <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r299.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r299.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/SettingsActivity") in <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r298.<android.view.View: void <init>(android.content.Context)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r297.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r296) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
VIRTUAL edge: virtualinvoke $r297.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>($r298) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$10(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$10(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$11(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$11(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$11(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$11(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r296.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r295.<android.view.View: void <init>(android.content.Context)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r294.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.KeyEvent: void <init>(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.view.KeyEvent: void <init>(int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r293.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r292.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r292.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.settings.WIRELESS_SETTINGS") in <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r291.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r290.<android.view.View: void <init>(android.content.Context)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r289.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
VIRTUAL edge: $z43 = virtualinvoke $r289.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r290, 0, $r291) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
CLINIT edge: $z1 = <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean sHandleMenuLongPress> in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
STATIC edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <java.lang.Character: char toLowerCase(char)>
STATIC edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <java.lang.Character: char toLowerCase(char)>
CLINIT edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <java.lang.Character: void <clinit>()>
CLINIT edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <java.lang.Character: void <clinit>()>
CLINIT edge: <java.lang.Character: java.lang.Class TYPE> = null in <java.lang.Character: void <clinit>()> ==> <java.lang.Character: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char toLowerCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i2 = virtualinvoke $r2.<android.view.KeyEvent: int getAction()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <android.view.KeyEvent: int getAction()>
VIRTUAL edge: $i2 = virtualinvoke $r2.<android.view.KeyEvent: int getAction()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <android.view.KeyEvent: int getAction()>
VIRTUAL edge: $c3 = virtualinvoke $r2.<android.view.KeyEvent: char getDisplayLabel()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <android.view.KeyEvent: char getDisplayLabel()>
VIRTUAL edge: $c3 = virtualinvoke $r2.<android.view.KeyEvent: char getDisplayLabel()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <android.view.KeyEvent: char getDisplayLabel()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.KeyEvent: char getDisplayLabel()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.KeyEvent: int getAction()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z1 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)>
SPECIAL edge: $z1 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyUp(android.view.View,android.view.KeyEvent)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyUp(android.view.View,android.view.KeyEvent)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<android.view.KeyEvent: int getRepeatCount()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)> ==> <android.view.KeyEvent: int getRepeatCount()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.KeyEvent: int getRepeatCount()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)> ==> <android.view.View: android.content.Context getContext()>
VIRTUAL edge: $r7 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)> ==> <android.view.View: android.os.IBinder getWindowToken()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: android.os.IBinder getWindowToken()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: android.content.Context getContext()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r288.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r288.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>($r2, 0) in <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/SettingsActivity") in <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r287.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r286) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
VIRTUAL edge: virtualinvoke $r287.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r286.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.android.remote.business.EventClientManager sEventClientManager> = null in <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ControlManager control(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ControlManager control(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.InfoManager info(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.InfoManager info(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ControlManager control(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.InfoManager info(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>(50L) in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()> ==> <java.lang.Thread: void sleep(long)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void sleep(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.business.ManagerThread: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()> ==> <org.xbmc.android.remote.business.ManagerThread: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.ManagerThread: void start()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r1.<org.xbmc.android.remote.business.ManagerThread: void start()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()> ==> <org.xbmc.android.remote.business.ManagerThread: void run()>
CLINIT edge: $r2 = new org.xbmc.android.remote.business.InfoManager in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: $r5 = new org.xbmc.android.remote.business.VideoManager in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: $r4 = new org.xbmc.android.remote.business.MusicManager in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: $r3 = new org.xbmc.android.remote.business.ControlManager in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
STATIC edge: staticinvoke <android.os.Looper: void prepare()>() in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <android.os.Looper: void prepare()>
STATIC edge: staticinvoke <android.os.Looper: void loop()>() in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <android.os.Looper: void loop()>
CLINIT edge: $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.remote.business.AbstractManager: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.remote.business.AbstractManager: void <clinit>()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: <org.xbmc.android.remote.business.AbstractManager: java.lang.Boolean DEBUG> = $r0 in <org.xbmc.android.remote.business.AbstractManager: void <clinit>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: <java.lang.Boolean: java.lang.Class TYPE> = null in <java.lang.Boolean: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: <java.lang.Boolean: java.lang.Boolean FALSE> = null in <java.lang.Boolean: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: <java.lang.Boolean: java.lang.Boolean TRUE> = null in <java.lang.Boolean: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Looper: void loop()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Looper: void prepare()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<android.os.Handler: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <android.os.Handler: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.os.Handler: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.business.VideoManager: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.VideoManager: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.AbstractManager: void <init>()>() in <org.xbmc.android.remote.business.VideoManager: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.util.ArrayList: void <init>()>() in <org.xbmc.android.remote.business.AbstractManager: void <init>()> ==> <java.util.ArrayList: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.AbstractManager: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.MusicManager: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.AbstractManager: void <init>()>() in <org.xbmc.android.remote.business.MusicManager: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <init>()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.ControlManager: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.ControlManager: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.AbstractManager: void <init>()>() in <org.xbmc.android.remote.business.ControlManager: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <init>()>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.business.InfoManager: void <init>()>() in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <org.xbmc.android.remote.business.InfoManager: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.AbstractManager: void <init>()>() in <org.xbmc.android.remote.business.InfoManager: void <init>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("ManagerThread") in <org.xbmc.android.remote.business.ManagerThread: void <init>()> ==> <java.lang.Thread: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.InfoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.InfoManager info(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.ControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ControlManager control(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
CLINIT edge: staticinvoke <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)>
CLINIT edge: <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> = null in <org.xbmc.android.util.HostFactory: void <clinit>()> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)>($r0, $i0) in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)>
STATIC edge: $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
CLINIT edge: <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> = $r3 in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)>($r0, $i0) in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> = $r3 in <org.xbmc.android.util.HostFactory: void readHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.provider.HostProvider$Hosts: android.net.Uri CONTENT_URI> in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)> ==> <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
STATIC edge: $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, $l1) in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)> ==> <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
CLINIT edge: $r1 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)> ==> <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>
CLINIT edge: $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://org.xbmc.android.provider.remote/hosts") in <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
STATIC edge: $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://org.xbmc.android.provider.remote/hosts") in <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()> ==> <android.net.Uri: android.net.Uri parse(java.lang.String)>
CLINIT edge: <org.xbmc.android.remote.business.provider.HostProvider$Hosts: android.net.Uri CONTENT_URI> = $r1 in <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()> ==> <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.remote.business.provider.HostProvider$Hosts: android.net.Uri CONTENT_URI> in <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)> ==> <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
CLINIT edge: <android.net.Uri: android.net.Uri EMPTY> = null in <android.net.Uri: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: <android.net.Uri: android.os.Parcelable$Creator CREATOR> = null in <android.net.Uri: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>() in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0) in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)> ==> <java.util.ArrayList: java.lang.Object get(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.net.Uri: android.net.Uri parse(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.api.object.Host: void <init>()>() in <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)> ==> <org.xbmc.api.object.Host: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.object.Host: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7) in <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.api.object.Host: void <init>()>() in <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)> ==> <org.xbmc.api.object.Host: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: android.content.Context getApplicationContext()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r285.<android.view.View: void <init>(android.content.Context)>($r281) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r284.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r283, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
VIRTUAL edge: virtualinvoke $r284.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>($r285) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r283.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r282.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Bundle: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.os.Bundle: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)>($r282) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()>
VIRTUAL edge: $z44 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r293) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z45 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z46 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r294) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: $z47 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r295, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z48 = virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r281.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()>
CLINIT edge: $r1 = new org.xbmc.android.util.KeyTracker in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
STATIC edge: $r11 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: <org.xbmc.android.util.KeyTracker: int LONG_PRESS_DURATION_MS> = $i0 in <org.xbmc.android.util.KeyTracker: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
STATIC edge: $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>() in <org.xbmc.android.util.KeyTracker: void <clinit>()> ==> <android.view.ViewConfiguration: int getLongPressTimeout()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.android.remote.business.EventClientManager sEventClientManager> in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.android.remote.business.EventClientManager sEventClientManager> in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.android.remote.business.EventClientManager sEventClientManager> in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.android.remote.business.EventClientManager sEventClientManager> = $r1 in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r1 = new org.xbmc.android.remote.business.EventClientManager in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.EventClientManager: void <clinit>()>
CLINIT edge: $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.remote.business.EventClientManager: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.remote.business.EventClientManager: void <clinit>()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: <org.xbmc.android.remote.business.EventClientManager: java.lang.Boolean DEBUG> = $r0 in <org.xbmc.android.remote.business.EventClientManager: void <clinit>()> ==> <org.xbmc.android.remote.business.EventClientManager: void <clinit>()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)>
CLINIT edge: $r2 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.net.Inet4Address: java.net.InetAddress getByName(java.lang.String)>($r4) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <java.net.Inet4Address: java.net.InetAddress getByName(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("EventClient: Cannot parse address \"") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.eventclient.EventClient: void <init>(java.net.InetAddress,int,java.lang.String)>($r1, $i0, "Android XBMC Remote") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.eventclient.EventClient: void <init>(java.net.InetAddress,int,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.eventclient.EventClient: void <init>(java.lang.String)>("Android XBMC Remote") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.eventclient.EventClient: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.eventclient.EventClient: void <init>(java.lang.String)>("Android XBMC Remote") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.eventclient.EventClient: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.eventclient.EventClient: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.eventclient.EventClient: void <init>(java.net.InetAddress,int,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)>($r1, $i0) in <org.xbmc.eventclient.EventClient: void <init>(java.net.InetAddress,int,java.lang.String)> ==> <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)>
CLINIT edge: $r2 = new org.xbmc.eventclient.PacketHELO in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EventClient", $r5) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
CLINIT edge: $r2 = new org.xbmc.eventclient.PacketHELO in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: <org.xbmc.eventclient.Packet: int uid> = $i0 in <org.xbmc.eventclient.Packet: void <clinit>()> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: $d0 = staticinvoke <java.lang.Math: double random()>() in <org.xbmc.eventclient.Packet: void <clinit>()> ==> <java.lang.Math: double random()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.util.Log: int i(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.eventclient.EventClient$PingThread: void <init>(java.net.InetAddress,int,int)>($r1, $i0, 20000) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.EventClient$PingThread: void <init>(java.net.InetAddress,int,int)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.eventclient.EventClient$PingThread: void start()>() in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r7.<org.xbmc.eventclient.EventClient$PingThread: void start()>() in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.EventClient$PingThread: void run()>
CLINIT edge: $r2 = new org.xbmc.eventclient.PacketPING in <org.xbmc.eventclient.EventClient$PingThread: void run()> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>($l1) in <org.xbmc.eventclient.EventClient$PingThread: void run()> ==> <java.lang.Thread: void sleep(long)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.eventclient.PacketPING: void <init>()>() in <org.xbmc.eventclient.EventClient$PingThread: void run()> ==> <org.xbmc.eventclient.PacketPING: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.eventclient.PacketPING: void send(java.net.InetAddress,int)>($r3, $i0) in <org.xbmc.eventclient.EventClient$PingThread: void run()> ==> <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r2.<java.net.DatagramPacket: void <init>(byte[],int)>($r3, $i3) in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <java.net.DatagramPacket: void <init>(byte[],int)>
VIRTUAL edge: virtualinvoke $r2.<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>($r1) in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <java.net.DatagramPacket: void setAddress(java.net.InetAddress)>
VIRTUAL edge: virtualinvoke $r2.<java.net.DatagramPacket: void setPort(int)>($i0) in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <java.net.DatagramPacket: void setPort(int)>
SPECIAL edge: specialinvoke $r4.<java.net.DatagramSocket: void <init>()>() in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <java.net.DatagramSocket: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r2) in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <java.net.DatagramSocket: void send(java.net.DatagramPacket)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<org.xbmc.eventclient.Packet: int getNumPackets()>() in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.Packet: int getNumPackets()>
SPECIAL edge: $r3 = specialinvoke $r0.<org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)>($i2) in <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, 32) in <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)> ==> <java.lang.System: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, $r1, 32, $s1) in <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, 32) in <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, $r1, 32, $s1) in <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)> ==> <java.lang.System: void <clinit>()>
SPECIAL edge: $r2 = specialinvoke $r0.<org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)>($i0, $i2, $s1) in <org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)> ==> <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 22, 10) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 18, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i1) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 16, 2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 12, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i1) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 8, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i0) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 6, 2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s6) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 22, 10) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 18, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i1) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: $i1 = <org.xbmc.eventclient.Packet: int uid> in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 16, 2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 12, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i1) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 8, 4) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i0) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 6, 2) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s6) in <org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(5) in <org.xbmc.eventclient.PacketPING: void <init>()> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.eventclient.Packet: void <init>(short)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("XBMC EventClient Ping-Thread") in <org.xbmc.eventclient.EventClient$PingThread: void <init>(java.net.InetAddress,int,int)> ==> <java.lang.Thread: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])>($r5, $b1, $r6) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.eventclient.PacketHELO: void send(java.net.InetAddress,int)>($r1, $i0) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)>($r5) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(1) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(java.lang.String)>($r1) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(byte)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(short)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void appendPayload(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(int)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void appendPayload(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(int)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)> ==> <org.xbmc.eventclient.Packet: void appendPayload(int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0) in <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)> ==> <java.lang.System: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i1) in <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 0, $i0) in <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i1) in <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s0) in <org.xbmc.eventclient.Packet: void appendPayload(short)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>($s0) in <org.xbmc.eventclient.Packet: void appendPayload(short)> ==> <org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>
CLINIT edge: $r1 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i0) in <org.xbmc.eventclient.Packet: void appendPayload(int)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>($i0) in <org.xbmc.eventclient.Packet: void appendPayload(int)> ==> <org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.Packet: void appendPayload(byte[])>($r1) in <org.xbmc.eventclient.Packet: void appendPayload(int)> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte[])>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0) in <org.xbmc.eventclient.Packet: void appendPayload(byte[])> ==> <java.lang.System: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, $i0, $i1) in <org.xbmc.eventclient.Packet: void appendPayload(byte[])> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0) in <org.xbmc.eventclient.Packet: void appendPayload(byte[])> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, $i0, $i1) in <org.xbmc.eventclient.Packet: void appendPayload(byte[])> ==> <java.lang.System: void <clinit>()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.Packet: void appendPayload(byte[])>($r1) in <org.xbmc.eventclient.Packet: void appendPayload(short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte[])>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.Packet: void appendPayload(byte[])>($r1) in <org.xbmc.eventclient.Packet: void appendPayload(byte)> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte[])>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(1) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(java.lang.String)>($r1) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(byte)>($b0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(short)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(int)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(int)>(0) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketHELO: void appendPayload(byte[])>($r2) in <org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte[])>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Starting new EventClient at ") in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>() in <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.data.IEventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>($r1, $r2, $z0, $z1, $z2, $s0, $b1) in <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
CLINIT edge: $r3 = new org.xbmc.eventclient.PacketBUTTON in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("EventClient", $r6) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.eventclient.PacketBUTTON: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>($r1, $r2, $z0, $z1, $z2, $s0, $b1) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.PacketBUTTON: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.eventclient.PacketBUTTON: void send(java.net.InetAddress,int)>($r7, $i2) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(3) in <org.xbmc.eventclient.PacketBUTTON: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)>(0, $r1, $r2, $z0, $z1, $z2, $s0, $b1, 1) in <org.xbmc.eventclient.PacketBUTTON: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(short)>($s0) in <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(short)>($s3) in <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(short)>($s1) in <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(short)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(java.lang.String)>($r1) in <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketBUTTON: void appendPayload(java.lang.String)>($r2) in <org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendButton(") in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)> ==> <java.lang.StringBuilder: java.lang.String toString()>
INTERFACE edge: interfaceinvoke $r0.<org.xbmc.api.business.INotifiableManager: void onMessage(java.lang.String)>($r4) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.EventClientManager: void onMessage(java.lang.String)>
INTERFACE edge: interfaceinvoke $r0.<org.xbmc.api.business.INotifiableManager: void onMessage(java.lang.String)>("EventClient: Failed to read host settings.") in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.EventClientManager: void onMessage(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.ViewConfiguration: int getLongPressTimeout()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.business.EventClientManager: void <init>()>() in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.EventClientManager: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.EventClientManager: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void <init>(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void <init>(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void <init>(android.app.Activity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onPause()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z2 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()> ==> <android.app.Activity: void onResume()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onResume()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)>(0) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)>
STATIC edge: $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: boolean isKeyguardDisabled(android.content.SharedPreferences)>($r1) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: boolean isKeyguardDisabled(android.content.SharedPreferences)>
SPECIAL edge: specialinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)>($r0, $r7) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)>($r2, $r8, $r9, $r10) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r8, 2130837564) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r8, 2130837570) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r14 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r6 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.MusicManager music(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.MusicManager music(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.MusicManager music(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.MusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.MusicManager music(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r0, "skipminus") in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r0, "stop") in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r0, "skipplus") in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$2: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,org.xbmc.android.remote.presentation.activity.PlaylistActivity)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$2: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,org.xbmc.android.remote.presentation.activity.PlaylistActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$2: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,org.xbmc.android.remote.presentation.activity.PlaylistActivity)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r7.<android.os.Handler: void <init>(android.os.Handler$Callback)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.os.Handler: void <init>(android.os.Handler$Callback)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: void <init>(android.os.Handler$Callback)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.os.Handler: void <init>(android.os.Handler$Callback)> ==> <java.lang.Object: void <init>()>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IMusicManager: void getPlaylistPosition(org.xbmc.api.business.DataResponse,android.content.Context)>($r10, $r11) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void getPlaylistPosition(org.xbmc.api.business.DataResponse,android.content.Context)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IMusicManager: void getPlaylist(org.xbmc.api.business.DataResponse,android.content.Context)>($r12, $r11) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void getPlaylist(org.xbmc.api.business.DataResponse,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$27: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.MusicManager: void getPlaylist(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$27: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$27: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$28: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.MusicManager: void getPlaylistPosition(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$28: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$28: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: boolean isCreated()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: boolean isCreated()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.android.widget.IdleListener setupIdleListener()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setTitle(java.lang.String)>("Music playlist...") in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.widget.IdleListDetector: void <init>(org.xbmc.android.widget.IdleListDetector$OnListIdleListener)>($r2) in <org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()> ==> <org.xbmc.android.widget.IdleListDetector: void <init>(org.xbmc.android.widget.IdleListDetector$OnListIdleListener)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector,org.xbmc.android.widget.IdleListDetector$ScrollHandler)>($r0, null) in <org.xbmc.android.widget.IdleListDetector: void <init>(org.xbmc.android.widget.IdleListDetector$OnListIdleListener)> ==> <org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector,org.xbmc.android.widget.IdleListDetector$ScrollHandler)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector)>($r1) in <org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector,org.xbmc.android.widget.IdleListDetector$ScrollHandler)> ==> <org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector)>
SPECIAL edge: specialinvoke $r0.<android.os.Handler: void <init>()>() in <org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector)> ==> <android.os.Handler: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.widget.IdleListDetector: void <init>(org.xbmc.android.widget.IdleListDetector$OnListIdleListener)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.widget.IdleListener: void <init>(android.widget.AbsListView)>($r3) in <org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()> ==> <org.xbmc.android.widget.IdleListener: void <init>(android.widget.AbsListView)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.widget.IdleListener: void <init>(android.widget.AbsListView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void setContentView(int)>(2130903056) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968655) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968667) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968668) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968669) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968669) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968670) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968654) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r8 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968656) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968655) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r10 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.view.View findViewById(int)>(2130968657) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: android.view.View findViewById(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void setContentView(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onCreate(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void registerForContextMenu(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.app.Activity: void registerForContextMenu(android.view.View)>
VIRTUAL edge: $r8 = virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.content.res.Resources getResources()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
VIRTUAL edge: $r8 = virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: android.content.res.Resources getResources()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: android.content.res.Resources getResources()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void registerForContextMenu(android.view.View)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.PlaylistActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.PlaylistActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.PlaylistActivity)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
CLINIT edge: $r1 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage SHORT_REPEAT> in <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$Stage in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage[] ENUM$VALUES> = $r2 in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage UP> in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage LONG_REPEAT> in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage SHORT_REPEAT> in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage DOWN> in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r2 = newarray (org.xbmc.android.util.KeyTracker$Stage)[4] in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage UP> = $r0 in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$Stage in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage LONG_REPEAT> = $r0 in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$Stage in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage SHORT_REPEAT> = $r0 in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$Stage in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage DOWN> = $r0 in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>("DOWN", 0) in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>("SHORT_REPEAT", 1) in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>("LONG_REPEAT", 2) in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>("UP", 3) in <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>($r2) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()> ==> <android.app.Activity: void <init>()>
FINALIZE edge: null in <android.app.Activity: void <init>()> ==> <android.app.Activity: void finalize()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.ContextThemeWrapper: void <init>()>() in <android.app.Activity: void <init>()> ==> <android.view.ContextThemeWrapper: void <init>()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.ContextThemeWrapper: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.content.ContextWrapper: void <init>(android.content.Context)>($r1) in <android.view.ContextThemeWrapper: void <init>()> ==> <android.content.ContextWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.content.Context: void <init>()>() in <android.content.ContextWrapper: void <init>(android.content.Context)> ==> <android.content.Context: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Context: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.Context: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r280.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r279.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r278.<android.view.View: void <init>(android.content.Context)>($r264) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r277.<android.view.View: void <init>(android.content.Context)>($r264) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r276.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r275) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
VIRTUAL edge: virtualinvoke $r276.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r277, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r5 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "org/xbmc/android/remote/presentation/activity/MovieDetailsActivity") in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("movie", $r10) in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r275.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r274.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r273.<android.view.View: void <init>(android.content.Context)>($r264) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r272.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
VIRTUAL edge: $z38 = virtualinvoke $r272.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r273, 0, $r274) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r271.<org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>($r270, $r264) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>
VIRTUAL edge: virtualinvoke $r271.<org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.MovieListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.MovieListController)>($r2) in <org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.MovieListController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.MovieListController$5$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController$5,android.app.Activity)>($r0, $r4) in <org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$5$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController$5,android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$5$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController$5,android.app.Activity)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r270.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r269.<org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r268) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
VIRTUAL edge: virtualinvoke $r269.<org.xbmc.android.remote.presentation.controller.MovieListController$6: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$6: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r268.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r267.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r266.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r265.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)>($r265) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r266) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r267) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()>
VIRTUAL edge: $z39 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z40 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r278, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z41 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r279) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z42 = virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r264.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r280) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>
STATIC edge: $r15 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r8 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r8 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("currentTab", $r2) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)> ==> <android.os.Bundle: void putString(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Bundle: void putString(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>($r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)> ==> <android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <android.app.ActivityGroup: void onPause()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ActivityGroup: void onPause()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: $z4 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.ActivityGroup: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void startActivity(android.content.Intent)>($r8) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void startActivity(android.content.Intent)>($r8) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void startActivity(android.content.Intent)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <android.app.ActivityGroup: void onResume()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ActivityGroup: void onResume()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.ActivityGroup: void onPostCreate(android.os.Bundle)>($r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)> ==> <android.app.Activity: void onPostCreate(android.os.Bundle)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void setContentView(int)>(2130968577) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()> ==> <android.app.Activity: void setContentView(int)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onPostCreate(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("currentTab") in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)> ==> <android.os.Bundle: java.lang.String getString(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Bundle: java.lang.String getString(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.ActivityGroup: void onRestoreInstanceState(android.os.Bundle)>($r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)> ==> <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r15.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieLibraryActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieLibraryActivity)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieLibraryActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>(int)>(2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void <init>(int)>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.FileListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.FileListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController: void <init>(int)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>(2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.ActorListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.ActorListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.MovieListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.MovieListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)>($r0, $r10) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r16 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r15, 2130837654) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r1, $r3, $i0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r18 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>() in <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()> ==> <android.os.Environment: java.lang.String getExternalStorageState()>
STATIC edge: $d1 = staticinvoke <org.xbmc.android.util.ImportUtilities: double freePercentage()>() in <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()> ==> <org.xbmc.android.util.ImportUtilities: double freePercentage()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>() in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>() in <org.xbmc.android.util.ImportUtilities: double freePercentage()> ==> <android.os.Environment: java.io.File getExternalStorageDirectory()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Environment: java.io.File getExternalStorageDirectory()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.os.StatFs: void <init>(java.lang.String)>($r2) in <org.xbmc.android.util.ImportUtilities: double freePercentage()> ==> <android.os.StatFs: void <init>(java.lang.String)>
VIRTUAL edge: $i2 = virtualinvoke $r0.<android.os.StatFs: int getAvailableBlocks()>() in <org.xbmc.android.util.ImportUtilities: double freePercentage()> ==> <android.os.StatFs: int getAvailableBlocks()>
VIRTUAL edge: $i2 = virtualinvoke $r0.<android.os.StatFs: int getBlockCount()>() in <org.xbmc.android.util.ImportUtilities: double freePercentage()> ==> <android.os.StatFs: int getBlockCount()>
FINALIZE edge: null in <android.os.StatFs: void <init>(java.lang.String)> ==> <android.os.StatFs: void finalize()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.StatFs: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.StatFs: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.os.StatFs: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Environment: java.lang.String getExternalStorageState()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.VideoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.business.VideoManager: void setSortKey(int)>($i0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.VideoManager: void setSortKey(int)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.business.VideoManager: void setPreferences(android.content.SharedPreferences)>($r6) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.VideoManager: void setPreferences(android.content.SharedPreferences)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r18.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Displaying place holders only.") in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $z1 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: boolean isCreated()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: boolean isCreated()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: org.xbmc.android.widget.IdleListener setupIdleListener()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.MovieListController$4: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$4: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$4: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.MovieListController$3: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Genre)>($r0, $r2) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$3: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$3: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Genre)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.controller.MovieListController$2: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Actor)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$2: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Actor)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$2: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Actor)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Movies...") in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Movies...") in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: void setTitle(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: void setTitle(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.MovieListController: void setTitle(java.lang.String)>("Movies...") in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)>($r0, $r3) in <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()> ==> <org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)>
STATIC edge: $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)> ==> <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>($r2, 2130903049) in <org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)> ==> <android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void add(java.lang.Object)>("dummy") in <org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)> ==> <android.widget.ArrayAdapter: void add(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ArrayAdapter: void add(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ArrayAdapter: void <init>(android.content.Context,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.BaseAdapter: void <init>()>() in <android.widget.ArrayAdapter: void <init>(android.content.Context,int)> ==> <android.widget.BaseAdapter: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.BaseAdapter: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.widget.BaseAdapter: void <init>()> ==> <java.lang.Object: void <init>()>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IVideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Actor,android.content.Context)>($r7, $r1, $r9) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Actor,android.content.Context)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IVideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>($r10, $r2, $r9) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IVideoManager: void getMovies(org.xbmc.api.business.DataResponse,android.content.Context)>($r11, $r9) in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.VideoManager$2: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager$2: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.VideoManager$2: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.VideoManager$4: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager$4: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.VideoManager$4: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.VideoManager$3: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Actor)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Actor,android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager$3: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Actor)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.VideoManager$3: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Actor)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.ActivityGroup: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void setContentView(int)>(2130903051) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968632) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968632) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968633) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968634) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968634) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968636) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968636) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968638) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: android.view.View findViewById(int)>(2130968638) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ActivityGroup: void onCreate(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>($i0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: virtualinvoke $r1.<android.app.Activity: void registerForContextMenu(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: void registerForContextMenu(android.view.View)>
VIRTUAL edge: $r15 = virtualinvoke $r1.<android.app.Activity: android.content.res.Resources getResources()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: android.content.SharedPreferences getPreferences(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void <init>()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>
CLINIT edge: $r1 = new org.xbmc.android.util.KeyTracker in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabActivity)>($r0) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabActivity)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>($r2) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
SPECIAL edge: specialinvoke $r0.<android.app.ActivityGroup: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()> ==> <android.app.ActivityGroup: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ActivityGroup: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.app.Activity: void <init>()>() in <android.app.ActivityGroup: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r263.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)>($r263) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()>
VIRTUAL edge: virtualinvoke $r262.<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()> ==> <android.app.Activity: void onResume()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void setupStatusHandler()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void setupStatusHandler()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.controller.MediaIntentController$1: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void setupStatusHandler()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$1: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController$1: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r261.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r260.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r259.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r258) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
VIRTUAL edge: virtualinvoke $r259.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r260, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r5 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r14) in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("album", $r10) in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r258.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r257.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r256.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r255, $r236) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r256.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r257) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r255.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r254.<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r253) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
VIRTUAL edge: virtualinvoke $r254.<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.AlbumListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r2) in <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.AlbumListController$2$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController$2)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$2$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController$2)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$2$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController$2)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r253.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r252.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r251.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r250.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r249.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r248, $r236) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r249.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r250) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r248.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r247.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r246.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r245.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
VIRTUAL edge: $z33 = virtualinvoke $r245.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r246, 0, $r247) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r244.<android.view.View: void <init>(android.content.Context)>($r236) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r243.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r236, $r242, $r236) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r243.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r244) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>($r2, $r3, $r4, $r5) in <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
CLINIT edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r14 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)>($l1) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)>
STATIC edge: $r13 = staticinvoke <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)>($r7, $i0) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)>
STATIC edge: $r7 = staticinvoke <org.xbmc.api.type.MediaType: java.lang.String getArtFolder(int)>($i0) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.api.type.MediaType: java.lang.String getArtFolder(int)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(int)>
CLINIT edge: $r6 = new java.io.File in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.io.File: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%08x", $r2) in <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%08x", $r2) in <org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.api.type.ThumbSize: java.lang.String getDir(int)>($i0) in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <org.xbmc.api.type.ThumbSize: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)>($r2) in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.xbmc.api.type.ThumbSize: java.lang.String getDir(int)>($i0) in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <org.xbmc.api.type.ThumbSize: java.lang.String getDir(int)>
CLINIT edge: <java.lang.Integer: java.lang.Class TYPE> = null in <java.lang.Integer: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: <org.xbmc.api.type.ThumbSize: float PIXEL_SCALE> = $f0 in <org.xbmc.api.type.ThumbSize: void <clinit>()> ==> <org.xbmc.api.type.ThumbSize: void <clinit>()>
STATIC edge: $r0 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>() in <org.xbmc.api.type.ThumbSize: void <clinit>()> ==> <android.content.res.Resources: android.content.res.Resources getSystem()>
CLINIT edge: $r1 = new java.io.File in <org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)> ==> <java.io.File: void <clinit>()>
STATIC edge: $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>() in <org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)> ==> <android.os.Environment: java.io.File getExternalStorageDirectory()>
VIRTUAL edge: virtualinvoke $r6.<android.app.Dialog: void show()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)> ==> <android.app.Dialog: void show()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void show()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.res.Resources: android.content.res.Resources getSystem()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r0) in <org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)> ==> <java.io.File: void <init>(java.io.File,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("xbmc") in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0) in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r15.<org.xbmc.android.remote.presentation.activity.DialogFactory$6: void <init>(android.widget.TextView,android.app.Activity,org.xbmc.api.object.Album,android.widget.TableLayout)>($r10, $r1, $r2, $r12) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$6: void <init>(android.widget.TextView,android.app.Activity,org.xbmc.api.object.Album,android.widget.TableLayout)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$6: void <init>(android.widget.TextView,android.app.Activity,org.xbmc.api.object.Album,android.widget.TableLayout)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, $r7) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.io.File: void <init>(java.io.File,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.io.File: boolean exists()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.io.File: java.lang.String getAbsolutePath()>
SPECIAL edge: specialinvoke $r5.<android.app.Dialog: void <init>(android.content.Context)>($r1) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Dialog: void setContentView(int)>(2130903044) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void setContentView(int)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Dialog: void setTitle(java.lang.CharSequence)>($r7) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<android.app.Dialog: android.view.View findViewById(int)>(2130968588) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<android.app.Dialog: android.view.View findViewById(int)>(2130968591) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<android.app.Dialog: android.view.View findViewById(int)>(2130968599) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<android.app.Dialog: android.view.View findViewById(int)>(2130968589) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<android.app.Dialog: android.view.View findViewById(int)>(2130968602) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: android.view.View findViewById(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void setTitle(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void setContentView(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.app.Dialog: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r242.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r241.<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r240) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
VIRTUAL edge: virtualinvoke $r241.<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$3: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r240.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r239.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r238.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r237.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)>($r237) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r238) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r239) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()>
VIRTUAL edge: $z34 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z35 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z36 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z37 = virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r251) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r252, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r236.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r261) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>
STATIC edge: $r16 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r8 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r8 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <android.app.ActivityGroup: void onPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: $z4 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void startActivity(android.content.Intent)>($r8) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void startActivity(android.content.Intent)>($r8) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <android.app.ActivityGroup: void onResume()>
VIRTUAL edge: virtualinvoke $r16.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r15.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicLibraryActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicLibraryActivity)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicLibraryActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>
VIRTUAL edge: virtualinvoke $r14.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r14.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.ArtistListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.ArtistListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.FileListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.FileListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController: void <init>()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setGrid(android.widget.GridView)>($r10) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void setGrid(android.widget.GridView)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)>($r0, $r11) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setCompilationsOnly(boolean)>(1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void setCompilationsOnly(boolean)>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r15 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r14, 2130837530) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r1, $r3, $i0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r17 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
SPECIAL edge: specialinvoke $r16.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Displaying place holders only.") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.String toString()>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.ISortableManager: void setSortKey(int)>($i0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void setSortKey(int)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.ISortableManager: void setPreferences(android.content.SharedPreferences)>($r6) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void setPreferences(android.content.SharedPreferences)>
VIRTUAL edge: $z1 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: boolean isCreated()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: boolean isCreated()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: org.xbmc.android.widget.IdleListener setupIdleListener()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.AlbumListController$7: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$7: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$7: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.AlbumListController$6: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$6: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$6: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.AlbumListController$5: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Genre)>($r0, $r2) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$5: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$5: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Genre)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.controller.AlbumListController$4: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Artist)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$4: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Artist)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$4: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Artist)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Albums...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Albums...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setTitle(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setTitle(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setTitle(java.lang.String)>("Compilations...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void setTitle(java.lang.String)>("Albums...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IMusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>($r7, $r1, $r9) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IMusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>($r10, $r2, $r9) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IMusicManager: void getCompilations(org.xbmc.api.business.DataResponse,android.content.Context)>($r11, $r9) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.business.MusicManager: void getCompilations(org.xbmc.api.business.DataResponse,android.content.Context)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IMusicManager: void getAlbums(org.xbmc.api.business.DataResponse,android.content.Context)>($r12, $r9) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$2: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$2: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$2: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$1: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.MusicManager: void getCompilations(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$1: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$1: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$4: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$4: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$4: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$3: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$3: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$3: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.ActivityGroup: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void setContentView(int)>(2130903054) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968646) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968641) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968638) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968638) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968647) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968647) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968649) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968649) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968651) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: android.view.View findViewById(int)>(2130968651) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>($i0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r10 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r10 = virtualinvoke $r1.<android.app.Activity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r1.<android.app.Activity: void registerForContextMenu(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: void registerForContextMenu(android.view.View)>
VIRTUAL edge: $r14 = virtualinvoke $r1.<android.app.Activity: android.content.res.Resources getResources()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: android.content.Intent getIntent()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void <init>()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
CLINIT edge: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <java.lang.System: void <clinit>()>
STATIC edge: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <java.lang.System: long currentTimeMillis()>
CLINIT edge: $r2 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage SHORT_REPEAT> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage LONG_REPEAT> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $i2 = <org.xbmc.android.util.KeyTracker: int LONG_PRESS_DURATION_MS> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage DOWN> in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$State in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State[] ENUM$VALUES> = $r2 in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State DONE_TRACKING> in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r2 = newarray (org.xbmc.android.util.KeyTracker$State)[3] in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> = $r0 in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$State in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State DONE_TRACKING> = $r0 in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.android.util.KeyTracker$State in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> = $r0 in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>("KEEP_TRACKING", 0) in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>("DONE_TRACKING", 1) in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>("NOT_TRACKING", 2) in <org.xbmc.android.util.KeyTracker$State: void <clinit>()> ==> <org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
VIRTUAL edge: $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>() in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <android.view.KeyEvent: int getRepeatCount()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)>($r2, $l1) in <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)>
INTERFACE edge: $r4 = interfaceinvoke $r2.<org.xbmc.android.util.KeyTracker$OnKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i1, $r3, $r1, $i3) in <org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage LONG_REPEAT> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State DONE_TRACKING> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $r5 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage SHORT_REPEAT> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage LONG_REPEAT> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage UP> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <clinit>()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.ActivityGroup: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: int getFlags()>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>($i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: android.content.Intent setFlags(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: android.content.Intent setFlags(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: int getFlags()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: int getFlags()>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>($i1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: android.content.Intent setFlags(int)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: specialinvoke $r235.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r232) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
VIRTUAL edge: virtualinvoke $r235.<org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>(null, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("SettingsActivity", $r7) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("onSharedPreferenceChanged(") in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.util.Hashtable: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)> ==> <java.util.Hashtable: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
SPECIAL edge: specialinvoke $r234.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r233.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.SettingsActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)>($r233) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()>
VIRTUAL edge: $z32 = virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r234) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r232.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()> ==> <android.app.Activity: void onPause()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z4 = specialinvoke $r0.<android.preference.PreferenceActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void addPreferencesFromResource(int)>(2131034112) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
VIRTUAL edge: $r5 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r6 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.SettingsActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>($r6) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: void addPreferencesFromResource(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void <init>()> ==> <android.preference.PreferenceActivity: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.app.ListActivity: void <init>()>() in <android.preference.PreferenceActivity: void <init>()> ==> <android.app.ListActivity: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ListActivity: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.app.Activity: void <init>()>() in <android.app.ListActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r231.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r230.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.AboutActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)>($r230) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()>
VIRTUAL edge: $z31 = virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r231) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r229.<org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()>
CLINIT edge: $r4 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r12 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
STATIC edge: $r11 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
STATIC edge: $r10 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>("Visit our project page at <a href=\"http://code.google.com/p/android-xbmcremote\">Google Code</a>.") in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.text.Html: android.text.Spanned fromHtml(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: $z4 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("v") in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Revision ") in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: void setContentView(int)>(2130903040) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r5 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.content.pm.PackageManager getPackageManager()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: java.lang.String getPackageName()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.content.ContextWrapper: java.lang.String getPackageName()>
VIRTUAL edge: $r5 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.content.pm.PackageManager getPackageManager()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
VIRTUAL edge: $r7 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: java.lang.String getPackageName()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.content.ContextWrapper: java.lang.String getPackageName()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.view.View findViewById(int)>(2130968579) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.view.View findViewById(int)>(2130968580) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.view.View findViewById(int)>(2130968581) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.AboutActivity: android.view.View findViewById(int)>(2130968579) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: java.lang.String getPackageName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r228.<android.content.Intent: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.content.Intent: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.Intent: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r227.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r227.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, $r228) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r10 = staticinvoke <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])>($r1, $r31) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])>
STATIC edge: $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r29, 2130837527) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r20) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r12 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)>($r1, $r17, 2130837527, null) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)>
STATIC edge: $r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r17, $r4) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>($r1, $r4, $r6) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>($r1, $r6) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>
STATIC edge: $r13 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r18 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: int sPlayState> = -1 in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()>
CLINIT edge: $i2 = <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: int sPlayState> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()>
CLINIT edge: $r15 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.telephony.TelephonyManager: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r20) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r18 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: $r12 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)>($r1, $r17, 2130837527, null) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.provider.Contacts$People: void <clinit>()>
CLINIT edge: $r17 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r17, $r4) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r17 = <android.provider.Contacts$People: android.net.Uri CONTENT_URI> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.provider.Contacts$People: void <clinit>()>
CLINIT edge: $r6 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>($r1, $r4, $r6) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>($r1, $r6) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r4 = <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING> in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.telephony.TelephonyManager: void <clinit>()>
STATIC edge: $r6 = staticinvoke <android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>($r10) in <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])> ==> <android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>
CLINIT edge: $r3 = <android.provider.Contacts$People: android.net.Uri CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <android.provider.Contacts$People: void <clinit>()>
STATIC edge: $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>($r2) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
STATIC edge: $r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, $r1) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>($r2) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
CLINIT edge: $r6 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r3, $r1) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = <android.provider.Contacts$Phones: android.net.Uri CONTENT_FILTER_URL> in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <android.provider.Contacts$Phones: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, $r1) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: $r6 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, $r1) in <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r0 = new android.graphics.Bitmap$CompressFormat in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat[] $VALUES> = $r2 in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: $r4 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG> in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG> in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: $r2 = newarray (android.graphics.Bitmap$CompressFormat)[2] in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG> = $r1 in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: $r1 = new android.graphics.Bitmap$CompressFormat in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG> = $r0 in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <clinit>()>
CLINIT edge: <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_IDLE> = null in <android.telephony.TelephonyManager: void <clinit>()> ==> <android.telephony.TelephonyManager: void <clinit>()>
CLINIT edge: <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_OFFHOOK> = null in <android.telephony.TelephonyManager: void <clinit>()> ==> <android.telephony.TelephonyManager: void <clinit>()>
CLINIT edge: <android.telephony.TelephonyManager: java.lang.String EXTRA_STATE_RINGING> = null in <android.telephony.TelephonyManager: void <clinit>()> ==> <android.telephony.TelephonyManager: void <clinit>()>
CLINIT edge: <android.provider.Contacts$People: android.net.Uri CONTENT_URI> = null in <android.provider.Contacts$People: void <clinit>()> ==> <android.provider.Contacts$People: void <clinit>()>
CLINIT edge: <android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI> = null in <android.provider.Contacts$People: void <clinit>()> ==> <android.provider.Contacts$People: void <clinit>()>
CLINIT edge: <android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI> = null in <android.provider.Contacts$People: void <clinit>()> ==> <android.provider.Contacts$People: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms-sms/") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*\"([^\"]*)\"\\s*") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*(\"[^\"]*\"|[^<>\"]+)\\s*<([^<>]+)>\\s*") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "inbox") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri parse(java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "inbox") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri parse(java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "conversations") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "threadID") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms-sms/") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: android.net.Uri parse(java.lang.String)>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: java.util.regex.Pattern QUOTED_STRING_PATTERN> = $r3 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: java.util.regex.Pattern NAME_ADDR_EMAIL_PATTERN> = $r3 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_INBOX_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "inbox") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri SMS_INBOX_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "inbox") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri SMS_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri SMS_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri CONVERSATION_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "conversations") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_SMS_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri THREAD_ID_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "threadID") in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_SMS_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_SMS_CONTENT_URI> = $r2 in <org.xbmc.android.util.SmsPopupUtils: void <clinit>()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: <android.provider.Contacts$Phones: android.net.Uri CONTENT_URI> = null in <android.provider.Contacts$Phones: void <clinit>()> ==> <android.provider.Contacts$Phones: void <clinit>()>
CLINIT edge: <android.provider.Contacts$Phones: android.net.Uri CONTENT_FILTER_URL> = null in <android.provider.Contacts$Phones: void <clinit>()> ==> <android.provider.Contacts$Phones: void <clinit>()>
CLINIT edge: <java.lang.Long: java.lang.Class TYPE> = null in <java.lang.Long: void <clinit>()> ==> <java.lang.Long: void <clinit>()>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>($r6, "calling", 2, $r28) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "play", 1, 1, 1, 0, 0) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "play", 0, 0, 1, 0, 0) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>($r15, $r6, 2, $r28) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendNotification(java.lang.String,java.lang.String)>($r15, $r6) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.data.IEventClient: void sendNotification(java.lang.String,java.lang.String)>($r1, $r2) in <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)>
CLINIT edge: $r4 = new org.xbmc.eventclient.PacketNOTIFICATION in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
CLINIT edge: $r4 = new org.xbmc.eventclient.PacketNOTIFICATION in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])>($r1, $r2, $b0, $r5) in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.eventclient.PacketNOTIFICATION: void send(java.net.InetAddress,int)>($r3, $i1) in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String)>($r1, $r2) in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(7) in <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])>($r1, $r2, 0, null) in <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String)> ==> <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String)>($r1) in <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String)>($r2) in <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(byte)>($b0) in <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(int)>(0) in <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(byte[])>($r3) in <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void appendPayload(byte[])>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.Packet: void <init>(short)>(7) in <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void <init>(short)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])>($r1, $r2, $b0, $r3) in <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.data.IEventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>($r1, $r2, $b0, $r3) in <org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>
CLINIT edge: $r5 = new org.xbmc.eventclient.PacketNOTIFICATION in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void <clinit>()>
SPECIAL edge: specialinvoke $r5.<org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])>($r1, $r2, $b0, $r3) in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.eventclient.PacketNOTIFICATION: void send(java.net.InetAddress,int)>($r4, $i1) in <org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])> ==> <org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IControlManager: void getCurrentlyPlaying(org.xbmc.api.business.DataResponse,android.content.Context)>($r24, null) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.ControlManager: void getCurrentlyPlaying(org.xbmc.api.business.DataResponse,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.ControlManager$8: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.ControlManager: void getCurrentlyPlaying(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$8: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$8: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r12 = virtualinvoke $r10.<org.xbmc.android.util.SmsMmsMessage: android.graphics.Bitmap getContactPhoto()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: android.graphics.Bitmap getContactPhoto()>
VIRTUAL edge: $r15 = virtualinvoke $r10.<org.xbmc.android.util.SmsMmsMessage: java.lang.String getContactName()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: java.lang.String getContactName()>
VIRTUAL edge: $r6 = virtualinvoke $r10.<org.xbmc.android.util.SmsMmsMessage: java.lang.String getMessageBody()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: java.lang.String getMessageBody()>
VIRTUAL edge: $r15 = virtualinvoke $r10.<org.xbmc.android.util.SmsMmsMessage: java.lang.String getContactName()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: java.lang.String getContactName()>
VIRTUAL edge: $r6 = virtualinvoke $r10.<org.xbmc.android.util.SmsMmsMessage: java.lang.String getMessageBody()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.util.SmsMmsMessage: java.lang.String getMessageBody()>
STATIC edge: $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r3) in <org.xbmc.android.util.SmsMmsMessage: android.graphics.Bitmap getContactPhoto()> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1) in <org.xbmc.android.util.SmsMmsMessage: android.graphics.Bitmap getContactPhoto()> ==> <java.io.ByteArrayInputStream: void <init>(byte[])>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>("PNG", 1) in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0) in <android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>("JPEG", 0) in <android.graphics.Bitmap$CompressFormat: void <clinit>()> ==> <android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)>($r0, $r2, $r3, $l2, 0) in <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])> ==> <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
STATIC edge: $l3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)>
STATIC edge: $i1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)>($r1, $l3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>($r1, $r2, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>
CLINIT edge: $l3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $i1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)>($r1, $l3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)>($r1, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>($r1, $r2, $r3) in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri THREAD_ID_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $i2 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)>($r0, $l0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
STATIC edge: $i1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)>($r0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)> ==> <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)>($r0, $l0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)> ==> <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)>
CLINIT edge: $i1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)>($r0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = <android.provider.Contacts$Photos: android.net.Uri CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)> ==> <android.provider.Contacts$Photos: void <clinit>()>
STATIC edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, $r1) in <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)> ==> <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, $r1) in <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)> ==> <android.net.Uri: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("read") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("read") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r6 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri MMS_INBOX_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("read") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: java.lang.String valueOf(long)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("read") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r6 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri SMS_INBOX_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <android.provider.Contacts$Photos: android.net.Uri CONTENT_URI> = null in <android.provider.Contacts$Photos: void <clinit>()> ==> <android.provider.Contacts$Photos: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and date<") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2) in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0") in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.SmsMmsMessage: void setMessageId()>() in <org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)> ==> <org.xbmc.android.util.SmsMmsMessage: void setMessageId()>
CLINIT edge: $l1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)>($r1, $l0, $l1, $i2) in <org.xbmc.android.util.SmsMmsMessage: void setMessageId()> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)>($r1, $l0, $l1, $i2) in <org.xbmc.android.util.SmsMmsMessage: void setMessageId()> ==> <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)>
CLINIT edge: $r1 = <org.xbmc.android.util.SmsPopupUtils: android.net.Uri CONVERSATION_CONTENT_URI> in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
STATIC edge: $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, $l0) in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
CLINIT edge: $r5 = newarray (java.lang.String)[3] in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("date=") in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5) in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
VIRTUAL edge: $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
SPECIAL edge: specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("SMS Received from ") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r32 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r15 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("SMS Received from ") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r32 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r15 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.io.ByteArrayOutputStream: void <init>()>
VIRTUAL edge: $r28 = virtualinvoke $r19.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
VIRTUAL edge: $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PHONE_STATE") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r15) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("android.provider.Telephony.SMS_RECEIVED") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r24.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$1: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,org.xbmc.api.business.IEventClientManager,org.xbmc.api.business.IControlManager)>($r0, $r5, $r8) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$1: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,org.xbmc.api.business.IEventClientManager,org.xbmc.api.business.IControlManager)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$1: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,org.xbmc.api.business.IEventClientManager,org.xbmc.api.business.IControlManager)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r21.<android.os.Handler: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.os.Handler: void <init>()>
SPECIAL edge: specialinvoke $r20.<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,android.os.Handler)>($r0, $r21) in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,android.os.Handler)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,android.os.Handler)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.io.ByteArrayOutputStream: void <init>()>
VIRTUAL edge: $r28 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
VIRTUAL edge: $r6 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.content.Intent: java.lang.String getAction()>
VIRTUAL edge: $r6 = virtualinvoke $r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("state") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("incoming_number") in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<android.content.Intent: android.os.Bundle getExtras()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <android.content.Intent: android.os.Bundle getExtras()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: android.os.Bundle getExtras()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: java.lang.String getStringExtra(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: java.lang.String getAction()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <init>()> ==> <android.content.BroadcastReceiver: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.BroadcastReceiver: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.BroadcastReceiver: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r226.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r225.<android.view.View: void <init>(android.content.Context)>($r220) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r224.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r223) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
VIRTUAL edge: virtualinvoke $r224.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>($r225) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.business.IControlManager access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.business.IControlManager access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.object.Movie access$2(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.object.Movie access$2(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r223.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r220, $r222) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r4 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
SPECIAL edge: specialinvoke $r222.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r221.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)>($r221) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()>
VIRTUAL edge: $z30 = virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r226) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r220.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()>
CLINIT edge: $r13 = <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: int[] sStarImages> in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
STATIC edge: $r19 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.String: java.lang.String valueOf(double)>
STATIC edge: $l1 = staticinvoke <java.lang.Math: long round(double)>($d1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.Math: long round(double)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MovieDetailsActivity", $r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
STATIC edge: $l1 = staticinvoke <java.lang.Math: long round(double)>($d1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.Math: long round(double)>
CLINIT edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r13 = <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: int[] sStarImages> in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: $z4 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("rating = ") in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", index = ") in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r0, $r7) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void setupPlayButton(android.widget.Button)>($r14) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void setupPlayButton(android.widget.Button)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)>($r12) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r9, $r15, $r16, $r17, $r14, $r18) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r0, $r1, $r2, $r3, $r4, $r5, $r6) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$2: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.ImageView)>($r0, $r1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$2: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.ImageView)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$2: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.ImageView)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void setupPlayButton(android.widget.Button)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void setContentView(int)>(2130903050) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r6 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968724) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968620) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968624) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968625) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968626) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968621) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968630) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968619) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968622) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968627) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968628) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968629) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968631) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: android.view.View findViewById(int)>(2130968623) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r219.<android.view.View: void <init>(android.content.Context)>($r215) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r218.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r217.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r216.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)>($r216) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()>
VIRTUAL edge: $z25 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r217) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z26 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r218) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: $z27 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r219, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z28 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z29 = virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r215.<org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()>
CLINIT edge: $r1 = new org.xbmc.android.util.KeyTracker in <org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
STATIC edge: $r9 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r4 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r4 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: void startActivity(android.content.Intent)>($r4) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: void startActivity(android.content.Intent)>($r4) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
SPECIAL edge: $z2 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: void setContentView(int)>(2130903045) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r5 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: android.view.View findViewById(int)>(2130968603) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: android.view.View findViewById(int)>(2130968603) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ListActivity: android.view.View findViewById(int)>(2130968604) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.activity.ListActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.ListActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()> ==> <org.xbmc.android.remote.presentation.activity.ListActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.ListActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>() in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.ListActivity)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>($r2) in <org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r214.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r209) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
VIRTUAL edge: virtualinvoke $r214.<org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>(null, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
SPECIAL edge: specialinvoke $r213.<org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>($r212) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>
VIRTUAL edge: virtualinvoke $r213.<org.xbmc.android.remote.presentation.controller.SettingsController$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r212.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r209) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
SPECIAL edge: specialinvoke $r211.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r210.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)>($r210) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()>
VIRTUAL edge: $z22 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>(0, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
VIRTUAL edge: $z23 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r211) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z24 = virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r209.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()> ==> <android.app.Activity: void onPause()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
SPECIAL edge: $z0 = specialinvoke $r0.<android.preference.PreferenceActivity: boolean onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
SPECIAL edge: $z4 = specialinvoke $r0.<android.preference.PreferenceActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.preference.PreferenceActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)> ==> <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)>($r6, $r0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r7) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r7) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r9 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <java.util.AbstractList: java.util.Iterator iterator()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>($r0) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>
SPECIAL edge: specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("No hosts defined. In order to add hosts, press \"Menu\" and choose \"Add host\".") in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Close", $r12) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: $r13 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog create()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.app.AlertDialog$Builder: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("settings_host_") in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HostPreference: void setTitle(java.lang.CharSequence)>($r8) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.preference.Preference: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HostPreference: void setSummary(java.lang.CharSequence)>($r8) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.preference.Preference: void setSummary(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)>($r10) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HostPreference: void setKey(java.lang.String)>($r8) in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.preference.Preference: void setKey(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: void setKey(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setTitle(java.lang.CharSequence)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)> ==> <android.preference.Preference: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setSummary(java.lang.CharSequence)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)> ==> <android.preference.Preference: void setSummary(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setDialogTitle(java.lang.CharSequence)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)> ==> <android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setDialogIcon(android.graphics.drawable.Drawable)>(null) in <org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)> ==> <android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: void setSummary(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: void setTitle(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r0.<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setDialogLayoutResource(int)>(2130903057) in <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.preference.DialogPreference: void setDialogLayoutResource(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setDialogTitle(java.lang.CharSequence)>("Add new host") in <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void setDialogIcon(int)>(2130837517) in <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.preference.DialogPreference: void setDialogIcon(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void setDialogIcon(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void setDialogLayoutResource(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r1.<android.preference.Preference: void <init>(android.content.Context)>($r4) in <android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.preference.Preference: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.preference.Preference: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void setTitle(java.lang.CharSequence)>("XBMC Hosts") in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: android.preference.PreferenceManager getPreferenceManager()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>($r6) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)> ==> <android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void setTitle(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<android.preference.PreferenceActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void <init>()> ==> <android.preference.PreferenceActivity: void <init>()>
SPECIAL edge: specialinvoke $r208.<android.view.View: void <init>(android.content.Context)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r207.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r206) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
VIRTUAL edge: virtualinvoke $r207.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>($r208) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$2(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$2(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$5(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$5(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$4(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$4(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$5(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$5(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IControlManager access$3(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IControlManager access$3(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$4(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$4(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IControlManager access$3(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IControlManager access$3(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r206.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
SPECIAL edge: specialinvoke $r4.<android.os.Handler: void <init>(android.os.Handler$Callback)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <android.os.Handler: void <init>(android.os.Handler$Callback)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
SPECIAL edge: specialinvoke $r205.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r205.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r204.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r204.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r203.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r203.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r202.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r202.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r201.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r200.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r199.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r199.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r198.<android.view.View: void <init>(android.content.Context)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r197.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r196, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
VIRTUAL edge: virtualinvoke $r197.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>($r198) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r196.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r195.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r195.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r194.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r193) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
VIRTUAL edge: virtualinvoke $r194.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r193.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>
SPECIAL edge: specialinvoke $r192.<android.widget.SeekBar: void <init>(android.content.Context)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.SeekBar: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.SeekBar: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r2, 0) in <android.widget.SeekBar: void <init>(android.content.Context)> ==> <android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
FINALIZE edge: null in <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void finalize()>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r191.<android.widget.SeekBar: void <init>(android.content.Context)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.SeekBar: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r189) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
VIRTUAL edge: virtualinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>($r191, 0, false) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>
VIRTUAL edge: virtualinvoke $r190.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)>($r192) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)> ==> <android.widget.ProgressBar: int getProgress()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ProgressBar: int getProgress()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<android.widget.SeekBar: boolean isInTouchMode()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <android.view.View: boolean isInTouchMode()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: boolean isInTouchMode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r189.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r188.<android.view.View: void <init>(android.content.Context)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r187.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r186) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
VIRTUAL edge: virtualinvoke $r187.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>($r188) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/PlaylistActivity") in <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r186.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r184) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r185.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)>($r185) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()>
VIRTUAL edge: $z20 = virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r200) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: $z21 = virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r201) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r184.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()>
CLINIT edge: $r1 = new org.xbmc.android.util.KeyTracker in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
STATIC edge: $r9 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r1 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <android.content.Intent: void <clinit>()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <android.app.Activity: void onPause()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean isTaskRoot()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <android.app.Activity: boolean isTaskRoot()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void startActivity(android.content.Intent)>($r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: boolean isTaskRoot()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z2 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()> ==> <android.app.Activity: void onResume()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)>($r5, $r3, $r10, $r11, $r12, $r13) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r0, "skipminus") in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r0, "stop") in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r0, "skipplus") in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void setContentView(int)>(2130903055) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968661) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968665) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968659) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968664) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968662) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968663) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968655) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968724) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968654) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r10 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968656) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r11 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968655) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r12 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968657) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r13 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: android.view.View findViewById(int)>(2130968658) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>($r2) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r183.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r182.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r181) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
VIRTUAL edge: virtualinvoke $r182.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r183, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r181.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r180.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r179.<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicGenreListController)>($r178) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicGenreListController)>
VIRTUAL edge: virtualinvoke $r179.<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r180, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r5 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
SPECIAL edge: specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "org/xbmc/android/remote/presentation/activity/MusicGenreActivity") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("genre", $r10) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r14) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicGenreListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r178.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>
SPECIAL edge: specialinvoke $r177.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r176.<org.xbmc.android.remote.presentation.controller.ActorListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ActorListController)>($r175) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ActorListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ActorListController)>
VIRTUAL edge: virtualinvoke $r176.<org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r177, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r5 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r14) in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("actor", $r10) in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ActorListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ActorListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r175.<org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>(0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>
SPECIAL edge: specialinvoke $r174.<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r173) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
VIRTUAL edge: virtualinvoke $r174.<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r173.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r172, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r172.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r171.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r171.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r170.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r169.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r168) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
VIRTUAL edge: virtualinvoke $r169.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r170, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r5 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "org/xbmc/android/remote/presentation/activity/MusicArtistActivity") in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r14) in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("artist", $r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r168.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>
SPECIAL edge: specialinvoke $r167.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r166.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r63, $r165, $r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r166.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r167) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r165.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r164.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r163.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>($r162, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
VIRTUAL edge: virtualinvoke $r163.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>($r164) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r162.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r161.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r160.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r159, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r160.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)>($r161) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.controller.HostPreference: org.xbmc.api.object.Host access$0(org.xbmc.android.remote.presentation.controller.HostPreference)>($r3) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: org.xbmc.api.object.Host access$0(org.xbmc.android.remote.presentation.controller.HostPreference)>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r0) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>($r0, $r5) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Are you sure you want to delete the XBMC host \"") in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"?") in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r6) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r4) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Yes!", $r9) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Nah.", $r10) in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r159.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r158.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r157.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r156) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
VIRTUAL edge: virtualinvoke $r157.<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>($r158) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r156.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r155) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r155.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>
SPECIAL edge: specialinvoke $r154.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r153.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r152) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
VIRTUAL edge: virtualinvoke $r153.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r154, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r152.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r151.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r151.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r150.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r150.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r149.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r148.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>($r147) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
VIRTUAL edge: virtualinvoke $r148.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>($r149) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r147.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
SPECIAL edge: specialinvoke $r146.<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
VIRTUAL edge: virtualinvoke $r146.<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)>
STATIC edge: staticinvoke <org.xbmc.android.util.ImportUtilities: void purgeCache()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.ImportUtilities: void purgeCache()>
STATIC edge: $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, "Cache purged.", 0) in <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.api.type.ThumbSize: int[] values()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <org.xbmc.api.type.ThumbSize: void <clinit>()>
STATIC edge: $r0 = staticinvoke <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)>($r1, $i3) in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)>
STATIC edge: $r1 = staticinvoke <org.xbmc.api.type.MediaType: java.lang.String getArtFolder(int)>($i3) in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <org.xbmc.api.type.MediaType: java.lang.String getArtFolder(int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.api.type.MediaType: int[] getTypes()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <org.xbmc.api.type.MediaType: int[] getTypes()>
STATIC edge: $r3 = staticinvoke <org.xbmc.api.type.ThumbSize: int[] values()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <org.xbmc.api.type.ThumbSize: int[] values()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <java.io.File: boolean exists()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <java.io.File: boolean isDirectory()>
VIRTUAL edge: $r4 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <java.io.File: java.io.File[] listFiles()>
VIRTUAL edge: virtualinvoke $r0.<java.io.File: boolean delete()>() in <org.xbmc.android.util.ImportUtilities: void purgeCache()> ==> <java.io.File: boolean delete()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r145.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r144.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r143) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
VIRTUAL edge: virtualinvoke $r144.<org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r145, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r143.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r142.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r141.<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieGenreListController)>($r140) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieGenreListController)>
VIRTUAL edge: virtualinvoke $r141.<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r142, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r4 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r5, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r13) in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("genre", $r11) in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r5 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieGenreListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r140.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>
SPECIAL edge: specialinvoke $r139.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r138.<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
VIRTUAL edge: virtualinvoke $r138.<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)>($r139) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/AboutActivity") in <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r137.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r137.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r136.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r135.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r134, $r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r135.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r136) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r134.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r133.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r131.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r130.<org.xbmc.android.remote.presentation.controller.SongListController$1: void <init>(org.xbmc.android.remote.presentation.controller.SongListController)>($r129) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SongListController$1: void <init>(org.xbmc.android.remote.presentation.controller.SongListController)>
VIRTUAL edge: virtualinvoke $r130.<org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r131, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
STATIC edge: $r12 = staticinvoke <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.object.Album access$1(org.xbmc.android.remote.presentation.controller.SongListController)>($r3) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.object.Album access$1(org.xbmc.android.remote.presentation.controller.SongListController)>
STATIC edge: $r12 = staticinvoke <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.object.Album access$1(org.xbmc.android.remote.presentation.controller.SongListController)>($r14) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.object.Album access$1(org.xbmc.android.remote.presentation.controller.SongListController)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.business.IMusicManager access$0(org.xbmc.android.remote.presentation.controller.SongListController)>($r14) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.business.IMusicManager access$0(org.xbmc.android.remote.presentation.controller.SongListController)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.business.IMusicManager access$0(org.xbmc.android.remote.presentation.controller.SongListController)>($r3) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.business.IMusicManager access$0(org.xbmc.android.remote.presentation.controller.SongListController)>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing \"") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing album \"") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" starting with song \"") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r16 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r14, $r15, $r5, "Error playing song!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r14, $r15, $r16, "Error playing song!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SongListController$1: void <init>(org.xbmc.android.remote.presentation.controller.SongListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r129.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
SPECIAL edge: specialinvoke $r128.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r127.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>($r126, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
VIRTUAL edge: virtualinvoke $r127.<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>($r128) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r126.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r125) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r125.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>
SPECIAL edge: specialinvoke $r124.<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
VIRTUAL edge: virtualinvoke $r124.<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$4: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r123.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r122.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,org.xbmc.api.object.Movie)>($r120, $r121) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,org.xbmc.api.object.Movie)>
VIRTUAL edge: virtualinvoke $r122.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)>($r123) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r5) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>($r2) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.business.IControlManager access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r5) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.business.IControlManager access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1,org.xbmc.api.object.Movie)>($r0, $r4) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1,org.xbmc.api.object.Movie)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1,org.xbmc.api.object.Movie)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,org.xbmc.api.object.Movie)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r120.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r113, $r114, $r115, $r116, $r117, $r118, $r119) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
SPECIAL edge: specialinvoke $r119.<android.widget.LinearLayout: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.LinearLayout: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.LinearLayout: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r2, 0) in <android.widget.LinearLayout: void <init>(android.content.Context)> ==> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r118.<android.widget.Button: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.Button: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.Button: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r2, 0) in <android.widget.Button: void <init>(android.content.Context)> ==> <android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r114.<android.widget.TextView: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.TextView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.TextView: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r2, 0) in <android.widget.TextView: void <init>(android.content.Context)> ==> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r113.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r112) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
SPECIAL edge: specialinvoke $r112.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
SPECIAL edge: specialinvoke $r111.<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>($r110, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r111.<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)>
CLINIT edge: staticinvoke <org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)>($r4, $r5) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
STATIC edge: staticinvoke <org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)>($r4, $r5) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.HostPreference: org.xbmc.api.object.Host access$0(org.xbmc.android.remote.presentation.controller.HostPreference)>($r3) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: org.xbmc.api.object.Host access$0(org.xbmc.android.remote.presentation.controller.HostPreference)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>($r2) in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
CLINIT edge: $r2 = <org.xbmc.android.remote.business.provider.HostProvider$Hosts: android.net.Uri CONTENT_URI> in <org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)> ==> <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
STATIC edge: $r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, $l1) in <org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)> ==> <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
SPECIAL edge: specialinvoke $r110.<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>($r109, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>
SPECIAL edge: specialinvoke $r109.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r108.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r107.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,android.view.View)>($r105, $r106) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,android.view.View)>
VIRTUAL edge: virtualinvoke $r107.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)>($r108) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: $r11 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r10) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
STATIC edge: $r10 = staticinvoke <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>($r9) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r8) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("actor", $r5) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.view.View: java.lang.Object getTag()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: java.lang.Object getTag()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,android.view.View)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r106.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r105.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>($r98, $r99, $r100, $r101, $r102, $r103, $r104) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
SPECIAL edge: specialinvoke $r104.<android.widget.LinearLayout: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.LinearLayout: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r103.<android.widget.Button: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.Button: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r99.<android.widget.TextView: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.TextView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r98.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r97) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
SPECIAL edge: specialinvoke $r97.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
SPECIAL edge: specialinvoke $r96.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r96.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r95.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r94.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r93, $r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r94.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r95) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r93.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r92.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r91.<org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r90) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
VIRTUAL edge: virtualinvoke $r91.<org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)>($r92) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r90.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r89) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>
CLINIT edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 6, 2130837553, "Power On", "Turn your XBMC\'s") in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)>
CLINIT edge: $r9 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r9 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)>($r0, $r11, $r6) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)>($r0, $r11, $r7) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)>
SPECIAL edge: specialinvoke $r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>($r2, 2130903047, $r3) in <org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)> ==> <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.BaseAdapter: void <init>()>() in <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)> ==> <android.widget.BaseAdapter: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r7.<java.util.ArrayList: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 1, 2130837547, "Music", "Listen to") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 2, 2130837545, "Movies", "Watch your") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 3, 2130837549, "Pictures", "Browse your") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 4, 2130837551, "Now Playing", "See what\'s") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 5, 2130837555, "Connect", "Try again to") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>($r0, 0, 2130837557, "Remote Control", "Use as") in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>($r1, $r10) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>
VIRTUAL edge: virtualinvoke $r1.<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
VIRTUAL edge: virtualinvoke $r1.<android.widget.GridView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
VIRTUAL edge: virtualinvoke $r1.<android.widget.GridView: void setSelected(boolean)>(1) in <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <android.view.View: void setSelected(boolean)>
VIRTUAL edge: virtualinvoke $r1.<android.widget.GridView: void setSelection(int)>(0) in <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <android.widget.GridView: void setSelection(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.GridView: void setSelection(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void setSelected(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.GridView: void setAdapter(android.widget.ListAdapter)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $r3 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController: android.widget.AdapterView$OnItemClickListener getHomeMenuOnClickListener()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: android.widget.AdapterView$OnItemClickListener getHomeMenuOnClickListener()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r0) in <org.xbmc.android.remote.presentation.controller.HomeController: android.widget.AdapterView$OnItemClickListener getHomeMenuOnClickListener()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r89.<android.widget.GridView: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.GridView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.GridView: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, $r2, 0) in <android.widget.GridView: void <init>(android.content.Context)> ==> <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r88.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r87.<org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r86) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
VIRTUAL edge: virtualinvoke $r87.<org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r88, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: $r20 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>($r21) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: void access$2(org.xbmc.android.remote.presentation.controller.HomeController,org.xbmc.android.remote.presentation.controller.HomeController$WolCounter)>($r11, $r20) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void access$2(org.xbmc.android.remote.presentation.controller.HomeController,org.xbmc.android.remote.presentation.controller.HomeController$WolCounter)>
STATIC edge: $r20 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>($r11) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: $r20 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>($r11) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: $r18 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.DataResponse access$1(org.xbmc.android.remote.presentation.controller.HomeController)>($r11) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.DataResponse access$1(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: $r17 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.IInfoManager access$0(org.xbmc.android.remote.presentation.controller.HomeController)>($r11) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.IInfoManager access$0(org.xbmc.android.remote.presentation.controller.HomeController)>
CLINIT edge: $r6 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
VIRTUAL edge: virtualinvoke $r20.<org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void cancel()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.os.CountDownTimer: void cancel()>
SPECIAL edge: specialinvoke $r20.<org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,long,long)>($r21, $l3, 1000L) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,long,long)>
VIRTUAL edge: virtualinvoke $r20.<org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: android.os.CountDownTimer start()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.os.CountDownTimer: android.os.CountDownTimer start()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.CountDownTimer: android.os.CountDownTimer start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.os.CountDownTimer: void <init>(long,long)>($l0, $l1) in <org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,long,long)> ==> <android.os.CountDownTimer: void <init>(long,long)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.CountDownTimer: void <init>(long,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.os.CountDownTimer: void <init>(long,long)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.CountDownTimer: void cancel()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.util.WakeOnLan: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.util.WakeOnLan: void <init>()>
VIRTUAL edge: $r19 = virtualinvoke $r8.<org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,int)>($r15, $i0) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)>($r1, "255.255.255.255", $i0) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,int)> ==> <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)>
CLINIT edge: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, $i3, $i1) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r2) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)>($r1) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)>
CLINIT edge: $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, $i3, $i1) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16) in <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16) in <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String,int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid MAC address.") in <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid hex digit in MAC address.") in <org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<java.net.DatagramSocket: void <init>()>() in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.net.DatagramSocket: void <init>()>
VIRTUAL edge: virtualinvoke $r7.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r6) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.net.DatagramSocket: void send(java.net.DatagramPacket)>
VIRTUAL edge: virtualinvoke $r7.<java.net.DatagramSocket: void close()>() in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.net.DatagramSocket: void close()>
SPECIAL edge: specialinvoke $r6.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>($r4, $i3, $r3, $i0) in <org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)> ==> <java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.util.WakeOnLan: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/MusicLibraryActivity") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/MovieLibraryActivity") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r14) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("shareType", 3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("path", "") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.view.View: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r86.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r85) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>
SPECIAL edge: specialinvoke $r85.<android.widget.GridView: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.GridView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r84.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r83.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r82) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
VIRTUAL edge: virtualinvoke $r83.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)>($r84) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)>
CLINIT edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$0(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <android.view.View: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$5(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,int)>($r3, $i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$5(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,int)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.widget.ImageButton access$1(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.widget.ImageButton access$1(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
STATIC edge: $i1 = staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int access$12(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int access$12(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
STATIC edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$0(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$0(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
CLINIT edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$5(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,int)>($r3, $i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.widget.ImageButton access$1(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <android.view.View: void <clinit>()>
CLINIT edge: $i1 = staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int access$12(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r3) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <android.view.View: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r82.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 2130771968) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
CLINIT edge: <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: float sScale> = $f0 in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r1, 2130903060, $r0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
CLINIT edge: $f1 = <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: float sScale> in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <clinit>()>
CLINIT edge: $r18 = <org.xbmc.android.remote.R$styleable: int[] SlidingTabWidget> in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <org.xbmc.android.remote.R$styleable: void <clinit>()>
CLINIT edge: $r10 = new org.xbmc.android.widget.slidingtabs.SnapAnimation in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <clinit>()>
CLINIT edge: staticinvoke <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r1, 2130903060, $r0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.R$styleable: int[] SlidingTabScrollView> = $r0 in <org.xbmc.android.remote.R$styleable: void <clinit>()> ==> <org.xbmc.android.remote.R$styleable: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.R$styleable: int[] Theme> = $r0 in <org.xbmc.android.remote.R$styleable: void <clinit>()> ==> <org.xbmc.android.remote.R$styleable: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.R$styleable: int[] SlidingTabWidget> = $r0 in <org.xbmc.android.remote.R$styleable: void <clinit>()> ==> <org.xbmc.android.remote.R$styleable: void <clinit>()>
CLINIT edge: <org.xbmc.android.widget.slidingtabs.SnapAnimation: int NO_ANIMATION> = -99999 in <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <clinit>()> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener)>($r0, null) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>($r1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.widget.slidingtabs.SnapAnimation: void <init>(android.widget.ImageButton,android.widget.LinearLayout)>($r5, $r6) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <init>(android.widget.ImageButton,android.widget.LinearLayout)>
SPECIAL edge: specialinvoke $r0.<android.view.animation.Animation: void <init>()>() in <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <init>(android.widget.ImageButton,android.widget.LinearLayout)> ==> <android.view.animation.Animation: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.animation.Animation: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.view.animation.Animation: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater") in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r18, $i0, $i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setOrientation(int)>($i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.widget.LinearLayout: void setOrientation(int)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.view.View findViewById(int)>(2130968718) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: android.view.View findViewById(int)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.view.View findViewById(int)>(2130968722) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: android.view.View findViewById(int)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.view.View findViewById(int)>(2130968720) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: android.view.View findViewById(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setFocusable(boolean)>(1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void setFocusable(boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setOnKeyListener(android.view.View$OnKeyListener)>($r17) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void setFocusable(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: android.view.View findViewById(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.LinearLayout: void setOrientation(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r4, $r3, 0) in <android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r81.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r80.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>($r79) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
VIRTUAL edge: virtualinvoke $r80.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>($r81) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r79.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>($r63, $r78) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
SPECIAL edge: specialinvoke $r78.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>(0, "", 0, "", "", "", "", "", 0.0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
SPECIAL edge: specialinvoke $r77.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: virtualinvoke $r77.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r76.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r75) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
VIRTUAL edge: virtualinvoke $r76.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r75.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>
SPECIAL edge: specialinvoke $r74.<org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>($r73, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>
VIRTUAL edge: virtualinvoke $r74.<org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r19 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.DataResponse access$1(org.xbmc.android.remote.presentation.controller.HomeController)>($r14) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.DataResponse access$1(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: $r18 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.IInfoManager access$0(org.xbmc.android.remote.presentation.controller.HomeController)>($r14) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.IInfoManager access$0(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: $r12 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r11, $r6, 0) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: void access$5(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>($r9, $r13, $r15) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void access$5(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>
STATIC edge: $r15 = staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter access$4(org.xbmc.android.remote.presentation.controller.HomeController)>($r14) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter access$4(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: staticinvoke <org.xbmc.android.remote.presentation.controller.HomeController: void access$3(org.xbmc.android.remote.presentation.controller.HomeController)>($r9) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void access$3(org.xbmc.android.remote.presentation.controller.HomeController)>
STATIC edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r11, $r7) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>
STATIC edge: $r12 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r11, "You\'ve picked the same host as the current.", 0) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r11, $r7) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> = $r1 in <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)>($r1) in <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)> ==> <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)>
STATIC edge: $r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0) in <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
STATIC edge: $r1 = staticinvoke <java.net.Inet4Address: java.net.InetAddress getByName(java.lang.String)>($r4) in <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)> ==> <java.net.Inet4Address: java.net.InetAddress getByName(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)>($r1, $i0) in <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)> ==> <org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)>(null, 0) in <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)> ==> <org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)>($r1, $i0) in <org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.eventclient.EventClient$PingThread: void setHost(java.net.InetAddress,int)>($r1, $i0) in <org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)> ==> <org.xbmc.eventclient.EventClient$PingThread: void setHost(java.net.InetAddress,int)>
SPECIAL edge: specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Changed host to ") in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r73.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r63, $r72) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>
SPECIAL edge: specialinvoke $r72.<android.widget.GridView: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.widget.GridView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r71.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r70.<org.xbmc.android.remote.presentation.controller.FileListController$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController)>($r69) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.FileListController$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController)>
VIRTUAL edge: virtualinvoke $r70.<org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r71, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
CLINIT edge: $r4 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: $r13 = staticinvoke <org.xbmc.android.remote.presentation.controller.FileListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.FileListController)>($r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.FileListController)>
STATIC edge: $r13 = staticinvoke <org.xbmc.android.remote.presentation.controller.FileListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.FileListController)>($r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.FileListController)>
STATIC edge: $i0 = staticinvoke <org.xbmc.android.remote.presentation.controller.FileListController: int access$1(org.xbmc.android.remote.presentation.controller.FileListController)>($r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: int access$1(org.xbmc.android.remote.presentation.controller.FileListController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.FileListController: java.util.HashMap access$0(org.xbmc.android.remote.presentation.controller.FileListController)>($r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: java.util.HashMap access$0(org.xbmc.android.remote.presentation.controller.FileListController)>
STATIC edge: $r6 = staticinvoke <org.xbmc.android.remote.presentation.controller.FileListController: java.util.HashMap access$0(org.xbmc.android.remote.presentation.controller.FileListController)>($r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: java.util.HashMap access$0(org.xbmc.android.remote.presentation.controller.FileListController)>
SPECIAL edge: specialinvoke $r16.<org.xbmc.android.remote.presentation.controller.FileListController$1$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>($r0) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController$1$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController$1$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.FileListController$1$2: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>($r0) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController$1$2: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController$1$2: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r4.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r10, class "org/xbmc/android/remote/presentation/activity/ListActivity") in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("ListController", $r5) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("shareType", $i0) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("path", $r12) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("display_path", $r7) in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.FileListController$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r69.<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>
SPECIAL edge: specialinvoke $r68.<android.view.View: void <init>(android.content.Context)>($r63) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r67.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>($r66) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
VIRTUAL edge: virtualinvoke $r67.<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>($r68) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r66.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>($r65) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
SPECIAL edge: specialinvoke $r65.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>
SPECIAL edge: specialinvoke $r64.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)>($r64) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()>
VIRTUAL edge: $z17 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $r132 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)>(0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)>
VIRTUAL edge: $z18 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z19 = virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r133) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r63.<org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()>
CLINIT edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r6) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r6) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void exit(int)>($i0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.System: void exit(int)>
STATIC edge: $r7 = staticinvoke <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)>($r6) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)>
CLINIT edge: staticinvoke <java.lang.System: void exit(int)>($i0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)>($r6) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager mInstance> in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager mInstance> in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager mInstance> = $r1 in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: $r1 = new org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager mInstance> = null in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: boolean mEnabled> = 1 in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void removeNotification()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void removeNotification()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)>
CLINIT edge: <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: boolean mEnabled> = $z0 in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
STATIC edge: $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager)>
SPECIAL edge: specialinvoke $r0.<android.os.Handler: void <init>()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager)> ==> <android.os.Handler: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: $z4 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>($r5, $r6, 42, $r1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void start()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void start()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>($r5, $r6, 41, $r1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>($r5, $r6, 43, $r1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>
CLINIT edge: $r1 = new android.os.Bundle in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Bundle: void <clinit>()>
STATIC edge: staticinvoke <android.os.Looper: void loop()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Looper: void loop()>
STATIC edge: staticinvoke <android.os.Looper: void prepare()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Looper: void prepare()>
SPECIAL edge: specialinvoke $r1.<android.os.Bundle: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Bundle: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("type", $i0) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Bundle: void putInt(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Bundle: void putInt(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread,java.util.ArrayList)>($r0, $r2) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread,java.util.ArrayList)>
SPECIAL edge: specialinvoke $r0.<android.os.Handler: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread,java.util.ArrayList)> ==> <android.os.Handler: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
INTERFACE edge: $r1 = interfaceinvoke $r2.<org.xbmc.api.business.IMusicManager: java.util.ArrayList getAlbums(android.content.Context)>($r7) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.business.MusicManager: org.xbmc.api.data.IMusicClient music(android.content.Context)>($r1) in <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)> ==> <org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IMusicClient music(android.content.Context)>
SPECIAL edge: $i1 = specialinvoke $r0.<org.xbmc.android.remote.business.MusicManager: int getSortBy(int)>(1) in <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager: int getSortBy(int)>
SPECIAL edge: $r4 = specialinvoke $r0.<org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()>() in <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1) in <org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IMusicClient music(android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper mInstance> in <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper mInstance> in <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
CLINIT edge: $r1 = new org.xbmc.android.util.WifiHelper in <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper mInstance> = null in <org.xbmc.android.util.WifiHelper: void <clinit>()> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.android.util.WifiHelper: int getWifiState()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: int getWifiState()>
STATIC edge: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiHelper", "WIFI_STATE_UNKOWN") in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <android.util.Log: int d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiHelper", "WIFI_STATE_ENABLED") in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <android.util.Log: int d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiHelper", $r3) in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <android.util.Log: int d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiHelper", "WIFI_STATE_DISABLED") in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <android.util.Log: int d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.util.Log: int d(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("WIFI_STATE_CONNECTED to ") in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.WifiHelper: int getWifiState()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.WifiHelper: void <init>(android.content.Context)>($r0) in <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <init>(android.content.Context)>
CLINIT edge: <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper mInstance> = $r0 in <org.xbmc.android.util.WifiHelper: void <init>(android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.util.WifiHelper: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.util.ClientFactory$1: void <init>(java.lang.String,org.xbmc.api.business.INotifiableManager)>("Init-Connection", $r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.util.ClientFactory$1: void <init>(java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.util.ClientFactory$1: void start()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r5.<org.xbmc.android.util.ClientFactory$1: void start()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.util.ClientFactory$1: void run()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi access$0()>() in <org.xbmc.android.util.ClientFactory$1: void run()> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi access$0()>
SPECIAL edge: specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>($r1) in <org.xbmc.android.util.ClientFactory$1: void <init>(java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.Thread: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)>($r1, $i1) in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)>(null, -1) in <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)>($r3, $i1) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)>
STATIC edge: $r2 = staticinvoke <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)>(null, 0) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)>($r3, $r4) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setTimeout(int)>($i0) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.Connection: void setTimeout(int)>
STATIC edge: staticinvoke <java.net.Authenticator: void setDefault(java.net.Authenticator)>($r3) in <org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)> ==> <java.net.Authenticator: void setDefault(java.net.Authenticator)>
STATIC edge: staticinvoke <java.net.Authenticator: void setDefault(java.net.Authenticator)>(null) in <org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)> ==> <java.net.Authenticator: void setDefault(java.net.Authenticator)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.httpapi.Connection$HttpAuthenticator: void <init>(org.xbmc.httpapi.Connection,java.lang.String,java.lang.String)>($r0, $r1, $r2) in <org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection$HttpAuthenticator: void <init>(org.xbmc.httpapi.Connection,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.net.Authenticator: void <init>()>() in <org.xbmc.httpapi.Connection$HttpAuthenticator: void <init>(org.xbmc.httpapi.Connection,java.lang.String,java.lang.String)> ==> <java.net.Authenticator: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.httpapi.Connection: void <init>(java.lang.String,int)>($r0, $i0) in <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)> ==> <org.xbmc.httpapi.Connection: void <init>(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>($r0, $i0) in <org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)> ==> <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://") in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/xbmcCmds/xbmcHttp") in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.Connection: void <init>(java.lang.String,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>($r1, $i0) in <org.xbmc.httpapi.Connection: void <init>(java.lang.String,int)> ==> <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.httpapi.client.ControlClient: void <init>(org.xbmc.httpapi.Connection)>($r2) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.client.ControlClient: void <init>(org.xbmc.httpapi.Connection)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.ControlClient: void <init>(org.xbmc.httpapi.Connection)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r7.<org.xbmc.httpapi.client.VideoClient: void <init>(org.xbmc.httpapi.Connection)>($r2) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.client.VideoClient: void <init>(org.xbmc.httpapi.Connection)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.VideoClient: void <init>(org.xbmc.httpapi.Connection)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.httpapi.client.MusicClient: void <init>(org.xbmc.httpapi.Connection)>($r2) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.client.MusicClient: void <init>(org.xbmc.httpapi.Connection)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.MusicClient: void <init>(org.xbmc.httpapi.Connection)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<org.xbmc.httpapi.client.InfoClient: void <init>(org.xbmc.httpapi.Connection)>($r2) in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <org.xbmc.httpapi.client.InfoClient: void <init>(org.xbmc.httpapi.Connection)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.InfoClient: void <init>(org.xbmc.httpapi.Connection)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.httpapi.WifiStateException: void <init>(int)>($i0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.httpapi.WifiStateException: void <init>(int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Exception: void <init>()>() in <org.xbmc.httpapi.WifiStateException: void <init>(int)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("sort_order_") in <org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("sort_by_") in <org.xbmc.android.remote.business.MusicManager: int getSortBy(int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) in <org.xbmc.android.remote.business.MusicManager: int getSortBy(int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.MusicManager: int getSortBy(int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
INTERFACE edge: $r5 = interfaceinvoke $r3.<org.xbmc.api.data.IMusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>($r0, $i1, $r4) in <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)> ==> <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT idAlbum, strAlbum, strArtist, iYear, strThumb") in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM albumview WHERE albumview.strAlbum <> \'\'") in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: $r4 = specialinvoke $r0.<org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)>($i0, $r2) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)>
SPECIAL edge: $r6 = specialinvoke $r0.<org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)>($r4) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)>
CLINIT edge: $r9 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.System: void <clinit>()>
STATIC edge: $r8 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r8) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $i3 = staticinvoke <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>($r8) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
STATIC edge: $r7 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r7) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $i2 = staticinvoke <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
CLINIT edge: $r9 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r1 = new java.lang.String in <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r0) in <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<java.lang.String: int length()>() in <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(",", "") in <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.String: void <init>(char[])>($r4) in <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)> ==> <java.lang.String: void <init>(char[])>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(char[])> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("</record>", "") in <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("</field>", "") in <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("ERROR: ") in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("response = ") in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r8 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String getMessage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>($i2, $r2, $r7, $i3, $r8) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>
CLINIT edge: $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r4, 16) in <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r4, 16) in <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)> ==> <java.lang.Long: long parseLong(java.lang.String,int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long parseLong(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/") in <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<java.util.ArrayList: void <init>()>() in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ORDER BY lower(strAlbum) ") in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ORDER BY lower(strArtist) ") in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lower(strAlbum) ") in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("  ORDER BY iTrack ") in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lower(strFileName) ") in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r4 = virtualinvoke $r5.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>("QueryMusicDatabase", $r2, $r1) in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
CLINIT edge: $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(401) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(401) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Connection", $r2) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r10) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.net.URLDecoder: java.lang.String decode(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.apache.http.HttpException: void <init>(java.lang.String)>($r10) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.apache.http.HttpException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.apache.http.HttpException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <org.apache.http.HttpException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
SPECIAL edge: specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
SPECIAL edge: specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r14, 8192) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.io.BufferedReader: void <init>(java.io.Reader,int)>
VIRTUAL edge: $r2 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.io.BufferedReader: java.lang.String readLine()>
VIRTUAL edge: virtualinvoke $r6.<java.io.BufferedReader: void close()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.io.BufferedReader: void close()>
SPECIAL edge: specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>($r10) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.net.URL: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r9.<java.net.URL: java.net.URLConnection openConnection()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.net.URL: java.net.URLConnection openConnection()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.net.URL: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.httpapi.NoSettingsException: void <init>()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.NoSettingsException: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>("Click on \"Settings\" or use the menu in order to add an XBMC host or IP address to your configuration.") in <org.xbmc.httpapi.NoSettingsException: void <init>()> ==> <java.lang.Exception: void <init>(java.lang.String)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r5) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r17) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r15) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r12) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.presentation.INotifiableController: void onError(java.lang.Exception)>($r1) in <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.presentation.INotifiableController: void onError(java.lang.Exception)>($r1) in <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.presentation.INotifiableController: void onError(java.lang.Exception)>($r1) in <org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void onError(java.lang.Exception)>
SPECIAL edge: specialinvoke $r7.<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
VIRTUAL edge: $r8 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r6) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Unable to send URL to XBMC!") in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r8) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Ok", $r7) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r23 = virtualinvoke $r22.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r21.<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
SPECIAL edge: specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Wrong data from HTTP API; expected \'") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', got \'") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("I/O Exception (") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>($r0) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
VIRTUAL edge: $r6 = virtualinvoke $r3.<org.xbmc.httpapi.NoSettingsException: java.lang.String getMessage()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
SPECIAL edge: specialinvoke $r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r4) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("No hosts detected") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r6) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r5) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("No Network") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r6) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(1) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r8) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Internal Error") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r6) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Socket Timeout") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Make sure XBMC webserver is enabled and XBMC is running.") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r12) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Connection Refused") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Make sure XBMC webserver is enabled and XBMC is running.") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r14) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("No network") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("XBMC Remote needs local network access. Please make sure that your wireless network is activated. You can click on the Settings button below to directly access your network settings.") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r17) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r16) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r16) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("HTTP 401: Unauthorized") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("The supplied username and/or password is incorrect. Please check your settings.") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Settings", $r21) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Exception") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r16) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<html>", "") in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
VIRTUAL edge: $r10 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)>($r1, $r2) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2) in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.net.URLEncoder: java.lang.String encode(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?command=") in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.httpapi.Connection$HttpAuthenticator: void resetCounter()>() in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection$HttpAuthenticator: void resetCounter()>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("<field>") in <org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
INTERFACE edge: $r1 = interfaceinvoke $r3.<org.xbmc.api.business.IVideoManager: java.util.ArrayList getMovies(android.content.Context)>($r7) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)>
INTERFACE edge: $r1 = interfaceinvoke $r3.<org.xbmc.api.business.IVideoManager: java.util.ArrayList getActors(android.content.Context)>($r7) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getActors(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.WifiStateException: void printStackTrace()>() in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getActors(android.content.Context)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.business.VideoManager: org.xbmc.api.data.IVideoClient video(android.content.Context)>($r1) in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getActors(android.content.Context)> ==> <org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IVideoClient video(android.content.Context)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1) in <org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IVideoClient video(android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.android.util.WifiHelper: int getWifiState()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: int getWifiState()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.httpapi.WifiStateException: void <init>(int)>($i0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.httpapi.WifiStateException: void <init>(int)>
INTERFACE edge: $r4 = interfaceinvoke $r3.<org.xbmc.api.data.IVideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getActors(android.content.Context)> ==> <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT idActor, strActor FROM actors") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY upper(strActor), strActor") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: $r6 = specialinvoke $r0.<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)>($r4) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)>
CLINIT edge: $r7 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.System: void <clinit>()>
STATIC edge: $r5 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r5) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $i2 = staticinvoke <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>($r5) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
CLINIT edge: $r7 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.System: void <clinit>()>
SPECIAL edge: specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ERROR: ") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("response = ") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.api.object.Actor: void <init>(int,java.lang.String)>($i2, $r5) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <org.xbmc.api.object.Actor: void <init>(int,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.object.Artist: void <init>(int,java.lang.String)>($i0, $r1) in <org.xbmc.api.object.Actor: void <init>(int,java.lang.String)> ==> <org.xbmc.api.object.Artist: void <init>(int,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.api.object.Artist: void <init>(int,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<java.util.ArrayList: void <init>()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>("QueryVideoDatabase", $r4, $r1) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("<field>") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.WifiStateException: void printStackTrace()>() in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.business.VideoManager: org.xbmc.api.data.IVideoClient video(android.content.Context)>($r1) in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)> ==> <org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IVideoClient video(android.content.Context)>
SPECIAL edge: $i1 = specialinvoke $r0.<org.xbmc.android.remote.business.VideoManager: int getSortBy(int)>(3) in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager: int getSortBy(int)>
SPECIAL edge: $r4 = specialinvoke $r0.<org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()>() in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()>
INTERFACE edge: $r5 = interfaceinvoke $r3.<org.xbmc.api.data.IVideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>($r0, $i1, $r4) in <org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)> ==> <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT idMovie, c00, c07, strPath, strFileName, c15, c11, c14, c05") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM movieview WHERE movieview.idmovie NOT IN (SELECT idmovie FROM setlinkmovie)") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: $r4 = specialinvoke $r0.<org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)>($i0, $r2) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)>
SPECIAL edge: $r6 = specialinvoke $r0.<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)>($r4) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)>
CLINIT edge: $r13 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.System: void <clinit>()>
STATIC edge: $d0 = staticinvoke <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)>($r12) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)>
STATIC edge: $r11 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r11) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $r10 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r10) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $r9 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r9) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $r8 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r8) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $r2 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $i3 = staticinvoke <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
STATIC edge: $i2 = staticinvoke <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
CLINIT edge: $r13 = <java.lang.System: java.io.PrintStream err> in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0) in <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)> ==> <java.lang.Double: void <clinit>()>
STATIC edge: $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0) in <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)> ==> <java.lang.Double: double parseDouble(java.lang.String)>
STATIC edge: $r0 = staticinvoke <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>($r0) in <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
CLINIT edge: <java.lang.Double: java.lang.Class TYPE> = null in <java.lang.Double: void <clinit>()> ==> <java.lang.Double: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: double parseDouble(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<java.lang.String: int length()>() in <org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("ERROR: ") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("response = ") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r12 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r7.<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>($i2, $r3, $i3, $r2, $r8, $r9, $r10, $r11, $d0) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
SPECIAL edge: specialinvoke $r6.<java.util.ArrayList: void <init>()>() in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ORDER BY lower(c00) ") in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ORDER BY c07 ") in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lower(c00) ") in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ORDER BY c05") in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r4 = virtualinvoke $r5.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>("QueryVideoDatabase", $r2, $r1) in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("<field>") in <org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("sort_order_") in <org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("sort_by_") in <org.xbmc.android.remote.business.VideoManager: int getSortBy(int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) in <org.xbmc.android.remote.business.VideoManager: int getSortBy(int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.VideoManager: int getSortBy(int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <java.util.ArrayList: void <init>(java.util.Collection)>
SPECIAL edge: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <java.util.ArrayList: void <init>(java.util.Collection)>
SPECIAL edge: specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r1) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <java.util.ArrayList: void <init>(java.util.Collection)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r3 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Handler: android.os.Message obtainMessage()>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.os.Handler: boolean sendMessage(android.os.Message)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: boolean sendMessage(android.os.Message)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: android.os.Message obtainMessage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.String)>("Cover download progress Thread") in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)> ==> <java.lang.Thread: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<android.app.ProgressDialog: void <init>(android.content.Context)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.ProgressDialog: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<android.app.ProgressDialog: void setCancelable(boolean)>(0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.Dialog: void setCancelable(boolean)>
VIRTUAL edge: virtualinvoke $r1.<android.app.ProgressDialog: void setProgressStyle(int)>(1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.ProgressDialog: void setProgressStyle(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.app.ProgressDialog: android.view.Window getWindow()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.Dialog: android.view.Window getWindow()>
VIRTUAL edge: virtualinvoke $r1.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("Downloading movie posters...") in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r1.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("Downloading album covers...") in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r1.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>("Downloading actor thumbs...") in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ProgressDialog: void setMessage(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: android.view.Window getWindow()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ProgressDialog: void setProgressStyle(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void setCancelable(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ProgressDialog: void <init>(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>($r3, 0, $r2) in <android.app.ProgressDialog: void <init>(android.content.Context)> ==> <android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
SPECIAL edge: specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>($r4, 0, $r3) in <android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> ==> <android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
SPECIAL edge: specialinvoke $r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("All downloaded covers, thumbs and posters will be deleted. Are you really sure you want to do this?") in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Absolutely.", $r9) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Please, no!", $r10) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/AboutActivity") in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/SettingsActivity") in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r6 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.content.Context getBaseContext()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getBaseContext()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: void showDialog(int)>($i0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void showDialog(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void showDialog(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContextWrapper: android.content.Context getBaseContext()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()> ==> <android.app.Activity: void onResume()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>($r0, $r5) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HomeController: void setupVersionHandler(android.widget.Button,android.widget.GridView)>($r4, $r5) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void setupVersionHandler(android.widget.Button,android.widget.GridView)>
VIRTUAL edge: $r10 = virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.HomeController: android.view.View$OnClickListener getOnHostChangeListener()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: android.view.View$OnClickListener getOnHostChangeListener()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>($r0) in <org.xbmc.android.remote.presentation.controller.HomeController: android.view.View$OnClickListener getOnHostChangeListener()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.HomeController$3: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.Button,android.widget.GridView)>($r0, $r1, $r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void setupVersionHandler(android.widget.Button,android.widget.GridView)> ==> <org.xbmc.android.remote.presentation.controller.HomeController$3: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.Button,android.widget.GridView)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController$3: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.Button,android.widget.GridView)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: void setContentView(int)>(2130903046) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.view.View findViewById(int)>(2130968607) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.view.View findViewById(int)>(2130968609) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.HomeActivity: android.view.View findViewById(int)>(2130968606) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.presentation.activity.HomeActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()> ==> <org.xbmc.android.remote.presentation.activity.HomeActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
SPECIAL edge: specialinvoke $r0.<android.os.Handler: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)> ==> <android.os.Handler: void <init>()>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()> ==> <android.app.Activity: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)>($r2) in <org.xbmc.android.util.ClientFactory$1: void run()> ==> <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WebHeader;true;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WebFooter;true;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Footer; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OpenTag;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<li>") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CloseTag;\n;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CloseFinalTag;false") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OpenRecordSet; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CloseRecordSet; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OpenRecord; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CloseRecord; ;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OpenField;<field>;") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CloseField;</field>") in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, "SetResponseFormat", $r4) in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, "SetResponseFormat", $r3) in <org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)>("OK", $r3) in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Wrong data format, expected \'") in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', got \'") in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.") in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>($r4) in <org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)> ==> <java.lang.Exception: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>($r2, $r3, $r1) in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("OK") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("true") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("True") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("TRUE") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("false") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("False") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("FALSE") in <org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean contains(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)>($r0) in <org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.httpapi.client.ControlClient: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.client.ControlClient: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.client.ControlClient: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>(null, 0) in <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>($r2, $i1) in <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)>($r2, $r3) in <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.httpapi.client.VideoClient: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.client.VideoClient: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.client.VideoClient: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.httpapi.client.MusicClient: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.client.MusicClient: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.client.MusicClient: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.client.InfoClient: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.client.InfoClient: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>($r1) in <org.xbmc.httpapi.client.InfoClient: void setHost(org.xbmc.api.object.Host)> ==> <org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>
VIRTUAL edge: $r16 = virtualinvoke $r20.<org.apache.http.HttpException: java.lang.String getMessage()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r6 = virtualinvoke $r9.<org.xbmc.httpapi.WrongDataFormatException: java.lang.String getExpected()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.httpapi.WrongDataFormatException: java.lang.String getExpected()>
VIRTUAL edge: $r6 = virtualinvoke $r9.<org.xbmc.httpapi.WrongDataFormatException: java.lang.String getReceived()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <org.xbmc.httpapi.WrongDataFormatException: java.lang.String getReceived()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("Network unreachable") in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean startsWith(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.httpapi.WifiStateException: void printStackTrace()>() in <org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r62.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r61.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r60.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r59, $r41) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r60.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r61) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r59.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r58.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r57.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r56, $r41) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r57.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r58) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r56.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r55.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r54.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r53) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
VIRTUAL edge: virtualinvoke $r54.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r55, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r53.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>
SPECIAL edge: specialinvoke $r52.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r51.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r50.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
VIRTUAL edge: $z16 = virtualinvoke $r50.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r51, 0, $r52) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r49.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r48.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r41, $r47, $r41) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r48.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r49) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r47.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r46.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r45.<android.view.View: void <init>(android.content.Context)>($r41) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r44.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r43.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r42.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)>($r42) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r43) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r44) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()>
VIRTUAL edge: $z12 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z13 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r45, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z14 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r46) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z15 = virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r41.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r62) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>
STATIC edge: $r14 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r7 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r7 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()> ==> <android.app.ActivityGroup: void onPause()>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
SPECIAL edge: $z4 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void startActivity(android.content.Intent)>($r7) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void startActivity(android.content.Intent)>($r7) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()> ==> <android.app.ActivityGroup: void onResume()>
VIRTUAL edge: virtualinvoke $r14.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicGenreActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MusicGenreActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicGenreActivity)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicGenreActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.SongListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r12.<org.xbmc.android.remote.presentation.controller.SongListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.ArtistListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.ArtistListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)>($r0, $r10) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r11, 2130837533) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r10 = new org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
SPECIAL edge: specialinvoke $r16.<org.xbmc.android.remote.presentation.controller.ArtistListController$3: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$3: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController$3: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.ArtistListController$2: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$2: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController$2: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Artists...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IMusicManager: void getArtists(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>($r14, $r5, $r15) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IMusicManager: void getArtists(org.xbmc.api.business.DataResponse,android.content.Context)>($r16, $r15) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$8: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>($r0, $r1, $r0, $r2) in <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$8: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$8: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$9: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$9: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$9: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ArtistListController: boolean isCreated()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: boolean isCreated()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ArtistListController: void setTitle(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ArtistListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ArtistListController: void setTitle(java.lang.String)>("Artists...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.ArtistListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.ActivityGroup: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void setContentView(int)>(2130903053) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968644) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968644) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968645) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968642) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: android.view.View findViewById(int)>(2130968642) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: virtualinvoke $r1.<android.app.Activity: void registerForContextMenu(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: void registerForContextMenu(android.view.View)>
VIRTUAL edge: $r11 = virtualinvoke $r1.<android.app.Activity: android.content.res.Resources getResources()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.res.Resources getResources()>
VIRTUAL edge: $r15 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void <init>()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>
SPECIAL edge: specialinvoke $r40.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r39.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r38.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r37) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
VIRTUAL edge: virtualinvoke $r38.<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, $r39, 0, 0L) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r37.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
SPECIAL edge: specialinvoke $r36.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r35.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r34.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r33.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r32, $r19) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r33.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>($r34) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r32.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r31.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r30.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>(null, $r29, $r19) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r30.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>($r31) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r29.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r28.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r27.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r26.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
VIRTUAL edge: $z7 = virtualinvoke $r26.<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>($r27, 0, $r28) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r25.<android.view.View: void <init>(android.content.Context)>($r19) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r24.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>(null, $r19, $r23, $r19) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r24.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>($r25) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r23.<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>(0, "", "", 0) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
SPECIAL edge: specialinvoke $r22.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r21.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r20.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)>($r20) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>($r21) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>($r22) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()>
VIRTUAL edge: $z8 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z9 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, $r35, null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z10 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z11 = virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r36) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r19.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>($r40) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>
STATIC edge: $r13 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
CLINIT edge: $r6 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r6 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r3) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()> ==> <android.app.ActivityGroup: void onPause()>
SPECIAL edge: $z4 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r6.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/RemoteActivity") in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke $r6.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void startActivity(android.content.Intent)>($r6) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void startActivity(android.content.Intent)>($r6) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()> ==> <android.app.ActivityGroup: void onResume()>
VIRTUAL edge: virtualinvoke $r13.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicArtistActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.MusicArtistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicArtistActivity)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicArtistActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.SongListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r11.<org.xbmc.android.remote.presentation.controller.SongListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findTitleView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void findMessageView(android.view.View)>($r2) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)>($r0, $r10) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.ActivityGroup: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void setContentView(int)>(2130903052) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(2130968640) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(2130968641) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(2130968642) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: android.view.View findViewById(int)>(2130968642) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void <init>()> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>
SPECIAL edge: specialinvoke $r18.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r17.<android.view.MotionEvent: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.view.MotionEvent: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.MotionEvent: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.view.MotionEvent: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r16.<android.view.KeyEvent: void <init>(int,int)>(0, 0) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.KeyEvent: void <init>(int,int)>
SPECIAL edge: specialinvoke $r15.<android.view.MotionEvent: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.view.MotionEvent: void <init>()>
SPECIAL edge: specialinvoke $r14.<android.view.View: void <init>(android.content.Context)>($r10) in <dummyMainClass: void dummyMainMethod()> ==> <android.view.View: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r13.<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>($r12, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r13.<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)>($r14, $r15) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)>
STATIC edge: $z2 = staticinvoke <org.xbmc.android.remote.presentation.controller.RemoteController: boolean access$0(org.xbmc.android.remote.presentation.controller.RemoteController)>($r4) in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean access$0(org.xbmc.android.remote.presentation.controller.RemoteController)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.remote.presentation.controller.RemoteController: android.os.Vibrator access$1(org.xbmc.android.remote.presentation.controller.RemoteController)>($r4) in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: android.os.Vibrator access$1(org.xbmc.android.remote.presentation.controller.RemoteController)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>() in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <android.view.MotionEvent: int getAction()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>() in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <android.view.MotionEvent: int getAction()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.MotionEvent: int getAction()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<android.view.View: void playSoundEffect(int)>(0) in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <android.view.View: void playSoundEffect(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.View: void playSoundEffect(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>($r10) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>
CLINIT edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
STATIC edge: $r3 = staticinvoke <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
STATIC edge: $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1) in <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)> ==> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator") in <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)> ==> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
SPECIAL edge: specialinvoke $r11.<android.os.Bundle: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.os.Bundle: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)>($r11) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()>
VIRTUAL edge: $z2 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)>(0, $r16) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: $z3 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z4 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)>($r17) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)>
VIRTUAL edge: $z5 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z6 = virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)>(0, $r18) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r10.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()>
CLINIT edge: $r1 = new org.xbmc.android.util.KeyTracker in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <clinit>()>
STATIC edge: $r9 = staticinvoke <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RemoteActivity", $r5) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RemoteActivity", $r5) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RemoteActivity", $r5) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.util.Log: int i(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onPause()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()> ==> <android.app.Activity: void onPause()>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: $z0 = specialinvoke $r0.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onResume()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()> ==> <android.app.Activity: void onResume()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("AR = ") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", setting section bar to visible.") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("AR = ") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but row sections not found.") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("AR = ") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", leaving section bar hidden.") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r9.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)>(1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)>
SPECIAL edge: specialinvoke $r8.<org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>($r4) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void setContentView(int)>(2130903058) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: void setContentView(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(16908290) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r10 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.WindowManager getWindowManager()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.WindowManager getWindowManager()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968700) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968700) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <android.app.Activity: android.view.View findViewById(int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968683) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968701) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968702) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968703) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968704) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968684) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968685) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968686) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968687) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968688) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968689) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968690) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968691) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968692) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968693) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968694) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968695) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968696) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968697) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968698) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968699) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968701) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968702) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968703) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968704) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.RemoteActivity: android.view.View findViewById(int)>(2130968714) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "display") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "myvideo") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mymusic") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mypictures") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mytv") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "reverse") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "play") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "forward") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "skipminus") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "stop") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "pause") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "skipplus") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "title") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "up") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "info") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "left") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "select") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "right") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "menu") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "down") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "back") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "myvideo") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mymusic") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mypictures") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "mytv") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>($r4, "power") in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>($r0, $r2) in <org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: android.view.WindowManager getWindowManager()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.RemoteActivity)>($r0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.RemoteActivity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.RemoteActivity)> ==> <org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>($r2) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()> ==> <org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: void <init>()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()> ==> <android.app.Activity: void <init>()>
SPECIAL edge: specialinvoke $r8.<android.content.ContentValues: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.content.ContentValues: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentValues: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.ContentValues: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<android.content.ContentValues: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <android.content.ContentValues: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: void <init>()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()>() in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(null, "", $r1) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
VIRTUAL edge: $i2 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(null, $r2, "", $r3) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
VIRTUAL edge: $r6 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(null, $r4, "", $r5, "") in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)>(null) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(null, $r8) in <dummyMainClass: void dummyMainMethod()> ==> <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
CLINIT edge: $r9 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
STATIC edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
CLINIT edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <android.text.TextUtils: void <clinit>()>
CLINIT edge: $r10 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
STATIC edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
CLINIT edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <android.text.TextUtils: void <clinit>()>
CLINIT edge: $r8 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
STATIC edge: staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HostProvider", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.util.Log: int d(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
CLINIT edge: $r13 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.text.TextUtils: void <clinit>()>
CLINIT edge: $r13 = <org.xbmc.android.remote.business.provider.HostProvider: java.util.HashMap sHostsProjectionMap> in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r2 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
CLINIT edge: $r6 = <org.xbmc.android.remote.business.provider.HostProvider: android.content.UriMatcher sUriMatcher> in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
STATIC edge: $r17 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, $l0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r4 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.res.Resources: android.content.res.Resources getSystem()>
CLINIT edge: $r5 = new android.content.ContentValues in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.provider.HostProvider$Hosts: android.net.Uri CONTENT_URI> in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r5 = new android.content.ContentValues in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void <clinit>()>
CLINIT edge: <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR> = null in <android.text.TextUtils: void <clinit>()> ==> <android.text.TextUtils: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r20.<android.database.SQLException: void <init>(java.lang.String)>($r14) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.database.SQLException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.SQLException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <android.database.SQLException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>()> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r5.<android.content.ContentValues: void <init>(android.content.ContentValues)>($r2) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void <init>(android.content.ContentValues)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("name") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r14) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("address") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("address", "") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("http_port") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("http_port", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("user") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("user", "") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("pass") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("pass", "") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("esport") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("esport", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("timeout") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("timeout", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("wifi_only") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("wifi_only", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("access_point") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("access_point", "") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("mac_addr") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mac_addr", "") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("wol_port") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("wol_port", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("wol_wait") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: boolean containsKey(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("wol_wait", $r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
SPECIAL edge: specialinvoke $r5.<android.content.ContentValues: void <init>()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentValues: void <init>()>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentValues: void put(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentValues: boolean containsKey(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentValues: void <init>(android.content.ContentValues)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.ContentValues: void <init>(android.content.ContentValues)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown URI ") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to insert row into ") in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
VIRTUAL edge: $i3 = virtualinvoke $r6.<android.content.UriMatcher: int match(android.net.Uri)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.UriMatcher: int match(android.net.Uri)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.UriMatcher: int match(android.net.Uri)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r18 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.content.Context getContext()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.content.ContentProvider: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentProvider: android.content.Context getContext()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown URI ") in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<android.content.UriMatcher: int match(android.net.Uri)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)> ==> <android.content.UriMatcher: int match(android.net.Uri)>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown URI ") in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("SQLite database version: ") in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=") in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r8.<android.content.UriMatcher: int match(android.net.Uri)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.content.UriMatcher: int match(android.net.Uri)>
SPECIAL edge: specialinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("hosts") in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>($r13) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
VIRTUAL edge: $r16 = virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, $r2, $r3, $r4, null, null, $r9) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("hosts") in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>($r13) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
VIRTUAL edge: virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>($r15) in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteQueryBuilder: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.database.sqlite.SQLiteQueryBuilder: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r17 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.content.Context getContext()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.content.ContentProvider: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(" AND (") in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
VIRTUAL edge: $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown URI ") in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=") in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
SPECIAL edge: specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r10.<android.content.UriMatcher: int match(android.net.Uri)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <android.content.UriMatcher: int match(android.net.Uri)>
VIRTUAL edge: $r12 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.content.Context getContext()>() in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <android.content.ContentProvider: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(" AND (") in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
VIRTUAL edge: $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown URI ") in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=") in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r16 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
SPECIAL edge: specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r9.<android.content.UriMatcher: int match(android.net.Uri)>($r1) in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <android.content.UriMatcher: int match(android.net.Uri)>
VIRTUAL edge: $r11 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.content.Context getContext()>() in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <android.content.ContentProvider: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: void <init>(android.content.Context)>($r2) in <org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()> ==> <org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "xbmc_hosts.db", null, 4) in <org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: void <init>(android.content.Context)> ==> <android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
SPECIAL edge: specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.xbmc.android.remote.business.provider.HostProvider: android.content.Context getContext()>() in <org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()> ==> <android.content.ContentProvider: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r0.<android.content.ContentProvider: void <init>()>() in <org.xbmc.android.remote.business.provider.HostProvider: void <init>()> ==> <android.content.ContentProvider: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.content.ContentProvider: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.content.ContentProvider: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r16.<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r14.<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>() in <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r7.<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>() in <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
VIRTUAL edge: $r4 = virtualinvoke $r6.<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>() in <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityPause()> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(char)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getUnicodeChar()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <android.view.KeyEvent: int getUnicodeChar()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.KeyEvent: int getUnicodeChar()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z4 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("KB", $r1, 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "down", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "up", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "left", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "right", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "enter", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)>
CLINIT edge: $r2 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "org/xbmc/android/remote/presentation/activity/NowPlayingActivity") in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
INTERFACE edge: interfaceinvoke $r7.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "power", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r7.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("KB", "S", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)>($r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)>
CLINIT edge: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <java.lang.System: void <clinit>()>
STATIC edge: $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <java.lang.Math: float abs(float)>
STATIC edge: $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <java.lang.Math: float abs(float)>
STATIC edge: $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <java.lang.System: long currentTimeMillis()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <android.view.MotionEvent: int getAction()>
VIRTUAL edge: $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <android.view.MotionEvent: float getX()>
VIRTUAL edge: $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <android.view.MotionEvent: float getX()>
VIRTUAL edge: $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <android.view.MotionEvent: float getY()>
VIRTUAL edge: $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>() in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <android.view.MotionEvent: float getY()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.MotionEvent: float getY()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.MotionEvent: float getX()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>("enter") in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>($r2) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>($r2) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>
CLINIT edge: $r3 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State KEEP_TRACKING> in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
STATIC edge: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <java.lang.System: long currentTimeMillis()>
CLINIT edge: $r2 = <org.xbmc.android.util.KeyTracker$State: org.xbmc.android.util.KeyTracker$State NOT_TRACKING> in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$State: void <clinit>()>
CLINIT edge: $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r4 = <org.xbmc.android.util.KeyTracker$Stage: org.xbmc.android.util.KeyTracker$Stage UP> in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)>($r4, $l1) in <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<android.app.Activity: void setVolumeControlStream(int)>(3) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)> ==> <android.app.Activity: void setVolumeControlStream(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void setVolumeControlStream(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void disableKeyguard(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void disableKeyguard(android.app.Activity)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("keyguard") in <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void disableKeyguard(android.app.Activity)> ==> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", $r3, 1, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", $r3, 0, 0, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IMusicManager: void postActivity()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void postActivity()>
STATIC edge: staticinvoke <org.xbmc.android.remote.business.AbstractThread: void quitThreads()>() in <org.xbmc.android.remote.business.AbstractManager: void postActivity()> ==> <org.xbmc.android.remote.business.AbstractThread: void quitThreads()>
CLINIT edge: staticinvoke <org.xbmc.android.remote.business.MemCacheThread: void quit()>() in <org.xbmc.android.remote.business.AbstractThread: void quitThreads()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.remote.business.DownloadThread: void quit()>() in <org.xbmc.android.remote.business.AbstractThread: void quitThreads()> ==> <org.xbmc.android.remote.business.DownloadThread: void quit()>
STATIC edge: staticinvoke <org.xbmc.android.remote.business.DiskCacheThread: void quit()>() in <org.xbmc.android.remote.business.AbstractThread: void quitThreads()> ==> <org.xbmc.android.remote.business.DiskCacheThread: void quit()>
STATIC edge: staticinvoke <org.xbmc.android.remote.business.MemCacheThread: void quit()>() in <org.xbmc.android.remote.business.AbstractThread: void quitThreads()> ==> <org.xbmc.android.remote.business.MemCacheThread: void quit()>
CLINIT edge: staticinvoke <org.xbmc.android.remote.business.DownloadThread: void quit()>() in <org.xbmc.android.remote.business.AbstractThread: void quitThreads()> ==> <org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.business.AbstractManager: java.lang.Boolean DEBUG> in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.MemCacheThread: java.util.HashMap sNotAvailable> = $r1 in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.MemCacheThread: java.util.HashMap sCacheMedium> = $r1 in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.MemCacheThread: java.util.HashMap sCacheSmall> = $r1 in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.MemCacheThread: boolean DEBUG> = $z0 in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.DownloadThread: org.xbmc.android.remote.business.DownloadThread sHttpApiThread> in <org.xbmc.android.remote.business.DownloadThread: void quit()> ==> <org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.DownloadThread: org.xbmc.android.remote.business.DownloadThread sHttpApiThread> = null in <org.xbmc.android.remote.business.DownloadThread: void quit()> ==> <org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.DownloadThread: org.xbmc.android.remote.business.DownloadThread sHttpApiThread> in <org.xbmc.android.remote.business.DownloadThread: void quit()> ==> <org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.MemCacheThread: org.xbmc.android.remote.business.MemCacheThread sHttpApiThread> in <org.xbmc.android.remote.business.MemCacheThread: void quit()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.MemCacheThread: org.xbmc.android.remote.business.MemCacheThread sHttpApiThread> = null in <org.xbmc.android.remote.business.MemCacheThread: void quit()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: $r1 = <org.xbmc.android.remote.business.MemCacheThread: org.xbmc.android.remote.business.MemCacheThread sHttpApiThread> in <org.xbmc.android.remote.business.MemCacheThread: void quit()> ==> <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.remote.business.AbstractManager: java.lang.Boolean DEBUG> in <org.xbmc.android.remote.business.DownloadThread: void <clinit>()> ==> <org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
CLINIT edge: <org.xbmc.android.remote.business.DownloadThread: boolean DEBUG> = $z0 in <org.xbmc.android.remote.business.DownloadThread: void <clinit>()> ==> <org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<java.util.HashMap: void <init>()>() in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <java.util.HashMap: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.util.HashMap: void <init>()>() in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <java.util.HashMap: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.util.HashMap: void <init>()>() in <org.xbmc.android.remote.business.MemCacheThread: void <clinit>()> ==> <java.util.HashMap: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing \"") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing album \"") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" starting with song \"") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, "Song added to playlist.", "Error adding song!") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, "Playlist empty, added whole album.", "Song added to playlist.") in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r9, "Error playing song!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r9, "Error playing song!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>
STATIC edge: $r19 = staticinvoke <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>($r9, $r4, $r14, $r16) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r19.<android.app.Dialog: void show()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.app.Dialog: void show()>
SPECIAL edge: specialinvoke $r20.<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>($r0, $r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
SPECIAL edge: specialinvoke $r16.<org.xbmc.android.remote.presentation.activity.DialogFactory$4: void <init>(android.widget.ImageView)>($r8) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$4: void <init>(android.widget.ImageView)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$4: void <init>(android.widget.ImageView)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r15.<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>($r0, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>($r0, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.activity.DialogFactory$1: void <init>(android.widget.TextView,android.widget.TextView,android.widget.TextView)>($r7, $r10, $r9) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.presentation.activity.DialogFactory$1: void <init>(android.widget.TextView,android.widget.TextView,android.widget.TextView)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory$1: void <init>(android.widget.TextView,android.widget.TextView,android.widget.TextView)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r6.<android.app.Dialog: void <init>(android.content.Context)>($r1) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r6.<android.app.Dialog: void setContentView(int)>(2130903043) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void setContentView(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968588) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968591) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968593) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968589) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968595) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r6.<android.app.Dialog: android.view.View findViewById(int)>(2130968596) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: android.view.View findViewById(int)>
VIRTUAL edge: virtualinvoke $r6.<android.app.Dialog: void setTitle(java.lang.CharSequence)>($r13) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <android.app.Dialog: void setTitle(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Adding album \"") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to playlist...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing album \"") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" by ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r15.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, $r7, "Error adding album!") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r15.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r7, "Error playing album!", 1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
VIRTUAL edge: $r16 = virtualinvoke $r18.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r16 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r16 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r9.<org.xbmc.api.business.IMusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r15, $r14, $r16) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
INTERFACE edge: interfaceinvoke $r9.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r15, $r14, $r16) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$20: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$20: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$20: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$11: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$11: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$11: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
INTERFACE edge: interfaceinvoke $r0.<org.xbmc.api.business.IMusicManager: void updateAlbumInfo(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r5, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager: void updateAlbumInfo(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
INTERFACE edge: interfaceinvoke $r0.<org.xbmc.api.business.IMusicManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)>($r16, $r2, 3, null, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.AbstractManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.business.AbstractManager$1: void <init>(org.xbmc.android.remote.business.AbstractManager,org.xbmc.api.object.ICoverArt,int,org.xbmc.api.business.DataResponse,android.graphics.Bitmap,android.content.Context)>($r0, $r2, $i0, $r1, $r3, $r4) in <org.xbmc.android.remote.business.AbstractManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)> ==> <org.xbmc.android.remote.business.AbstractManager$1: void <init>(org.xbmc.android.remote.business.AbstractManager,org.xbmc.api.object.ICoverArt,int,org.xbmc.api.business.DataResponse,android.graphics.Bitmap,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.AbstractManager$1: void <init>(org.xbmc.android.remote.business.AbstractManager,org.xbmc.api.object.ICoverArt,int,org.xbmc.api.business.DataResponse,android.graphics.Bitmap,android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$29: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void updateAlbumInfo(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$29: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$29: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs of album ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs from ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs of genre ") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r11, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r11, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r10.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r11, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
CLINIT edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.android.remote.presentation.controller.SongListController$4: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Genre)>($r0, $r3) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.SongListController$4: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SongListController$4: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Genre)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r11.<org.xbmc.android.remote.presentation.controller.SongListController$3: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Artist)>($r0, $r2) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.SongListController$3: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Artist)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SongListController$3: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Artist)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Songs...") in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - Songs...") in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.presentation.controller.SongListController$2: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Album)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.SongListController$2: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Album)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.SongListController$2: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Album)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void showOnLoading()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void setTitle(java.lang.String)>("Songs...") in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void setTitle(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.SongListController: void setTitle(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all albums by ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all albums of genre ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs of genre ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r10, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r10, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r9.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r10, $r4, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
VIRTUAL edge: $r13 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r13 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r13 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r14 = virtualinvoke $r10.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r14 = virtualinvoke $r10.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r14 = virtualinvoke $r10.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r14 = virtualinvoke $r10.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>($r9, $r7, $r13) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>($r9, $r7, $r13) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>($r9, $r5, $r7, $r13) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.business.MusicManager$25: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r4, $r2, $r3) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$25: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$25: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$21: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$21: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$21: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<android.app.Activity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r15 = virtualinvoke $r6.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IMusicManager: void postActivity()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void postActivity()>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Queue only ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Artist") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Play only ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Artist") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Adding all songs by ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to playlist...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs by ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Adding all songs of genre ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to playlist...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs of genre ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, $r9, "Error adding songs!") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r10, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, $r9, "Error adding songs!") in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r17.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r10, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r16.<org.xbmc.api.business.IMusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>($r17, $r15, $r18) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
INTERFACE edge: interfaceinvoke $r16.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>($r17, $r15, $r18) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
INTERFACE edge: interfaceinvoke $r16.<org.xbmc.api.business.IMusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>($r17, $r15, $r20, $r18) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>
INTERFACE edge: interfaceinvoke $r16.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>($r17, $r15, $r20, $r18) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>
SPECIAL edge: specialinvoke $r5.<org.xbmc.android.remote.business.MusicManager$16: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>($r0, $r1, $r0, $r4, $r2, $r3) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$16: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$16: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$24: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$24: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$24: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$15: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$15: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$15: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r4.<android.app.ProgressDialog: void setMax(int)>($i0) in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()> ==> <android.app.ProgressDialog: void setMax(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.ProgressDialog: void setMax(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IInfoManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()>() in <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()>
CLINIT edge: $r5 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r9) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r16 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r9, "No XBMC hosts defined, please do that first.", 1) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r9) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>
CLINIT edge: r21 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r10 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.util.AbstractList: java.util.Iterator iterator()>
VIRTUAL edge: $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.util.ArrayList: int size()>
SPECIAL edge: specialinvoke r21.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r8, class "org/xbmc/android/remote/presentation/activity/HostSettingsActivity") in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke r20.<org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>($r0, r18) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>
SPECIAL edge: specialinvoke r19.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r8) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r19.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>("Pick your XBMC!") in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r19.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r22, r20) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>
VIRTUAL edge: $r2 = virtualinvoke r19.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r18.<java.util.HashMap: void <init>()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.util.HashMap: void <init>()>
VIRTUAL edge: virtualinvoke r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r14) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r8.<android.app.Activity: void startActivity(android.content.Intent)>(r21) in <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IInfoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IInfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r3, 120, $r4) in <org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.InfoManager$1: void <init>(org.xbmc.android.remote.business.InfoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>($r0, $r1, $r0, $r2, $i0) in <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <org.xbmc.android.remote.business.InfoManager$1: void <init>(org.xbmc.android.remote.business.InfoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.InfoManager$1: void <init>(org.xbmc.android.remote.business.InfoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r3 = virtualinvoke $r10.<android.app.Activity: android.view.View findViewById(int)>(2130968609) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r3 = virtualinvoke $r10.<android.app.Activity: android.view.View findViewById(int)>(2130968607) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()>() in <org.xbmc.android.remote.presentation.controller.HomeController: void access$3(org.xbmc.android.remote.presentation.controller.HomeController)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void remove(java.lang.Object)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()> ==> <android.widget.ArrayAdapter: void remove(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void add(java.lang.Object)>($r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()> ==> <android.widget.ArrayAdapter: void add(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.widget.ArrayAdapter: void remove(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>($r1, $r2) in <org.xbmc.android.remote.presentation.controller.HomeController: void access$5(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setCurrentTab(int)>($i1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setCurrentTab(int)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int getTabCount()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setCurrentTab(int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int getTabCount()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void updateLayoutDimensions()>() in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$0(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void updateLayoutDimensions()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)>($i0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$5(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,int)> ==> <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)>
CLINIT edge: $i0 = <org.xbmc.android.widget.slidingtabs.SnapAnimation: int NO_ANIMATION> in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Math: int round(float)>($f1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <java.lang.Math: int round(float)>
STATIC edge: $i0 = staticinvoke <java.lang.Math: int round(float)>($f1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <java.lang.Math: int round(float)>
STATIC edge: $i1 = staticinvoke <java.lang.Math: int round(float)>($f1) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <java.lang.Math: int round(float)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.widget.slidingtabs.SnapAnimation: void init(int,int)>($i1, $i0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void init(int,int)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.widget.slidingtabs.SnapAnimation: void setDuration(long)>(100L) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <android.view.animation.Animation: void setDuration(long)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.widget.slidingtabs.SnapAnimation: void init(int,int)>($i1, $i0) in <org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)> ==> <org.xbmc.android.widget.slidingtabs.SnapAnimation: void init(int,int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.view.animation.Animation: void setDuration(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
INTERFACE edge: interfaceinvoke $r18.<org.xbmc.api.business.IInfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r19, 120, $r11) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r17.<org.xbmc.api.business.IInfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r18, 120, $r4) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<android.app.Activity: android.view.View findViewById(int)>(2130968607) in <org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,long,long)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: virtualinvoke $r12.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r12.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r12.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r12.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r12.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke $r12.<android.app.Activity: android.view.View findViewById(int)>(2130968607) in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: android.view.View findViewById(int)>
VIRTUAL edge: $r4 = virtualinvoke $r12.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()>() in <org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.HostPreference: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)> ==> <android.preference.Preference: android.content.Context getContext()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: android.content.Context getContext()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.HomeActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r6 = virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.HostPreference: android.content.Context getContext()>() in <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)> ==> <android.preference.Preference: android.content.Context getContext()>
VIRTUAL edge: virtualinvoke $r15.<android.app.Activity: void startActivity(android.content.Intent)>($r5) in <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>($r3) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()> ==> <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)>($r0) in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void start()>() in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void start()>() in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: boolean isAlive()>() in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <java.lang.Thread: boolean isAlive()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)>($r0) in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void start()>() in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r1.<org.xbmc.android.remote.business.NowPlayingPollerThread: void start()>() in <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>($r4, $r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
STATIC edge: $r5 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>($r4, $r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.String: void <clinit>()>
STATIC edge: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NowPlayingPollerThread", $r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.util.Log: int e(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r18) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
STATIC edge: staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NowPlayingPollerThread", $r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.util.Log: int e(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
STATIC edge: $r16 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r1, 0, $i1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
STATIC edge: staticinvoke <org.xbmc.android.remote.business.NowPlayingPollerThread: void sleep(long)>(1000L) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.Thread: void sleep(long)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
CLINIT edge: $r3 = <org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host host> in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>($r0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>($r1) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.android.util.WifiHelper: int getWifiState()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: int getWifiState()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.android.util.WifiHelper: int getWifiState()>() in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.android.util.WifiHelper: int getWifiState()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.util.Log: int e(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<org.xbmc.httpapi.WifiStateException: void <init>(int)>($i0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.httpapi.WifiStateException: void <init>(int)>
SPECIAL edge: specialinvoke $r6.<org.xbmc.httpapi.WifiStateException: void <init>(int)>($i0) in <org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)> ==> <org.xbmc.httpapi.WifiStateException: void <init>(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isAlive()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r15.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r16) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>() in <android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)> ==> <android.graphics.drawable.Drawable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.graphics.drawable.Drawable: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <android.graphics.drawable.Drawable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: boolean isInterrupted()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.Thread: boolean isInterrupted()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>(666, $r3) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>(669, $r3) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>(667, $r3) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
SPECIAL edge: $r1 = specialinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)>(1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>(669, $r3) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>(666, $r3) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)>(2) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)>
CLINIT edge: $r10 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(java.lang.String)>($r9) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
STATIC edge: $r10 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(java.lang.String)>($r9) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <org.xbmc.android.util.Base64: byte[] decode(java.lang.String)>
CLINIT edge: <org.xbmc.android.util.Base64: boolean $assertionsDisabled> = $z1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _ORDERED_DECODABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _ORDERED_ALPHABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _URL_SAFE_DECODABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _URL_SAFE_ALPHABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _STANDARD_DECODABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <org.xbmc.android.util.Base64: byte[] _STANDARD_ALPHABET> = $r1 in <org.xbmc.android.util.Base64: void <clinit>()> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)>($r0, 0) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
STATIC edge: $r1 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)>($r0, 0) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String)> ==> <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)>($r2, 0, $i1, $i0) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)>($r2, 0, $i1, $i0) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Bad Base64 input character \'%c\' in array position %d", $r6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Byte: java.lang.Byte valueOf(byte)>
STATIC edge: $i8 = staticinvoke <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)>($r9, 0, $r1, $i3, $i2) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)>
STATIC edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r0, 0, $i8) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
STATIC edge: $r8 = staticinvoke <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>($i2) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and process %d bytes.", $r6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Bad Base64 input character \'%c\' in array position %d", $r6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Byte: void <clinit>()>
CLINIT edge: $i8 = staticinvoke <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)>($r9, 0, $r1, $i3, $i2) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r0, 0, $i8) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>($i2) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and process %d bytes.", $r6) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>($i2) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Destination array with length %d cannot have offset of %d and still store three bytes.", $r7) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and still process four bytes.", $r7) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.Base64: byte[] getDecodabet(int)>($i2) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Destination array with length %d cannot have offset of %d and still store three bytes.", $r7) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and still process four bytes.", $r7) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.Base64: byte[] _URL_SAFE_DECODABET> in <org.xbmc.android.util.Base64: byte[] getDecodabet(int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.Base64: byte[] _STANDARD_DECODABET> in <org.xbmc.android.util.Base64: byte[] getDecodabet(int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.android.util.Base64: byte[] _ORDERED_DECODABET> in <org.xbmc.android.util.Base64: byte[] getDecodabet(int)> ==> <org.xbmc.android.util.Base64: void <clinit>()>
CLINIT edge: <java.lang.Byte: java.lang.Class TYPE> = null in <java.lang.Byte: void <clinit>()> ==> <java.lang.Byte: void <clinit>()>
SPECIAL edge: specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Source array was null.") in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.NullPointerException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Destination array was null.") in <org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.NullPointerException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NullPointerException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NullPointerException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.Byte valueOf(byte)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.io.IOException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Base64-encoded string must have at least four characters, but length specified was ") in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
VIRTUAL edge: $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4) in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot decode null source array.") in <org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.NullPointerException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r9) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<java.util.zip.GZIPInputStream: int read(byte[])>($r7) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.FilterInputStream: int read(byte[])>
VIRTUAL edge: virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.util.zip.GZIPInputStream: void close()>
VIRTUAL edge: virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.util.zip.GZIPInputStream: void close()>
VIRTUAL edge: virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.util.zip.GZIPInputStream: void close()>
SPECIAL edge: specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayInputStream: void <init>(byte[])>
VIRTUAL edge: virtualinvoke $r9.<java.io.ByteArrayInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayInputStream: void close()>
SPECIAL edge: specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: void <init>()>
VIRTUAL edge: $r7 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: byte[] toByteArray()>
VIRTUAL edge: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: void close()>
VIRTUAL edge: virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r7, 0, $i1) in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: void write(byte[],int,int)>
VIRTUAL edge: virtualinvoke $r4.<java.io.ByteArrayOutputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: void close()>
VIRTUAL edge: virtualinvoke $r4.<java.io.ByteArrayOutputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayOutputStream: void close()>
VIRTUAL edge: virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayInputStream: void close()>
VIRTUAL edge: virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.io.ByteArrayInputStream: void close()>
SPECIAL edge: specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Input string was null.") in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.lang.NullPointerException: void <init>(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>() in <org.xbmc.android.util.Base64: void <clinit>()> ==> <java.lang.Class: boolean desiredAssertionStatus()>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
SPECIAL edge: specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r6, 8192) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.io.BufferedReader: void <init>(java.io.Reader,int)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.io.BufferedReader: java.lang.String readLine()>
VIRTUAL edge: virtualinvoke $r2.<java.io.BufferedReader: void close()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.io.BufferedReader: void close()>
SPECIAL edge: specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.net.URL: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)> ==> <java.net.URL: java.net.URLConnection openConnection()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>($r5, $i0, $r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
CLINIT edge: $r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)> ==> <android.os.Message: void <clinit>()>
STATIC edge: $r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)> ==> <android.os.Message: android.os.Message obtain(android.os.Handler)>
CLINIT edge: <android.os.Message: android.os.Parcelable$Creator CREATOR> = null in <android.os.Message: void <clinit>()> ==> <android.os.Message: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Message: android.os.Message obtain(android.os.Handler)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isInterrupted()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<java.util.HashSet: void <init>()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)> ==> <java.util.HashSet: void <init>()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.NowPlayingPollerThread$1: void <init>(org.xbmc.android.remote.business.NowPlayingPollerThread,android.content.Context)>($r0, $r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void <init>(org.xbmc.android.remote.business.NowPlayingPollerThread,android.content.Context)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void <init>(org.xbmc.android.remote.business.NowPlayingPollerThread,android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Thread: void <init>()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $z2 = virtualinvoke $r5.<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)>($r3) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>($r1, 666, $r2) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>($r1, 667, $r2) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
VIRTUAL edge: virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)> ==> <java.util.HashSet: boolean add(java.lang.Object)>
INTERFACE edge: $r2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)> ==> <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)>
STATIC edge: $r9 = staticinvoke <org.xbmc.httpapi.client.MusicClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>($r2) in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.client.MusicClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
STATIC edge: $r9 = staticinvoke <org.xbmc.httpapi.client.PictureClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>($r2) in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.client.PictureClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
STATIC edge: $r9 = staticinvoke <org.xbmc.httpapi.client.VideoClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>($r2) in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.client.VideoClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
SPECIAL edge: specialinvoke $r1.<org.xbmc.httpapi.client.VideoClient$1: void <init>(java.util.HashMap)>($r0) in <org.xbmc.httpapi.client.VideoClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)> ==> <org.xbmc.httpapi.client.VideoClient$1: void <init>(java.util.HashMap)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.VideoClient$1: void <init>(java.util.HashMap)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.httpapi.client.PictureClient$1: void <init>(java.util.HashMap)>($r0) in <org.xbmc.httpapi.client.PictureClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)> ==> <org.xbmc.httpapi.client.PictureClient$1: void <init>(java.util.HashMap)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.PictureClient$1: void <init>(java.util.HashMap)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.xbmc.httpapi.client.MusicClient$1: void <init>(java.util.HashMap)>($r0) in <org.xbmc.httpapi.client.MusicClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)> ==> <org.xbmc.httpapi.client.MusicClient$1: void <init>(java.util.HashMap)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.MusicClient$1: void <init>(java.util.HashMap)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.httpapi.client.ControlClient$1: void <init>(org.xbmc.httpapi.client.ControlClient)>($r0) in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.client.ControlClient$1: void <init>(org.xbmc.httpapi.client.ControlClient)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.httpapi.client.ControlClient$1: void <init>(org.xbmc.httpapi.client.ControlClient)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String)>($r1, "GetCurrentlyPlaying") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, $r2, "") in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r5.<java.util.HashMap: void <init>()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.util.HashMap: void <init>()>
VIRTUAL edge: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "") in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2) in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("<li>") in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2) in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String,int)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $i5 = virtualinvoke $r3.<java.lang.String: int length()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String trim()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>() in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>($r2, $r3, $r1) in <org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r8 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Filename") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r8 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Filename") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>("Type") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: boolean containsKey(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>("Type") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: boolean containsKey(java.lang.Object)>
VIRTUAL edge: $r8 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Type") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r8 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Type") in <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(668) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)> ==> <android.os.Handler: boolean sendEmptyMessage(int)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: boolean sendEmptyMessage(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)> ==> <android.os.Handler: boolean sendMessage(android.os.Message)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r5) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r17) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r15) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.INotifiableManager: void onError(java.lang.Exception)>($r12) in <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)>
STATIC edge: $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r3, $r5, 1) in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)> ==> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
SPECIAL edge: specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Poller Error: ") in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)>($i0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)>
CLINIT edge: $r3 = <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType absolute> in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.api.type.SeekType in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType[] ENUM$VALUES> = $r2 in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType absolute> in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: $r0 = <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType relative> in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: $r2 = newarray (org.xbmc.api.type.SeekType)[2] in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType absolute> = $r0 in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: $r0 = new org.xbmc.api.type.SeekType in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
CLINIT edge: <org.xbmc.api.type.SeekType: org.xbmc.api.type.SeekType relative> = $r0 in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)>("relative", 0) in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)>("absolute", 1) in <org.xbmc.api.type.SeekType: void <clinit>()> ==> <org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IControlManager: void seek(org.xbmc.api.business.DataResponse,org.xbmc.api.type.SeekType,int,android.content.Context)>($r2, $r3, $i0, $r5) in <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)> ==> <org.xbmc.android.remote.business.ControlManager: void seek(org.xbmc.api.business.DataResponse,org.xbmc.api.type.SeekType,int,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.ControlManager$5: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.type.SeekType,int)>($r0, $r1, $r0, $r3, $r2, $i0) in <org.xbmc.android.remote.business.ControlManager: void seek(org.xbmc.api.business.DataResponse,org.xbmc.api.type.SeekType,int,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$5: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.type.SeekType,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$5: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.type.SeekType,int)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)>($i0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", $r4, 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "pause", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "play", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r5, $i2, $r10) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r5, $i2, $r10) in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.ControlManager$11: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>($r0, $r1, $r0, $r2, $i0) in <org.xbmc.android.remote.business.ControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$11: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$11: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.ControlManager$10: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>($r0, $r1, $r0, $r2, $i0) in <org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$10: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$10: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SettingsController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)>
CLINIT edge: staticinvoke <java.lang.System: void exit(int)>(0) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <java.lang.System: void <clinit>()>
STATIC edge: staticinvoke <java.lang.System: void exit(int)>(0) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <java.lang.System: void exit(int)>
SPECIAL edge: specialinvoke $r2.<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>($r3) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.HostPreference: void setTitle(java.lang.CharSequence)>("New XBMC Host") in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <android.preference.Preference: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.HostPreference: void create(android.preference.PreferenceManager)>($r6) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.HostPreference: void create(android.preference.PreferenceManager)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>($r1) in <org.xbmc.android.remote.presentation.controller.HostPreference: void create(android.preference.PreferenceManager)> ==> <android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.remote.presentation.controller.HostPreference: void showDialog(android.os.Bundle)>(null) in <org.xbmc.android.remote.presentation.controller.HostPreference: void create(android.preference.PreferenceManager)> ==> <android.preference.DialogPreference: void showDialog(android.os.Bundle)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.DialogPreference: void showDialog(android.os.Bundle)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
VIRTUAL edge: $r7 = virtualinvoke $r5.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>() in <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>
CLINIT edge: $r2 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r3) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
STATIC edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r3, null) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>
STATIC edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r3, $r5) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>
STATIC edge: $r2 = staticinvoke <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>($r3) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>
CLINIT edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r3, null) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
CLINIT edge: staticinvoke <org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>($r3, $r5) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.HostFactory: void <clinit>()>
VIRTUAL edge: $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <java.util.ArrayList: java.lang.Object get(int)>
VIRTUAL edge: $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <java.util.ArrayList: int size()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: $z2 = virtualinvoke $r5.<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: $r10 = virtualinvoke $r12.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r9.<org.xbmc.api.business.IVideoManager: void updateMovieDetails(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Movie,android.content.Context)>($r7, $r11, $r10) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)> ==> <org.xbmc.android.remote.business.VideoManager: void updateMovieDetails(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Movie,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.VideoManager$1: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Movie)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.VideoManager: void updateMovieDetails(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Movie,android.content.Context)> ==> <org.xbmc.android.remote.business.VideoManager$1: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Movie)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.VideoManager$1: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Movie)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IVideoManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)>($r3, $r4, 3, null, $r6) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)> ==> <org.xbmc.android.remote.business.AbstractManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IVideoManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IVideoManager: void postActivity()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void postActivity()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IVideoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r11.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r3, $r7, $r9) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.ControlManager$1: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$1: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$1: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.business.IControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r3, $r6, $r8) in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<org.xbmc.api.object.Movie: java.lang.String getPath()>() in <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)> ==> <org.xbmc.api.object.Movie: java.lang.String getPath()>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2) in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("://") in <org.xbmc.api.object.Movie: java.lang.String getPath()> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeplus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r4.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "volumeminus", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: $r3 = virtualinvoke $r5.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r7.<java.util.Hashtable: void clear()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)> ==> <java.util.Hashtable: void clear()>
VIRTUAL edge: virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) in <org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>() in <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>
VIRTUAL edge: $r3 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2) in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>() in <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
VIRTUAL edge: virtualinvoke $r0.<org.xbmc.android.util.OnLongPressBackKeyTracker: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>($i0, $r1, $r2, $i1) in <org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <clinit>()>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <clinit>()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.RemoteActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>() in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: int getFlags()>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>($i1) in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: android.content.Intent setFlags(int)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.RemoteActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>() in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: int getFlags()>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>($i1) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: android.content.Intent setFlags(int)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.activity.ListActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <org.xbmc.android.remote.presentation.activity.ListActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.ListActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)> ==> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r4, class "org/xbmc/android/remote/presentation/activity/HomeActivity") in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<android.content.Intent: int getFlags()>() in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: int getFlags()>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent setFlags(int)>($i1) in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.content.Intent: android.content.Intent setFlags(int)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.activity.ListActivity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.controller.FileListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Queue ") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" songs") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Play ") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" songs") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<android.view.View: java.lang.Object getTag()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <android.view.View: java.lang.Object getTag()>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.FileListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()>() in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()>
SPECIAL edge: specialinvoke $r6.<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>($r0) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
SPECIAL edge: specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Are you sure you want XBMC to rescan your music library?") in <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.FileListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Adding all songs of genre ") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to playlist...") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Playing all songs of genre ") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>($r0, $r4, $r6, "Error adding songs!") in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>($r0, $r4, $r12, "Error playing songs!", 1) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.controller.FileListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.api.object.Album: int getMediaType()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.api.object.Album: int getMediaType()>
VIRTUAL edge: $l1 = virtualinvoke $r2.<org.xbmc.api.object.Album: long getCrc()>() in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.api.object.Album: long getCrc()>
CLINIT edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <org.xbmc.api.object.Album: long getCrc()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $i3 = staticinvoke <org.xbmc.android.util.Crc32: int computeLowerCase(java.lang.String)>($r1) in <org.xbmc.api.object.Album: long getCrc()> ==> <org.xbmc.android.util.Crc32: int computeLowerCase(java.lang.String)>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <org.xbmc.api.object.Album: long getCrc()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r0 = staticinvoke <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)>($r0) in <org.xbmc.android.util.Crc32: int computeLowerCase(java.lang.String)> ==> <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)>
STATIC edge: $i0 = staticinvoke <org.xbmc.android.util.Crc32: int compute(java.lang.String)>($r0) in <org.xbmc.android.util.Crc32: int computeLowerCase(java.lang.String)> ==> <org.xbmc.android.util.Crc32: int compute(java.lang.String)>
CLINIT edge: $r0 = new java.lang.String in <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)> ==> <java.lang.Character: char toLowerCase(char)>
CLINIT edge: $c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3) in <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.util.Crc32: int compute(byte[],int)>($r2, -1) in <org.xbmc.android.util.Crc32: int compute(java.lang.String)> ==> <org.xbmc.android.util.Crc32: int compute(byte[],int)>
STATIC edge: $i2 = staticinvoke <org.xbmc.android.util.Crc32: int compute(byte[],int)>($r2, -1) in <org.xbmc.android.util.Crc32: int compute(java.lang.String)> ==> <org.xbmc.android.util.Crc32: int compute(byte[],int)>
STATIC edge: $i0 = staticinvoke <org.xbmc.android.util.Crc32: int compute(byte,int)>($b2, $i0) in <org.xbmc.android.util.Crc32: int compute(byte[],int)> ==> <org.xbmc.android.util.Crc32: int compute(byte,int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <org.xbmc.android.util.Crc32: int compute(java.lang.String)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>() in <org.xbmc.android.util.Crc32: int compute(java.lang.String)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>() in <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)> ==> <java.lang.String: char[] toCharArray()>
SPECIAL edge: specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1) in <org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)> ==> <java.lang.String: void <init>(char[])>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: char[] toCharArray()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1) in <org.xbmc.api.object.Album: long getCrc()> ==> <java.lang.StringBuilder: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1) in <org.xbmc.api.object.Album: long getCrc()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in <org.xbmc.api.object.Album: long getCrc()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: virtualinvoke $r15.<android.app.Activity: void startActivity(android.content.Intent)>($r5) in <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IInfoManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IInfoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IInfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r3, 120, $r4) in <org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<android.app.Activity: android.content.Intent getIntent()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)> ==> <android.app.Activity: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IVideoManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r1.<org.xbmc.api.business.IVideoManager: void postActivity()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void postActivity()>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.FileListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.ActorListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)>
CLINIT edge: $r3 = new android.content.Intent in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r7, class "org/xbmc/android/remote/presentation/activity/MovieDetailsActivity") in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
VIRTUAL edge: virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("movie", $r12) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
SPECIAL edge: specialinvoke $r14.<org.xbmc.android.remote.presentation.controller.MovieListController$7: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$7: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$7: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: $r15 = virtualinvoke $r7.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r7.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
INTERFACE edge: interfaceinvoke $r13.<org.xbmc.api.business.IControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r14, $r6, $r15) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.controller.FileListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.FileListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.ActorListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.MovieListController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)>
SPECIAL edge: specialinvoke $r6.<org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>
SPECIAL edge: specialinvoke $r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r1) in <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)> ==> <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
VIRTUAL edge: $r5 = virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Are you sure you want XBMC to rescan your movie library?") in <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>() in <org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)> ==> <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
VIRTUAL edge: virtualinvoke $r8.<org.xbmc.android.remote.presentation.controller.FileListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r7.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r6.<org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r3.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IVideoManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: $r7 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r14.<android.app.Activity: void startActivity(android.content.Intent)>($r5) in <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: $r11 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r11 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.presentation.INotifiableController: void onMessage(java.lang.String)>($r1) in <org.xbmc.android.remote.business.EventClientManager: void onMessage(java.lang.String)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onMessage(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.presentation.controller.AbstractController$11: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController,java.lang.String)>($r0, $r1) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onMessage(java.lang.String)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController$11: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <org.xbmc.android.remote.presentation.controller.AbstractController$11: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController: void onMessage(java.lang.String)> ==> <android.app.Activity: void runOnUiThread(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void runOnUiThread(java.lang.Runnable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>($r3) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityPause()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
INTERFACE edge: interfaceinvoke $r7.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>(null) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IMusicManager: void postActivity()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <org.xbmc.android.remote.business.AbstractManager: void postActivity()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreateOptionsMenu(android.view.Menu)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>($r1, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onOptionsItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)>($r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r12.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
SPECIAL edge: specialinvoke $r12.<org.xbmc.api.business.DataResponse: void <init>()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.api.business.DataResponse: void <init>()>
VIRTUAL edge: $r13 = virtualinvoke $r5.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r13 = virtualinvoke $r5.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r11.<org.xbmc.api.business.IMusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r12, $i0, $r13) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r11.<org.xbmc.api.business.IMusicManager: void removeFromPlaylist(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r12, $r14, $r13) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)> ==> <org.xbmc.android.remote.business.MusicManager: void removeFromPlaylist(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$19: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void removeFromPlaylist(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$19: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$19: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
SPECIAL edge: specialinvoke $r3.<org.xbmc.android.remote.business.MusicManager$17: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>($r0, $r1, $r0, $r2, $i0) in <org.xbmc.android.remote.business.MusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$17: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$17: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $z2 = virtualinvoke $r5.<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r1.<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)>($r0) in <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()> ==> <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)>
STATIC edge: $r4 = staticinvoke <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>($r2) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)>($r3) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.presentation.controller.ListController: void onActivityResume(android.app.Activity)>($r1) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
INTERFACE edge: interfaceinvoke $r7.<org.xbmc.api.business.IControlManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IMusicManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>($r0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)> ==> <org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
VIRTUAL edge: virtualinvoke $r5.<org.xbmc.android.remote.business.VideoManager: void setHandler(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <org.xbmc.android.remote.business.AbstractManager: void setHandler(android.os.Handler)>
VIRTUAL edge: virtualinvoke $r4.<org.xbmc.android.remote.business.MusicManager: void setHandler(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <org.xbmc.android.remote.business.AbstractManager: void setHandler(android.os.Handler)>
VIRTUAL edge: virtualinvoke $r3.<org.xbmc.android.remote.business.ControlManager: void setHandler(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <org.xbmc.android.remote.business.AbstractManager: void setHandler(android.os.Handler)>
VIRTUAL edge: virtualinvoke $r2.<org.xbmc.android.remote.business.InfoManager: void setHandler(android.os.Handler)>($r1) in <org.xbmc.android.remote.business.ManagerThread: void run()> ==> <org.xbmc.android.remote.business.AbstractManager: void setHandler(android.os.Handler)>
VIRTUAL edge: virtualinvoke $r3.<android.app.Activity: void finish()>() in <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void finish()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.app.Activity: void finish()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", $r4, 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "pause", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
INTERFACE edge: interfaceinvoke $r6.<org.xbmc.api.business.IEventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>("R1", "play", 0, 1, 1, 0, 0) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r3) in <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r5, $i2, $r10) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r8.<org.xbmc.api.business.IControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r5, $i2, $r10) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.ControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r10.<org.xbmc.api.business.IControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r3, $i0, $r12) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>
INTERFACE edge: interfaceinvoke $r13.<org.xbmc.api.business.IMusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)>($r3, $i0, $r12) in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <org.xbmc.android.remote.business.MusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)>
VIRTUAL edge: $r12 = virtualinvoke $r11.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r12 = virtualinvoke $r11.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r12.<java.io.IOException: void printStackTrace()>() in <org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $r6 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r18 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r16 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Throwable: java.lang.String getMessage()>
VIRTUAL edge: $r16 = virtualinvoke $r18.<java.lang.Class: java.lang.String getCanonicalName()>() in <org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)> ==> <java.lang.Class: java.lang.String getCanonicalName()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getCanonicalName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r33.<java.io.IOException: void printStackTrace()>() in <org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r1.<java.io.IOException: void printStackTrace()>() in <org.xbmc.eventclient.EventClient$PingThread: void run()> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void removeFromPlaylist(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <android.os.Handler: boolean post(java.lang.Runnable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <org.xbmc.android.remote.business.MusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r13 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r13 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.VideoManager: void updateMovieDetails(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Movie,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <org.xbmc.android.remote.business.ControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.ControlManager: void seek(org.xbmc.api.business.DataResponse,org.xbmc.api.type.SeekType,int,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)> ==> <java.util.HashSet: java.util.Iterator iterator()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.util.HashSet: java.util.Iterator iterator()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)> ==> <java.util.HashSet: java.util.Iterator iterator()>
INTERFACE edge: $r4 = interfaceinvoke $r11.<org.xbmc.api.data.IInfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)>($r9) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.InfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $r2 = virtualinvoke $r4.<org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, "GetCurrentlyPlaying", "") in <org.xbmc.httpapi.client.InfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r4.<org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)>("FileDownload", $r6) in <org.xbmc.httpapi.client.InfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>() in <org.xbmc.httpapi.client.InfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)> ==> <java.util.AbstractList: java.util.Iterator iterator()>
SPECIAL edge: specialinvoke $r4.<java.util.ArrayList: void <init>()>() in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.util.ArrayList: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3) in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.util.ArrayList: boolean add(java.lang.Object)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("<li>") in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<java.lang.String: int length()>() in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>($r2, $r3, $r1) in <org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $i2 = virtualinvoke $r8.<java.util.HashSet: int size()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.util.HashSet: int size()>
VIRTUAL edge: $r13 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.util.HashSet: java.util.Iterator iterator()>
VIRTUAL edge: $r13 = virtualinvoke $r8.<java.util.HashSet: java.util.Iterator iterator()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.util.HashSet: java.util.Iterator iterator()>
INTERFACE edge: $r3 = interfaceinvoke $r2.<org.xbmc.api.data.IControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)>($r9) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)>
INTERFACE edge: $i2 = interfaceinvoke $r2.<org.xbmc.api.data.IControlClient: int getPlaylistId(org.xbmc.api.business.INotifiableManager)>($r9) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient: int getPlaylistId(org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String)>($r1, "GetCurrentPlaylist") in <org.xbmc.httpapi.client.ControlClient: int getPlaylistId(org.xbmc.api.business.INotifiableManager)> ==> <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, $r2, "") in <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String)> ==> <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String getString(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>($r1, $r2, $r3) in <org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String getString(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<li>", "") in <org.xbmc.httpapi.Connection: java.lang.String getString(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>($r2, $r3, $r1) in <org.xbmc.httpapi.Connection: java.lang.String getString(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)> ==> <org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
INTERFACE edge: $i0 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlayStatus()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient$1: int getPlayStatus()>
INTERFACE edge: $r4 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: java.lang.String getTitle()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient$1: java.lang.String getTitle()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getDuration()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient$1: int getDuration()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient$1: int getPlaylistPosition()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.ControlClient$1: int getPlaylistPosition()>
INTERFACE edge: $i0 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlayStatus()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.MusicClient$1: int getPlayStatus()>
INTERFACE edge: $r4 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: java.lang.String getTitle()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.MusicClient$1: java.lang.String getTitle()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getDuration()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.MusicClient$1: int getDuration()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()>
INTERFACE edge: $i0 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlayStatus()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.PictureClient$1: int getPlayStatus()>
INTERFACE edge: $r4 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: java.lang.String getTitle()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.PictureClient$1: java.lang.String getTitle()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getDuration()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.PictureClient$1: int getDuration()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.PictureClient$1: int getPlaylistPosition()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.PictureClient$1: int getPlaylistPosition()>
INTERFACE edge: $i0 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlayStatus()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.VideoClient$1: int getPlayStatus()>
INTERFACE edge: $r4 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: java.lang.String getTitle()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.VideoClient$1: java.lang.String getTitle()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getDuration()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.VideoClient$1: int getDuration()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()>
INTERFACE edge: $i2 = interfaceinvoke $r3.<org.xbmc.api.data.IControlClient$ICurrentlyPlaying: int getPlaylistPosition()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()>
STATIC edge: $i0 = staticinvoke <org.xbmc.api.info.PlayStatus: int parse(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient$1: int getPlayStatus()> ==> <org.xbmc.api.info.PlayStatus: int parse(java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i0 = staticinvoke <org.xbmc.api.info.PlayStatus: int parse(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient$1: int getPlayStatus()> ==> <org.xbmc.api.info.PlayStatus: int parse(java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("VideoNo") in <org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
SPECIAL edge: $i0 = specialinvoke $r0.<org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)>($r2) in <org.xbmc.httpapi.client.VideoClient$1: int getDuration()> ==> <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Duration") in <org.xbmc.httpapi.client.VideoClient$1: int getDuration()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Tagline") in <org.xbmc.httpapi.client.VideoClient$1: java.lang.String getTitle()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PlayStatus") in <org.xbmc.httpapi.client.VideoClient$1: int getPlayStatus()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Filename") in <org.xbmc.httpapi.client.PictureClient$1: java.lang.String getTitle()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SongNo") in <org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
SPECIAL edge: $i0 = specialinvoke $r0.<org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)>($r2) in <org.xbmc.httpapi.client.MusicClient$1: int getDuration()> ==> <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Duration") in <org.xbmc.httpapi.client.MusicClient$1: int getDuration()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("Title") in <org.xbmc.httpapi.client.MusicClient$1: java.lang.String getTitle()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("PlayStatus") in <org.xbmc.httpapi.client.MusicClient$1: int getPlayStatus()> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $i2 = virtualinvoke $r4.<java.lang.String: int length()>() in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r12) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void run()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1) in <org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)> ==> <java.util.HashSet: boolean remove(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r3) in <org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r5) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r5) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r6 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r6 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r6 = virtualinvoke $r8.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void fetch()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r14 = virtualinvoke $r11.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r14 = virtualinvoke $r11.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r14 = virtualinvoke $r11.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: $r15 = virtualinvoke $r11.<android.app.Activity: android.content.SharedPreferences getPreferences(int)>(0) in <org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: android.content.SharedPreferences getPreferences(int)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5) in <org.xbmc.android.remote.business.AbstractManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void updateAlbumInfo(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r18 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: virtualinvoke $r5.<android.app.Activity: void startActivity(android.content.Intent)>($r2) in <org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <android.app.Activity: void startActivity(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5) in <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.ControlManager: void getCurrentlyPlaying(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getCompilations(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
INTERFACE edge: interfaceinvoke $r0.<org.xbmc.api.business.IMusicManager: void getSongs(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r15, $r2, $r3) in <org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager: void getSongs(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.MusicManager$5: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.MusicManager: void getSongs(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <org.xbmc.android.remote.business.MusicManager$5: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.MusicManager$5: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getSongs(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IMusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r3, $r4, $r5) in <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r3, "music", $r7) in <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.business.ControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
SPECIAL edge: specialinvoke $r4.<org.xbmc.android.remote.business.ControlManager$6: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>($r0, $r1, $r0, $r3, $r2) in <org.xbmc.android.remote.business.ControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <org.xbmc.android.remote.business.ControlManager$6: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>($r2, $r3) in <org.xbmc.android.remote.business.ControlManager$6: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)> ==> <org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.ControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<android.app.Activity: android.content.Context getApplicationContext()>() in <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)> ==> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
INTERFACE edge: interfaceinvoke $r2.<org.xbmc.api.business.IMusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>($r3, $r4, $r5) in <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)> ==> <org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Actor,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
INTERFACE edge: interfaceinvoke $r5.<org.xbmc.api.business.IControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>($r3, "video", $r7) in <org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)> ==> <org.xbmc.android.remote.business.ControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getPlaylist(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4) in <org.xbmc.android.remote.business.MusicManager: void getPlaylistPosition(org.xbmc.api.business.DataResponse,android.content.Context)> ==> <android.os.Handler: boolean post(java.lang.Runnable)>

Callgraph has 4493 edges
	<dummyMainClass: void dummyMainMethod()>
	<org.xbmc.android.remote.business.provider.HostProvider: void <clinit>()>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>
	<android.view.View: void <clinit>()>
	<android.view.KeyEvent: void <clinit>()>
	<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <clinit>()>
	<android.os.Bundle: void <clinit>()>
	<android.app.Activity: void <clinit>()>
	<android.content.Intent: void <clinit>()>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <clinit>()>
	<android.view.MotionEvent: void <clinit>()>
	<android.content.ContentValues: void <clinit>()>
	<java.lang.String: void <clinit>()>
	<android.os.Build: void <clinit>()>
	<java.util.HashMap: void <init>()>
	<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
	<android.content.UriMatcher: void <init>(int)>
	<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
	<java.lang.RuntimeException: void <init>(java.lang.String)>
	<java.lang.Exception: void <init>()>
	<java.lang.Object: void <init>()>
	<java.lang.Object: void finalize()>
	<android.view.View: void <init>(android.content.Context)>
	<android.view.View: void finalize()>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IControlManager access$7(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$8(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IMusicManager access$9(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.api.business.DataResponse: void <init>()>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.ListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.AbstractController$4: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void access$0(org.xbmc.android.remote.presentation.controller.AbstractController,boolean)>
	<android.content.Intent: void <init>(java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$3: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>
	<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$5: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$8: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$10(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: int access$11(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<android.view.KeyEvent: void <init>(int,int)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$7: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: void <init>()>
	<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
	<java.lang.Character: char toLowerCase(char)>
	<java.lang.Character: void <clinit>()>
	<android.view.KeyEvent: int getAction()>
	<android.view.KeyEvent: char getDisplayLabel()>
	<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyDown(android.view.View,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean handleMenuKeyUp(android.view.View,android.view.KeyEvent)>
	<android.view.KeyEvent: int getRepeatCount()>
	<android.view.View: android.content.Context getContext()>
	<android.view.View: android.os.IBinder getWindowToken()>
	<org.xbmc.android.remote.presentation.controller.AbstractController$6: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController: void <init>(android.app.Activity)>
	<org.xbmc.android.remote.business.ManagerFactory: void <clinit>()>
	<org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IControlManager getControlManager(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IInfoManager getInfoManager(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ControlManager control(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.InfoManager info(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.ManagerThread get()>
	<java.lang.Thread: void sleep(long)>
	<org.xbmc.android.remote.business.ManagerThread: void <init>()>
	<java.lang.Thread: void start()>
	<org.xbmc.android.remote.business.ManagerThread: void run()>
	<org.xbmc.android.remote.business.AbstractManager: void <clinit>()>
	<android.os.Looper: void prepare()>
	<android.os.Looper: void loop()>
	<java.lang.Boolean: void <clinit>()>
	<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
	<android.os.Handler: void <init>()>
	<org.xbmc.android.remote.business.VideoManager: void <init>()>
	<org.xbmc.android.remote.business.AbstractManager: void <init>()>
	<java.util.ArrayList: void <init>()>
	<org.xbmc.android.remote.business.MusicManager: void <init>()>
	<org.xbmc.android.remote.business.ControlManager: void <init>()>
	<org.xbmc.android.remote.business.InfoManager: void <init>()>
	<java.lang.Thread: void <init>(java.lang.String)>
	<org.xbmc.android.remote.business.AbstractManager: void setController(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void onCreate(android.app.Activity)>
	<org.xbmc.android.util.HostFactory: void <clinit>()>
	<org.xbmc.android.util.HostFactory: void readHost(android.content.Context)>
	<org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context,int)>
	<org.xbmc.android.util.HostFactory: org.xbmc.api.object.Host getHost(android.content.Context)>
	<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
	<org.xbmc.android.remote.business.provider.HostProvider$Hosts: void <clinit>()>
	<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
	<org.xbmc.android.util.HostFactory: java.util.ArrayList getHosts(android.content.Context)>
	<android.net.Uri: void <clinit>()>
	<android.net.Uri: android.net.Uri parse(java.lang.String)>
	<java.util.ArrayList: int size()>
	<java.util.ArrayList: java.lang.Object get(int)>
	<org.xbmc.api.object.Host: void <init>()>
	<java.util.ArrayList: boolean add(java.lang.Object)>
	<android.content.ContextWrapper: android.content.Context getApplicationContext()>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>
	<android.os.Bundle: void <init>()>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()>
	<org.xbmc.android.util.KeyTracker: void <clinit>()>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: org.xbmc.android.remote.presentation.activity.ConfigurationManager getInstance(android.app.Activity)>
	<org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IEventClientManager getEventClientManager(org.xbmc.api.presentation.INotifiableController)>
	<android.view.ViewConfiguration: int getLongPressTimeout()>
	<org.xbmc.android.remote.business.EventClientManager: void <clinit>()>
	<org.xbmc.android.remote.business.EventClientManager: void setController(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.EventClientManager: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient getEventClient(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IEventClient createEventClient(org.xbmc.api.business.INotifiableManager)>
	<java.net.Inet4Address: java.net.InetAddress getByName(java.lang.String)>
	<java.lang.StringBuilder: void <init>(java.lang.String)>
	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
	<java.lang.StringBuilder: java.lang.String toString()>
	<org.xbmc.eventclient.EventClient: void <init>(java.net.InetAddress,int,java.lang.String)>
	<org.xbmc.eventclient.EventClient: void <init>(java.lang.String)>
	<org.xbmc.eventclient.EventClient: void startClient(java.net.InetAddress,int)>
	<org.xbmc.eventclient.Packet: void <clinit>()>
	<android.util.Log: int i(java.lang.String,java.lang.String)>
	<java.lang.Math: double random()>
	<org.xbmc.eventclient.EventClient$PingThread: void <init>(java.net.InetAddress,int,int)>
	<org.xbmc.eventclient.EventClient$PingThread: void run()>
	<org.xbmc.eventclient.PacketPING: void <init>()>
	<org.xbmc.eventclient.Packet: void send(java.net.InetAddress,int)>
	<java.net.DatagramPacket: void <init>(byte[],int)>
	<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>
	<java.net.DatagramPacket: void setPort(int)>
	<java.net.DatagramSocket: void <init>()>
	<java.net.DatagramSocket: void send(java.net.DatagramPacket)>
	<org.xbmc.eventclient.Packet: int getNumPackets()>
	<org.xbmc.eventclient.Packet: byte[] getUDPMessage(int)>
	<java.lang.System: void <clinit>()>
	<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
	<org.xbmc.eventclient.Packet: byte[] getHeader(int,int,short)>
	<org.xbmc.eventclient.Packet: byte[] intToByteArray(int)>
	<org.xbmc.eventclient.Packet: byte[] shortToByteArray(short)>
	<org.xbmc.eventclient.Packet: void <init>(short)>
	<org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String,byte,byte[])>
	<org.xbmc.eventclient.PacketHELO: void <init>(java.lang.String)>
	<org.xbmc.eventclient.Packet: void appendPayload(java.lang.String)>
	<org.xbmc.eventclient.Packet: void appendPayload(byte)>
	<org.xbmc.eventclient.Packet: void appendPayload(short)>
	<org.xbmc.eventclient.Packet: void appendPayload(int)>
	<org.xbmc.eventclient.Packet: void appendPayload(byte[])>
	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
	<java.lang.String: byte[] getBytes()>
	<org.xbmc.eventclient.EventClient: void sendButton(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
	<org.xbmc.eventclient.PacketBUTTON: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte)>
	<org.xbmc.eventclient.PacketBUTTON: void appendPayload(short,java.lang.String,java.lang.String,boolean,boolean,boolean,short,byte,short)>
	<org.xbmc.android.remote.business.EventClientManager: void onMessage(java.lang.String)>
	<org.xbmc.android.remote.business.EventClientManager: void <init>()>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void <init>(android.app.Activity)>
	<android.app.Activity: void onPause()>
	<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
	<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
	<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
	<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
	<android.app.Activity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard()>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void initKeyguard(boolean)>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: boolean isKeyguardDisabled(android.content.SharedPreferences)>
	<org.xbmc.android.remote.presentation.controller.ListController: void findTitleView(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.ListController: void findMessageView(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreate(org.xbmc.android.remote.presentation.activity.PlaylistActivity,android.widget.ListView)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void setupButtons(android.view.View,android.view.View,android.view.View,android.view.View)>
	<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
	<org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IMusicManager getMusicManager(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.MusicManager music(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$2: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController,org.xbmc.android.remote.presentation.activity.PlaylistActivity)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicPlaylistController)>
	<android.os.Handler: void <init>(android.os.Handler$Callback)>
	<org.xbmc.android.remote.business.MusicManager: void getPlaylistPosition(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void getPlaylist(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$27: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.business.Command: void <init>(org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.android.remote.business.MusicManager$28: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.presentation.controller.ListController: boolean isCreated()>
	<org.xbmc.android.remote.presentation.controller.ListController: void onCreate(android.app.Activity,android.widget.ListView)>
	<org.xbmc.android.remote.presentation.controller.ListController: org.xbmc.android.widget.IdleListener setupIdleListener()>
	<org.xbmc.android.remote.presentation.controller.ListController: void setTitle(java.lang.String)>
	<org.xbmc.android.widget.IdleListDetector: void <init>(org.xbmc.android.widget.IdleListDetector$OnListIdleListener)>
	<org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector,org.xbmc.android.widget.IdleListDetector$ScrollHandler)>
	<org.xbmc.android.widget.IdleListDetector$ScrollHandler: void <init>(org.xbmc.android.widget.IdleListDetector)>
	<org.xbmc.android.widget.IdleListener: void <init>(android.widget.AbsListView)>
	<android.app.Activity: void onCreate(android.os.Bundle)>
	<android.app.Activity: void setContentView(int)>
	<android.app.Activity: android.view.View findViewById(int)>
	<android.app.Activity: void registerForContextMenu(android.view.View)>
	<android.content.ContextWrapper: android.content.res.Resources getResources()>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.PlaylistActivity)>
	<org.xbmc.android.util.OnLongPressBackKeyTracker: void <init>()>
	<org.xbmc.android.util.KeyTracker$Stage: void <clinit>()>
	<org.xbmc.android.util.KeyTracker$Stage: void <init>(java.lang.String,int)>
	<java.lang.Enum: void <init>(java.lang.String,int)>
	<org.xbmc.android.util.KeyTracker: void <init>(org.xbmc.android.util.KeyTracker$OnKeyTracker)>
	<android.app.Activity: void <init>()>
	<android.app.Activity: void finalize()>
	<android.view.ContextThemeWrapper: void <init>()>
	<android.content.ContextWrapper: void <init>(android.content.Context)>
	<android.content.Context: void <init>()>
	<org.xbmc.android.remote.presentation.controller.MovieListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.MovieListController$5: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.MovieListController)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$5$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController$5,android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$6: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$6: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onRestoreInstanceState(android.os.Bundle)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onPostCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void onSaveInstanceState(android.os.Bundle)>
	<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
	<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>
	<android.app.ActivityGroup: void onPause()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<android.app.Activity: void startActivity(android.content.Intent)>
	<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
	<android.app.ActivityGroup: void onResume()>
	<android.app.Activity: void onPostCreate(android.os.Bundle)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void ensureTabHost()>
	<android.os.Bundle: java.lang.String getString(java.lang.String)>
	<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MovieLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieLibraryActivity)>
	<org.xbmc.android.remote.presentation.controller.FileListController: void <init>(int)>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void <init>(int)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreate(android.app.Activity,android.widget.ListView)>
	<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
	<java.lang.String: java.lang.String valueOf(java.lang.Object)>
	<org.xbmc.android.util.ImportUtilities: java.lang.String assertSdCard()>
	<org.xbmc.android.remote.business.ManagerThread: org.xbmc.android.remote.business.VideoManager video(org.xbmc.api.presentation.INotifiableController)>
	<org.xbmc.android.remote.business.ManagerFactory: org.xbmc.api.business.IVideoManager getVideoManager(org.xbmc.api.presentation.INotifiableController)>
	<android.os.Environment: java.lang.String getExternalStorageState()>
	<org.xbmc.android.util.ImportUtilities: double freePercentage()>
	<android.os.Environment: java.io.File getExternalStorageDirectory()>
	<android.os.StatFs: void <init>(java.lang.String)>
	<android.os.StatFs: int getAvailableBlocks()>
	<android.os.StatFs: int getBlockCount()>
	<android.os.StatFs: void finalize()>
	<org.xbmc.android.remote.business.VideoManager: void setSortKey(int)>
	<org.xbmc.android.remote.business.VideoManager: void setPreferences(android.content.SharedPreferences)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void fetch()>
	<org.xbmc.android.remote.presentation.controller.MovieListController$4: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$3: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$2: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController,org.xbmc.api.object.Actor)>
	<org.xbmc.android.remote.presentation.controller.ListController: void showOnLoading()>
	<org.xbmc.android.remote.presentation.controller.ListController$LoadingAdapter: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity)>
	<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
	<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
	<android.widget.ArrayAdapter: void add(java.lang.Object)>
	<android.widget.BaseAdapter: void <init>()>
	<org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Actor,android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager: void getMovies(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager$2: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager$4: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.business.VideoManager$3: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Actor)>
	<android.app.ActivityGroup: void onCreate(android.os.Bundle)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: org.xbmc.android.widget.slidingtabs.SlidingTabHost getTabHost()>
	<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void <init>()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabActivity)>
	<android.app.ActivityGroup: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController: void setupStatusHandler()>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController$1: void <init>(org.xbmc.android.remote.presentation.controller.MediaIntentController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void <init>()>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>
	<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$2$1: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController$2)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void <init>(org.xbmc.api.business.IMusicManager,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void <init>(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getTrackDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
	<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
	<org.xbmc.android.util.Crc32: java.lang.String formatAsHexLowerCase(long)>
	<org.xbmc.android.util.ImportUtilities: java.io.File getCacheDirectory(java.lang.String,int)>
	<org.xbmc.api.type.MediaType: java.lang.String getArtFolder(int)>
	<java.lang.String: java.lang.String valueOf(int)>
	<java.io.File: void <clinit>()>
	<java.lang.Integer: void <clinit>()>
	<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
	<java.lang.Integer: java.lang.Integer valueOf(int)>
	<org.xbmc.api.type.ThumbSize: void <clinit>()>
	<org.xbmc.android.util.IOUtilities: java.io.File getExternalFile(java.lang.String)>
	<org.xbmc.api.type.ThumbSize: java.lang.String getDir(int)>
	<android.content.res.Resources: android.content.res.Resources getSystem()>
	<android.app.Dialog: void show()>
	<java.io.File: void <init>(java.io.File,java.lang.String)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$6: void <init>(android.widget.TextView,android.app.Activity,org.xbmc.api.object.Album,android.widget.TableLayout)>
	<java.io.File: boolean exists()>
	<java.io.File: java.lang.String getAbsolutePath()>
	<android.app.Dialog: void <init>(android.content.Context)>
	<android.app.Dialog: void setContentView(int)>
	<android.app.Dialog: void setTitle(java.lang.CharSequence)>
	<android.app.Dialog: android.view.View findViewById(int)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$3: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()>
	<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicLibraryActivity)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.FileListController: void <init>()>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void setGrid(android.widget.GridView)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreate(android.app.Activity,android.widget.ListView)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void setCompilationsOnly(boolean)>
	<org.xbmc.android.remote.business.MusicManager: void setSortKey(int)>
	<org.xbmc.android.remote.business.MusicManager: void setPreferences(android.content.SharedPreferences)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void fetch()>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$7: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$6: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$5: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController$4: void <init>(org.xbmc.android.remote.presentation.controller.AlbumListController,org.xbmc.api.object.Artist)>
	<org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void getCompilations(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void getAlbums(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$2: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$1: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$4: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.business.MusicManager$3: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
	<android.app.Activity: android.content.Intent getIntent()>
	<org.xbmc.android.util.KeyTracker: boolean doKeyDown(int,android.view.KeyEvent)>
	<java.lang.System: long currentTimeMillis()>
	<org.xbmc.android.util.KeyTracker$State: void <clinit>()>
	<org.xbmc.android.util.KeyTracker$State: void <init>(java.lang.String,int)>
	<org.xbmc.android.util.KeyTracker: void callTracker(org.xbmc.android.util.KeyTracker$Stage,long)>
	<org.xbmc.android.util.OnLongPressBackKeyTracker: org.xbmc.android.util.KeyTracker$State onKeyTracker(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
	<android.content.Intent: int getFlags()>
	<android.content.Intent: android.content.Intent setFlags(int)>
	<org.xbmc.android.remote.presentation.activity.PlaylistActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void <init>(android.preference.PreferenceActivity)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
	<java.util.Hashtable: void <init>()>
	<org.xbmc.android.remote.presentation.activity.SettingsActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()>
	<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void registerOnSharedPreferenceChangeListener(android.preference.PreferenceActivity)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void updateSummaries()>
	<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
	<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
	<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
	<android.preference.PreferenceActivity: void <init>()>
	<android.app.ListActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.AboutActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()>
	<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
	<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
	<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
	<android.content.ContextWrapper: java.lang.String getPackageName()>
	<android.content.Intent: void <init>()>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void <init>()>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
	<org.xbmc.android.util.SmsMmsMessage: org.xbmc.android.util.SmsMmsMessage getSmsfromPDUs(android.content.Context,java.lang.Object[])>
	<android.provider.Contacts$People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)>
	<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
	<org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonName(android.content.Context,java.lang.String,java.lang.String)>
	<org.xbmc.android.util.SmsPopupUtils: java.lang.String getPersonIdFromPhoneNumber(android.content.Context,java.lang.String)>
	<android.graphics.Bitmap$CompressFormat: void <clinit>()>
	<android.telephony.TelephonyManager: void <clinit>()>
	<android.provider.Contacts$People: void <clinit>()>
	<org.xbmc.android.util.SmsPopupUtils: void <clinit>()>
	<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>
	<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
	<android.provider.Contacts$Phones: void <clinit>()>
	<java.lang.Long: java.lang.Long valueOf(long)>
	<java.lang.Long: void <clinit>()>
	<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
	<org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>
	<org.xbmc.android.remote.business.EventClientManager: void sendNotification(java.lang.String,java.lang.String)>
	<org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String)>
	<org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String,byte,byte[])>
	<org.xbmc.eventclient.PacketNOTIFICATION: void <init>(java.lang.String,java.lang.String)>
	<org.xbmc.eventclient.PacketNOTIFICATION: void appendPayload(java.lang.String,java.lang.String,byte,byte[])>
	<org.xbmc.eventclient.EventClient: void sendNotification(java.lang.String,java.lang.String,byte,byte[])>
	<org.xbmc.android.remote.business.ControlManager: void getCurrentlyPlaying(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager$8: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.util.SmsMmsMessage: android.graphics.Bitmap getContactPhoto()>
	<org.xbmc.android.util.SmsMmsMessage: java.lang.String getContactName()>
	<org.xbmc.android.util.SmsMmsMessage: java.lang.String getMessageBody()>
	<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
	<java.io.ByteArrayInputStream: void <init>(byte[])>
	<android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
	<org.xbmc.android.util.SmsMmsMessage: void <init>(android.content.Context,java.lang.String,java.lang.String,long,int)>
	<org.xbmc.android.util.SmsPopupUtils: long getThreadIdFromAddress(android.content.Context,java.lang.String)>
	<org.xbmc.android.util.SmsPopupUtils: int getUnreadMessagesCount(android.content.Context,long)>
	<org.xbmc.android.util.SmsPopupUtils: byte[] getPersonPhoto(android.content.Context,java.lang.String)>
	<org.xbmc.android.util.SmsPopupUtils: int getUnreadMmsCount(android.content.Context)>
	<org.xbmc.android.util.SmsPopupUtils: int getUnreadSmsCount(android.content.Context,long)>
	<android.provider.Contacts$Photos: void <clinit>()>
	<java.lang.String: java.lang.String valueOf(long)>
	<java.lang.String: boolean equals(java.lang.Object)>
	<org.xbmc.android.util.SmsMmsMessage: void setMessageId()>
	<org.xbmc.android.util.SmsPopupUtils: long findMessageId(android.content.Context,long,long,int)>
	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
	<java.lang.StringBuilder: void <init>()>
	<java.io.ByteArrayOutputStream: void <init>()>
	<java.io.ByteArrayOutputStream: byte[] toByteArray()>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$1: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,org.xbmc.api.business.IEventClientManager,org.xbmc.api.business.IControlManager)>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void <init>(org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver,android.os.Handler)>
	<android.content.Intent: java.lang.String getAction()>
	<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
	<android.content.Intent: android.os.Bundle getExtras()>
	<android.content.BroadcastReceiver: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.business.IControlManager access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: android.app.Activity access$1(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: org.xbmc.api.object.Movie access$2(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void <init>(android.app.Activity,org.xbmc.api.object.Movie)>
	<org.xbmc.api.object.Movie: void <init>(int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()>
	<java.lang.String: java.lang.String valueOf(double)>
	<java.lang.Math: long round(double)>
	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void setupPlayButton(android.widget.Button)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void loadCover(android.widget.ImageView)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void updateMovieDetails(android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.LinearLayout)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$2: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController,android.widget.ImageView)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()>
	<org.xbmc.android.remote.presentation.activity.ListActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.ListActivity)>
	<org.xbmc.android.remote.presentation.controller.SettingsController$1: void <init>(org.xbmc.android.remote.presentation.controller.SettingsController)>
	<org.xbmc.android.remote.presentation.controller.SettingsController$1: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()>
	<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: android.preference.PreferenceScreen createHostsPreferences(android.preference.PreferenceScreen,android.app.Activity)>
	<java.util.AbstractList: java.util.Iterator iterator()>
	<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
	<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context)>
	<android.preference.Preference: void setTitle(java.lang.CharSequence)>
	<android.preference.Preference: void setSummary(java.lang.CharSequence)>
	<org.xbmc.android.remote.presentation.controller.HostPreference: void setHost(org.xbmc.api.object.Host)>
	<android.preference.Preference: void setKey(java.lang.String)>
	<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
	<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
	<org.xbmc.android.remote.presentation.controller.HostPreference: void <init>(android.content.Context,android.util.AttributeSet)>
	<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
	<android.preference.DialogPreference: void setDialogLayoutResource(int)>
	<android.preference.DialogPreference: void setDialogIcon(int)>
	<android.preference.Preference: void <init>(android.content.Context)>
	<android.app.Activity: void setTitle(java.lang.CharSequence)>
	<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$2(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$5(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: int access$4(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IControlManager access$3(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: org.xbmc.api.business.IEventClientManager access$0(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController,java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>
	<android.widget.SeekBar: void <init>(android.content.Context)>
	<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)>
	<android.widget.ProgressBar: int getProgress()>
	<android.view.View: boolean isInTouchMode()>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void <init>(org.xbmc.android.remote.presentation.controller.NowPlayingController)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()>
	<android.app.Activity: boolean isTaskRoot()>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: void setupButtons(android.widget.SeekBar,android.view.View,android.view.View,android.view.View,android.view.View,android.view.View)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingActivity)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MusicGenreListController)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.ActorListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ActorListController)>
	<org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference,android.view.ViewGroup)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.HostPreference: org.xbmc.api.object.Host access$0(org.xbmc.android.remote.presentation.controller.HostPreference)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void <init>(org.xbmc.android.remote.presentation.controller.HostPreference$1,android.view.ViewGroup)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.util.ImportUtilities: void purgeCache()>
	<org.xbmc.api.type.MediaType: int[] getTypes()>
	<org.xbmc.api.type.ThumbSize: int[] values()>
	<java.io.File: boolean isDirectory()>
	<java.io.File: java.io.File[] listFiles()>
	<java.io.File: boolean delete()>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void <init>(org.xbmc.android.remote.presentation.controller.MovieGenreListController)>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.SongListController$1: void <init>(org.xbmc.android.remote.presentation.controller.SongListController)>
	<org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.object.Album access$1(org.xbmc.android.remote.presentation.controller.SongListController)>
	<org.xbmc.android.remote.presentation.controller.SongListController: org.xbmc.api.business.IMusicManager access$0(org.xbmc.android.remote.presentation.controller.SongListController)>
	<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String,boolean)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$4: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,org.xbmc.api.object.Movie)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3: org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController access$0(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1$1: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1,org.xbmc.api.object.Movie)>
	<android.widget.LinearLayout: void <init>(android.content.Context)>
	<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.widget.Button: void <init>(android.content.Context)>
	<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.widget.TextView: void <init>(android.content.Context)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.HostPreference$1: org.xbmc.android.remote.presentation.controller.HostPreference access$0(org.xbmc.android.remote.presentation.controller.HostPreference$1)>
	<org.xbmc.android.util.HostFactory: void deleteHost(android.content.Context,org.xbmc.api.object.Host)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void <init>(org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3,android.view.View)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)>
	<android.view.View: java.lang.Object getTag()>
	<org.xbmc.android.remote.presentation.controller.HomeController$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
	<org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void <init>(android.app.Activity,android.widget.GridView)>
	<org.xbmc.android.remote.presentation.controller.HomeController$HomeItem: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,int,int,java.lang.String,java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void setupMenuItems(android.widget.GridView)>
	<org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.app.Activity,java.util.ArrayList)>
	<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void setHomeAdapter(android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>
	<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
	<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
	<android.view.View: void setSelected(boolean)>
	<android.widget.GridView: void setSelection(int)>
	<org.xbmc.android.remote.presentation.controller.HomeController: android.widget.AdapterView$OnItemClickListener getHomeMenuOnClickListener()>
	<org.xbmc.android.remote.presentation.controller.HomeController$4: void <init>(org.xbmc.android.remote.presentation.controller.HomeController)>
	<android.widget.GridView: void <init>(android.content.Context)>
	<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$WolCounter access$6(org.xbmc.android.remote.presentation.controller.HomeController)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void access$2(org.xbmc.android.remote.presentation.controller.HomeController,org.xbmc.android.remote.presentation.controller.HomeController$WolCounter)>
	<org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.DataResponse access$1(org.xbmc.android.remote.presentation.controller.HomeController)>
	<org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.api.business.IInfoManager access$0(org.xbmc.android.remote.presentation.controller.HomeController)>
	<android.os.CountDownTimer: void cancel()>
	<org.xbmc.android.remote.presentation.controller.HomeController$WolCounter: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,long,long)>
	<android.os.CountDownTimer: android.os.CountDownTimer start()>
	<android.os.CountDownTimer: void <init>(long,long)>
	<org.xbmc.android.util.WakeOnLan: void <init>()>
	<org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,int)>
	<org.xbmc.android.util.WakeOnLan: java.lang.Boolean sendMagicPacket(java.lang.String,java.lang.String,int)>
	<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
	<org.xbmc.android.util.WakeOnLan: byte[] getMacBytes(java.lang.String)>
	<java.lang.Integer: int parseInt(java.lang.String,int)>
	<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
	<java.net.DatagramSocket: void close()>
	<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>
	<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
	<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$5(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: android.widget.ImageButton access$1(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int access$12(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void access$0(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
	<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
	<org.xbmc.android.remote.R$styleable: void <clinit>()>
	<org.xbmc.android.widget.slidingtabs.SnapAnimation: void <clinit>()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$1: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget,org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget$SliderOnTouchListener: void <init>(org.xbmc.android.widget.slidingtabs.SlidingTabWidget)>
	<org.xbmc.android.widget.slidingtabs.SnapAnimation: void <init>(android.widget.ImageButton,android.widget.LinearLayout)>
	<android.view.animation.Animation: void <init>()>
	<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
	<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
	<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
	<android.widget.LinearLayout: void setOrientation(int)>
	<android.view.View: android.view.View findViewById(int)>
	<android.view.View: void setFocusable(boolean)>
	<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
	<org.xbmc.android.remote.presentation.controller.HomeController$2: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,java.util.HashMap)>
	<org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void access$5(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.GridView,org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter)>
	<org.xbmc.android.remote.presentation.controller.HomeController: org.xbmc.android.remote.presentation.controller.HomeController$HomeAdapter access$4(org.xbmc.android.remote.presentation.controller.HomeController)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void access$3(org.xbmc.android.remote.presentation.controller.HomeController)>
	<org.xbmc.android.util.HostFactory: void saveHost(android.content.Context,org.xbmc.api.object.Host)>
	<org.xbmc.android.util.ClientFactory: void resetClient(org.xbmc.api.object.Host)>
	<org.xbmc.eventclient.EventClient: void setHost(java.net.InetAddress,int)>
	<org.xbmc.eventclient.EventClient$PingThread: void setHost(java.net.InetAddress,int)>
	<org.xbmc.android.remote.presentation.controller.FileListController$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController)>
	<org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
	<org.xbmc.android.remote.presentation.controller.FileListController: org.xbmc.api.business.IControlManager access$2(org.xbmc.android.remote.presentation.controller.FileListController)>
	<org.xbmc.android.remote.presentation.controller.FileListController: int access$1(org.xbmc.android.remote.presentation.controller.FileListController)>
	<org.xbmc.android.remote.presentation.controller.FileListController: java.util.HashMap access$0(org.xbmc.android.remote.presentation.controller.FileListController)>
	<org.xbmc.android.remote.presentation.controller.FileListController$1$1: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>
	<org.xbmc.android.remote.presentation.controller.FileListController$1$2: void <init>(org.xbmc.android.remote.presentation.controller.FileListController$1)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()>
	<java.lang.System: void exit(int)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager getInstance(android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <clinit>()>
	<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void removeNotification()>
	<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void <init>(android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager$1: void <init>(org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager)>
	<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.os.Handler,int,android.app.ProgressDialog)>
	<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: void run()>
	<android.os.Bundle: void putInt(java.lang.String,int)>
	<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread$1: void <init>(org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread,java.util.ArrayList)>
	<org.xbmc.android.remote.presentation.controller.HomeController$ProgressThread: java.util.ArrayList getCovers()>
	<org.xbmc.android.remote.business.MusicManager: java.util.ArrayList getAlbums(android.content.Context)>
	<org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IMusicClient music(android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: int getSortBy(int)>
	<org.xbmc.android.remote.business.MusicManager: java.lang.String getSortOrder()>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IMusicClient getMusicClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi createHttpClient(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.android.util.WifiHelper: org.xbmc.android.util.WifiHelper getInstance(android.content.Context)>
	<org.xbmc.android.util.WifiHelper: void <clinit>()>
	<org.xbmc.android.util.WifiHelper: int getWifiState()>
	<android.util.Log: int d(java.lang.String,java.lang.String)>
	<org.xbmc.android.util.WifiHelper: void <init>(android.content.Context)>
	<org.xbmc.android.util.ClientFactory$1: void <init>(java.lang.String,org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.android.util.ClientFactory$1: void run()>
	<org.xbmc.android.util.ClientFactory: org.xbmc.httpapi.HttpApi access$0()>
	<org.xbmc.httpapi.HttpApi: void <init>(org.xbmc.api.object.Host,int)>
	<org.xbmc.httpapi.Connection: org.xbmc.httpapi.Connection getInstance(java.lang.String,int)>
	<org.xbmc.httpapi.Connection: void setAuth(java.lang.String,java.lang.String)>
	<org.xbmc.httpapi.Connection: void setTimeout(int)>
	<java.net.Authenticator: void setDefault(java.net.Authenticator)>
	<org.xbmc.httpapi.Connection$HttpAuthenticator: void <init>(org.xbmc.httpapi.Connection,java.lang.String,java.lang.String)>
	<java.net.Authenticator: void <init>()>
	<org.xbmc.httpapi.Connection: void <init>(java.lang.String,int)>
	<org.xbmc.httpapi.Connection: void setHost(java.lang.String,int)>
	<org.xbmc.httpapi.client.ControlClient: void <init>(org.xbmc.httpapi.Connection)>
	<org.xbmc.httpapi.client.VideoClient: void <init>(org.xbmc.httpapi.Connection)>
	<org.xbmc.httpapi.client.MusicClient: void <init>(org.xbmc.httpapi.Connection)>
	<org.xbmc.httpapi.client.InfoClient: void <init>(org.xbmc.httpapi.Connection)>
	<org.xbmc.httpapi.WifiStateException: void <init>(int)>
	<org.xbmc.httpapi.client.MusicClient: java.util.ArrayList getAlbums(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>
	<org.xbmc.httpapi.client.MusicClient: java.lang.String albumsOrderBy(int,java.lang.String)>
	<org.xbmc.httpapi.client.MusicClient: java.util.ArrayList parseAlbums(java.lang.String)>
	<org.xbmc.httpapi.Connection: java.lang.String trim(java.lang.String)>
	<org.xbmc.httpapi.Connection: int trimInt(java.lang.String)>
	<java.lang.Integer: int parseInt(java.lang.String)>
	<java.lang.String: int length()>
	<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
	<java.lang.String: void <init>(char[])>
	<java.lang.Throwable: java.lang.String getMessage()>
	<java.lang.Throwable: void printStackTrace()>
	<org.xbmc.api.object.Album: void <init>(int,java.lang.String,java.lang.String,int,java.lang.String)>
	<java.lang.Long: long parseLong(java.lang.String,int)>
	<org.xbmc.httpapi.Connection: java.lang.String query(java.lang.String,java.lang.String,org.xbmc.api.business.INotifiableManager)>
	<java.lang.Integer: java.lang.String toString(int)>
	<java.net.URLDecoder: java.lang.String decode(java.lang.String)>
	<org.apache.http.HttpException: void <init>(java.lang.String)>
	<java.io.InputStreamReader: void <init>(java.io.InputStream)>
	<java.io.BufferedReader: void <init>(java.io.Reader,int)>
	<java.io.BufferedReader: java.lang.String readLine()>
	<java.io.BufferedReader: void close()>
	<java.net.URL: void <init>(java.lang.String)>
	<java.net.URL: java.net.URLConnection openConnection()>
	<java.net.URL: java.lang.String toString()>
	<org.xbmc.httpapi.NoSettingsException: void <init>()>
	<java.lang.Exception: void <init>(java.lang.String)>
	<org.xbmc.android.remote.business.AbstractManager: void onError(java.lang.Exception)>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void onError(java.lang.Exception)>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController: void onError(java.lang.Exception)>
	<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver$NullNotifiableController: void onError(java.lang.Exception)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
	<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
	<org.xbmc.httpapi.Connection: java.lang.String getUrl(java.lang.String,java.lang.String)>
	<java.net.URLEncoder: java.lang.String encode(java.lang.String)>
	<org.xbmc.httpapi.Connection$HttpAuthenticator: void resetCounter()>
	<java.lang.String: java.lang.String[] split(java.lang.String)>
	<org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getMovies(android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager: java.util.ArrayList getActors(android.content.Context)>
	<org.xbmc.android.remote.business.AbstractManager: org.xbmc.api.data.IVideoClient video(android.content.Context)>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IVideoClient getVideoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getActors(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseActors(java.lang.String)>
	<org.xbmc.api.object.Actor: void <init>(int,java.lang.String)>
	<org.xbmc.api.object.Artist: void <init>(int,java.lang.String)>
	<org.xbmc.android.remote.business.VideoManager: int getSortBy(int)>
	<org.xbmc.android.remote.business.VideoManager: java.lang.String getSortOrder()>
	<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList getMovies(org.xbmc.api.business.INotifiableManager,int,java.lang.String)>
	<org.xbmc.httpapi.client.VideoClient: java.lang.String moviesOrderBy(int,java.lang.String)>
	<org.xbmc.httpapi.client.VideoClient: java.util.ArrayList parseMovies(java.lang.String)>
	<org.xbmc.httpapi.Connection: double trimDouble(java.lang.String)>
	<java.lang.Double: void <clinit>()>
	<java.lang.Double: double parseDouble(java.lang.String)>
	<java.util.ArrayList: void <init>(java.util.Collection)>
	<android.os.Handler: android.os.Message obtainMessage()>
	<android.os.Handler: boolean sendMessage(android.os.Message)>
	<android.app.ProgressDialog: void <init>(android.content.Context)>
	<android.app.Dialog: void setCancelable(boolean)>
	<android.app.ProgressDialog: void setProgressStyle(int)>
	<android.app.Dialog: android.view.Window getWindow()>
	<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
	<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
	<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
	<android.content.ContextWrapper: android.content.Context getBaseContext()>
	<android.app.Activity: void showDialog(int)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void setupVersionHandler(android.widget.Button,android.widget.GridView)>
	<org.xbmc.android.remote.presentation.controller.HomeController: android.view.View$OnClickListener getOnHostChangeListener()>
	<org.xbmc.android.remote.presentation.controller.HomeController$3: void <init>(org.xbmc.android.remote.presentation.controller.HomeController,android.widget.Button,android.widget.GridView)>
	<org.xbmc.android.remote.presentation.activity.HomeActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.HomeActivity)>
	<org.xbmc.httpapi.client.ControlClient: boolean setResponseFormat(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.httpapi.Connection: boolean assertBoolean(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
	<org.xbmc.httpapi.WrongDataFormatException: void <init>(java.lang.String,java.lang.String)>
	<java.lang.String: boolean contains(java.lang.CharSequence)>
	<org.xbmc.httpapi.HttpApi: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.client.ControlClient: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.Connection: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.client.VideoClient: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.client.MusicClient: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.client.InfoClient: void setHost(org.xbmc.api.object.Host)>
	<org.xbmc.httpapi.WrongDataFormatException: java.lang.String getExpected()>
	<org.xbmc.httpapi.WrongDataFormatException: java.lang.String getReceived()>
	<java.lang.String: boolean startsWith(java.lang.String)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()>
	<org.xbmc.android.remote.presentation.activity.MusicGenreActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicGenreActivity)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreate(android.app.Activity,android.widget.ListView)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController$3: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController$2: void <init>(org.xbmc.android.remote.presentation.controller.ArtistListController)>
	<org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void getArtists(org.xbmc.api.business.DataResponse,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$8: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$9: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()>
	<org.xbmc.android.remote.presentation.activity.MusicArtistActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.MusicArtistActivity)>
	<android.view.MotionEvent: void <init>()>
	<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: void <init>(org.xbmc.android.remote.presentation.controller.RemoteController,java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean access$0(org.xbmc.android.remote.presentation.controller.RemoteController)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: android.os.Vibrator access$1(org.xbmc.android.remote.presentation.controller.RemoteController)>
	<android.view.MotionEvent: int getAction()>
	<android.view.View: void playSoundEffect(int)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: void <init>(android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void <init>()>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()>
	<android.app.Activity: android.view.WindowManager getWindowManager()>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void setupButtons()>
	<org.xbmc.android.remote.presentation.controller.RemoteController: void setupButton(android.view.View,java.lang.String)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void <init>(org.xbmc.android.remote.presentation.activity.RemoteActivity)>
	<android.content.ContentValues: void <init>()>
	<org.xbmc.android.remote.business.provider.HostProvider: void <init>()>
	<org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()>
	<org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
	<org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
	<org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
	<org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)>
	<org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
	<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
	<android.text.TextUtils: void <clinit>()>
	<android.database.SQLException: void <init>(java.lang.String)>
	<java.lang.RuntimeException: void <init>()>
	<android.content.ContentValues: void <init>(android.content.ContentValues)>
	<android.content.ContentValues: boolean containsKey(java.lang.String)>
	<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
	<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
	<android.content.UriMatcher: int match(android.net.Uri)>
	<android.content.ContentProvider: android.content.Context getContext()>
	<android.database.sqlite.SQLiteQueryBuilder: void <init>()>
	<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
	<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
	<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
	<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
	<org.xbmc.android.remote.business.provider.HostProvider$DatabaseHelper: void <init>(android.content.Context)>
	<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
	<android.content.ContentProvider: void <init>()>
	<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
	<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
	<org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onKeyDown(int,android.view.KeyEvent)>
	<android.view.KeyEvent: int getUnicodeChar()>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean keyboardAction(java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onTrackballEvent(android.view.MotionEvent)>
	<java.lang.Math: float abs(float)>
	<android.view.MotionEvent: float getX()>
	<android.view.MotionEvent: float getY()>
	<org.xbmc.android.remote.presentation.controller.RemoteController: boolean onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.util.KeyTracker: boolean doKeyUp(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onActivityResume(android.app.Activity)>
	<android.app.Activity: void setVolumeControlStream(int)>
	<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void disableKeyguard(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.RemoteController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityPause()>
	<org.xbmc.android.remote.business.AbstractManager: void postActivity()>
	<org.xbmc.android.remote.business.AbstractThread: void quitThreads()>
	<org.xbmc.android.remote.business.MemCacheThread: void <clinit>()>
	<org.xbmc.android.remote.business.DownloadThread: void quit()>
	<org.xbmc.android.remote.business.DiskCacheThread: void quit()>
	<org.xbmc.android.remote.business.MemCacheThread: void quit()>
	<org.xbmc.android.remote.business.DownloadThread: void <clinit>()>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.ListController$QueryResponse: void <init>(org.xbmc.android.remote.presentation.controller.ListController,android.app.Activity,java.lang.String,java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory: android.app.Dialog getAlbumDetail(org.xbmc.api.business.IMusicManager,android.app.Activity,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$4: void <init>(android.widget.ImageView)>
	<org.xbmc.android.remote.presentation.activity.DialogFactory$1: void <init>(android.widget.TextView,android.widget.TextView,android.widget.TextView)>
	<org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$20: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
	<org.xbmc.android.remote.business.MusicManager$11: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
	<org.xbmc.android.remote.business.MusicManager: void updateAlbumInfo(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.business.AbstractManager: void getCover(org.xbmc.api.business.DataResponse,org.xbmc.api.object.ICoverArt,int,android.graphics.Bitmap,android.content.Context)>
	<org.xbmc.android.remote.business.AbstractManager$1: void <init>(org.xbmc.android.remote.business.AbstractManager,org.xbmc.api.object.ICoverArt,int,org.xbmc.api.business.DataResponse,android.graphics.Bitmap,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$29: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void fetch()>
	<org.xbmc.android.remote.presentation.controller.SongListController$4: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.presentation.controller.SongListController$3: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Artist)>
	<org.xbmc.android.remote.presentation.controller.SongListController$2: void <init>(org.xbmc.android.remote.presentation.controller.SongListController,org.xbmc.api.object.Album)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$25: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.business.MusicManager$21: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.SongListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.ListController: void onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void play(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void addToPlaylist(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$16: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist,org.xbmc.api.object.Genre)>
	<org.xbmc.android.remote.business.MusicManager$24: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
	<org.xbmc.android.remote.business.MusicManager$15: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Artist)>
	<org.xbmc.android.remote.presentation.controller.ArtistListController: void onActivityResume(android.app.Activity)>
	<android.app.ProgressDialog: void setMax(int)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void onActivityPause()>
	<java.lang.Object: java.lang.Class getClass()>
	<org.xbmc.android.remote.presentation.controller.HomeController: void openHostChanger()>
	<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.business.InfoManager: void getSystemInfo(org.xbmc.api.business.DataResponse,int,android.content.Context)>
	<org.xbmc.android.remote.business.InfoManager$1: void <init>(org.xbmc.android.remote.business.InfoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
	<org.xbmc.android.remote.presentation.controller.HomeController: void resetupOfflineMenuItems()>
	<android.widget.ArrayAdapter: void remove(java.lang.Object)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void setCurrentTab(int)>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: int getTabCount()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void updateLayoutDimensions()>
	<org.xbmc.android.widget.slidingtabs.SlidingTabWidget: void snapTo(int)>
	<java.lang.Math: int round(float)>
	<org.xbmc.android.widget.slidingtabs.SnapAnimation: void init(int,int)>
	<android.view.animation.Animation: void setDuration(long)>
	<android.preference.Preference: android.content.Context getContext()>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityPause()>
	<org.xbmc.android.util.ConnectionFactory: org.xbmc.android.remote.business.NowPlayingPollerThread getNowPlayingPoller(android.content.Context)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void unSubscribe(android.os.Handler)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void <init>(android.content.Context)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void run()>
	<java.lang.Thread: boolean isAlive()>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IControlClient getControlClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<org.xbmc.android.util.ClientFactory: org.xbmc.api.data.IInfoClient getInfoClient(org.xbmc.api.business.INotifiableManager,android.content.Context)>
	<android.util.Log: int e(java.lang.String,java.lang.String)>
	<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
	<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
	<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
	<android.graphics.drawable.Drawable: void <init>()>
	<java.lang.Thread: boolean isInterrupted()>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendMessage(int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: byte[] download(java.lang.String)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendEmptyMessage(int)>
	<org.xbmc.android.util.Base64: void <clinit>()>
	<org.xbmc.android.util.Base64: byte[] decode(java.lang.String)>
	<org.xbmc.android.util.Base64: byte[] decode(java.lang.String,int)>
	<org.xbmc.android.util.Base64: byte[] decode(byte[],int,int,int)>
	<java.lang.Byte: java.lang.Byte valueOf(byte)>
	<org.xbmc.android.util.Base64: int decode4to3(byte[],int,byte[],int,int)>
	<org.xbmc.android.util.Base64: byte[] getDecodabet(int)>
	<java.lang.Byte: void <clinit>()>
	<java.lang.NullPointerException: void <init>(java.lang.String)>
	<java.io.IOException: void <init>(java.lang.String)>
	<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
	<java.io.FilterInputStream: int read(byte[])>
	<java.util.zip.GZIPInputStream: void close()>
	<java.io.ByteArrayInputStream: void close()>
	<java.io.ByteArrayOutputStream: void close()>
	<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
	<java.lang.Class: boolean desiredAssertionStatus()>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void sendSingleMessage(android.os.Handler,int,org.xbmc.api.data.IControlClient$ICurrentlyPlaying)>
	<android.os.Message: void <clinit>()>
	<android.os.Message: android.os.Message obtain(android.os.Handler)>
	<java.util.HashSet: void <init>()>
	<org.xbmc.android.remote.business.NowPlayingPollerThread$1: void <init>(org.xbmc.android.remote.business.NowPlayingPollerThread,android.content.Context)>
	<java.lang.Thread: void <init>()>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread: void subscribe(android.os.Handler)>
	<java.util.HashSet: boolean add(java.lang.Object)>
	<org.xbmc.httpapi.client.ControlClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.httpapi.client.MusicClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
	<org.xbmc.httpapi.client.PictureClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
	<org.xbmc.httpapi.client.VideoClient: org.xbmc.api.data.IControlClient$ICurrentlyPlaying getCurrentlyPlaying(java.util.HashMap)>
	<org.xbmc.httpapi.client.VideoClient$1: void <init>(java.util.HashMap)>
	<org.xbmc.httpapi.client.PictureClient$1: void <init>(java.util.HashMap)>
	<org.xbmc.httpapi.client.MusicClient$1: void <init>(java.util.HashMap)>
	<org.xbmc.httpapi.client.ControlClient$1: void <init>(org.xbmc.httpapi.client.ControlClient)>
	<org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String)>
	<org.xbmc.httpapi.Connection: java.util.HashMap getPairs(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
	<java.lang.String: java.lang.String[] split(java.lang.String,int)>
	<java.lang.String: java.lang.String trim()>
	<java.util.HashMap: java.lang.Object get(java.lang.Object)>
	<java.util.HashMap: boolean containsKey(java.lang.Object)>
	<android.os.Handler: boolean sendEmptyMessage(int)>
	<org.xbmc.android.remote.business.NowPlayingPollerThread$1: void onError(java.lang.Exception)>
	<org.xbmc.android.remote.presentation.controller.NowPlayingController: void seek(int)>
	<org.xbmc.api.type.SeekType: void <clinit>()>
	<org.xbmc.api.type.SeekType: void <init>(java.lang.String,int)>
	<org.xbmc.android.remote.business.ControlManager: void seek(org.xbmc.api.business.DataResponse,org.xbmc.api.type.SeekType,int,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager$5: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.type.SeekType,int)>
	<org.xbmc.android.remote.business.ControlManager: void setPlaylistId(org.xbmc.api.business.DataResponse,int,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager: void setPlaylistPos(org.xbmc.api.business.DataResponse,int,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager$11: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
	<org.xbmc.android.remote.business.ControlManager$10: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void onMenuItemSelected(int,android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.HostPreference: void create(android.preference.PreferenceManager)>
	<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
	<android.preference.DialogPreference: void showDialog(android.os.Bundle)>
	<org.xbmc.android.remote.presentation.controller.SettingsController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.business.VideoManager: void updateMovieDetails(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Movie,android.content.Context)>
	<org.xbmc.android.remote.business.VideoManager$1: void <init>(org.xbmc.android.remote.business.VideoManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Movie)>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.business.ControlManager: void playFile(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager$1: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
	<org.xbmc.api.object.Movie: java.lang.String getPath()>
	<java.util.Hashtable: void clear()>
	<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
	<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
	<org.xbmc.android.remote.presentation.activity.ListActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.ListActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onLongPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity$1: void onShortPressBack(int,android.view.KeyEvent,org.xbmc.android.util.KeyTracker$Stage,int)>
	<org.xbmc.android.remote.presentation.activity.RemoteActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.activity.ListActivity: void callSuperOnKeyDown(int,android.view.KeyEvent)>
	<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.FileListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.AlbumListController: void updateLibrary()>
	<org.xbmc.android.remote.presentation.controller.FileListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.ListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.FileListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.MusicGenreListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.api.object.Album: int getMediaType()>
	<org.xbmc.api.object.Album: long getCrc()>
	<org.xbmc.android.util.Crc32: int computeLowerCase(java.lang.String)>
	<org.xbmc.android.util.Crc32: java.lang.String toXbmcLowerCase(java.lang.String)>
	<org.xbmc.android.util.Crc32: int compute(java.lang.String)>
	<org.xbmc.android.util.Crc32: int compute(byte[],int)>
	<org.xbmc.android.util.Crc32: int compute(byte,int)>
	<java.lang.String: byte[] getBytes(java.lang.String)>
	<java.lang.String: char[] toCharArray()>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.MediaIntentController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.MovieListController$7: void <init>(org.xbmc.android.remote.presentation.controller.MovieListController)>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onOptionsItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void refreshMovieLibrary(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onCreateOptionsMenu(android.view.Menu)>
	<org.xbmc.android.remote.presentation.controller.MovieGenreListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.ActorListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.MovieListController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.presentation.controller.AbstractController: void onMessage(java.lang.String)>
	<org.xbmc.android.remote.presentation.controller.AbstractController$11: void <init>(org.xbmc.android.remote.presentation.controller.AbstractController,java.lang.String)>
	<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityPause()>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onContextItemSelected(android.view.MenuItem)>
	<org.xbmc.android.remote.business.MusicManager: void setPlaylistSong(org.xbmc.api.business.DataResponse,int,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager: void removeFromPlaylist(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$19: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
	<org.xbmc.android.remote.business.MusicManager$17: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,int)>
	<org.xbmc.android.remote.presentation.controller.MusicPlaylistController: void onActivityResume(android.app.Activity)>
	<org.xbmc.android.remote.business.AbstractManager: void setHandler(android.os.Handler)>
	<android.app.Activity: void finish()>
	<java.lang.Class: java.lang.String getCanonicalName()>
	<android.os.Handler: boolean post(java.lang.Runnable)>
	<java.util.HashSet: java.util.Iterator iterator()>
	<org.xbmc.httpapi.client.InfoClient: java.lang.String getCurrentlyPlayingThumbURI(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.httpapi.Connection: java.util.ArrayList getArray(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
	<java.util.HashSet: int size()>
	<org.xbmc.httpapi.client.ControlClient: int getPlaylistId(org.xbmc.api.business.INotifiableManager)>
	<org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String)>
	<org.xbmc.httpapi.Connection: int getInt(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
	<org.xbmc.httpapi.Connection: java.lang.String getString(org.xbmc.api.business.INotifiableManager,java.lang.String,java.lang.String)>
	<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
	<org.xbmc.httpapi.client.ControlClient$1: int getPlayStatus()>
	<org.xbmc.httpapi.client.ControlClient$1: java.lang.String getTitle()>
	<org.xbmc.httpapi.client.ControlClient$1: int getDuration()>
	<org.xbmc.httpapi.client.ControlClient$1: int getPlaylistPosition()>
	<org.xbmc.httpapi.client.MusicClient$1: int getPlayStatus()>
	<org.xbmc.httpapi.client.MusicClient$1: java.lang.String getTitle()>
	<org.xbmc.httpapi.client.MusicClient$1: int getDuration()>
	<org.xbmc.httpapi.client.MusicClient$1: int getPlaylistPosition()>
	<org.xbmc.httpapi.client.PictureClient$1: int getPlayStatus()>
	<org.xbmc.httpapi.client.PictureClient$1: java.lang.String getTitle()>
	<org.xbmc.httpapi.client.PictureClient$1: int getDuration()>
	<org.xbmc.httpapi.client.PictureClient$1: int getPlaylistPosition()>
	<org.xbmc.httpapi.client.VideoClient$1: int getPlayStatus()>
	<org.xbmc.httpapi.client.VideoClient$1: java.lang.String getTitle()>
	<org.xbmc.httpapi.client.VideoClient$1: int getDuration()>
	<org.xbmc.httpapi.client.VideoClient$1: int getPlaylistPosition()>
	<org.xbmc.api.info.PlayStatus: int parse(java.lang.String)>
	<org.xbmc.httpapi.client.VideoClient$1: int parseTime(java.lang.String)>
	<org.xbmc.httpapi.client.MusicClient$1: int parseTime(java.lang.String)>
	<java.util.HashSet: boolean remove(java.lang.Object)>
	<org.xbmc.android.remote.business.MusicManager: void getSongs(org.xbmc.api.business.DataResponse,org.xbmc.api.object.Album,android.content.Context)>
	<org.xbmc.android.remote.business.MusicManager$5: void <init>(org.xbmc.android.remote.business.MusicManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,org.xbmc.api.object.Album)>
	<org.xbmc.android.remote.business.ControlManager: void updateLibrary(org.xbmc.api.business.DataResponse,java.lang.String,android.content.Context)>
	<org.xbmc.android.remote.business.ControlManager$6: void <init>(org.xbmc.android.remote.business.ControlManager,org.xbmc.api.business.DataResponse,org.xbmc.api.business.INotifiableManager,android.content.Context,java.lang.String)>
Method list has size: 1158
Data flow analysis done.
The following 16 Classes containing entry points:
	org.xbmc.android.remote.business.provider.HostProvider
	org.xbmc.android.remote.presentation.activity.RemoteActivity
	org.xbmc.android.remote.presentation.activity.MusicArtistActivity
	org.xbmc.android.remote.presentation.activity.MusicGenreActivity
	org.xbmc.android.remote.presentation.activity.HomeActivity
	org.xbmc.android.remote.presentation.activity.NowPlayingActivity
	org.xbmc.android.remote.presentation.activity.HostSettingsActivity
	org.xbmc.android.remote.presentation.activity.ListActivity
	org.xbmc.android.remote.presentation.activity.MovieDetailsActivity
	org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver
	org.xbmc.android.remote.presentation.activity.AboutActivity
	org.xbmc.android.remote.presentation.activity.MusicLibraryActivity
	org.xbmc.android.remote.presentation.activity.SettingsActivity
	org.xbmc.android.remote.presentation.activity.MediaIntentActivity
	org.xbmc.android.remote.presentation.activity.MovieLibraryActivity
	org.xbmc.android.remote.presentation.activity.PlaylistActivity
There are 16 classes have detail entry point methods: 
	[<org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void <clinit>()>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity: boolean onKeyDown(int,android.view.KeyEvent)>]
	[<org.xbmc.android.remote.presentation.controller.MovieListController$5: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>, <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.MovieListController$6: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.MovieLibraryActivity: void onResume()>]
	[<org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onPrepareOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.MusicGenreActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>]
	[<org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyUp(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>, <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onResume()>, <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onCreateOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: void onPause()>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.PlaylistActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>]
	[<org.xbmc.android.remote.business.receiver.AndroidBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>]
	[<org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onPrepareOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>, <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.controller.AlbumListController$3: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.MusicLibraryActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AlbumListController$2: void onClick(android.content.DialogInterface,int)>]
	[<org.xbmc.android.remote.presentation.controller.MovieGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.FileListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.HomeActivity$4: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.HostPreference$1$2: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.ActorListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.controller.HomeController$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.HomeActivity$2: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$OnRemoteAction: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.HomeController$1: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$1: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.HomeController$2: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: android.app.Dialog onCreateDialog(int)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.HostPreference$1$1: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.HomeActivity$3: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MusicPlaylistController$4: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: boolean onCreateOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.HostPreference$1: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.SongListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: void onResume()>, <org.xbmc.android.remote.presentation.controller.ArtistListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.NowPlayingNotificationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.widget.slidingtabs.SlidingTabWidget$2: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$1: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.MovieDetailsActivity$MovieDetailsController$3$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.MovieListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.MusicGenreListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.HomeActivity: void onPause()>]
	[<org.xbmc.android.remote.presentation.activity.AboutActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.AboutActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.AboutActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.AboutActivity: boolean onKeyDown(int,android.view.KeyEvent)>]
	[<org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>, <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: void onPause()>, <org.xbmc.android.remote.presentation.controller.SettingsController$1: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.HostSettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>]
	[<org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onCreateOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onTrackballEvent(android.view.MotionEvent)>, <org.xbmc.android.remote.presentation.controller.RemoteController$OnRemoteAction: boolean onTouch(android.view.View,android.view.MotionEvent)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: boolean onKeyUp(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.RemoteActivity: void onPause()>]
	[<org.xbmc.android.remote.presentation.activity.SettingsActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.SettingsController: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.SettingsActivity: void onPause()>]
	[<org.xbmc.android.remote.presentation.activity.ListActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>, <org.xbmc.android.remote.presentation.activity.ListActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.ListActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyUp(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.ListActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.ListActivity: boolean onCreateOptionsMenu(android.view.Menu)>]
	[<org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>, <org.xbmc.android.remote.presentation.controller.AbstractController$4: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onPause()>, <org.xbmc.android.remote.presentation.controller.AbstractController$5: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.AbstractController$6: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.MediaIntentController$2: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.controller.AbstractController$3: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.controller.AbstractController$7: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: boolean onKeyUp(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$4: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AbstractController$8: void onClick(android.content.DialogInterface,int)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$2: void onStopTrackingTouch(android.widget.SeekBar)>, <org.xbmc.android.remote.presentation.controller.NowPlayingController$OnRemoteAction: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.NowPlayingActivity: void onResume()>]
	[<org.xbmc.android.remote.business.provider.HostProvider: boolean onCreate()>, <org.xbmc.android.remote.business.provider.HostProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>, <org.xbmc.android.remote.business.provider.HostProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <org.xbmc.android.remote.business.provider.HostProvider: java.lang.String getType(android.net.Uri)>, <org.xbmc.android.remote.business.provider.HostProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>, <org.xbmc.android.remote.business.provider.HostProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>]
	[<org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.MediaIntentActivity: void onCreate(android.os.Bundle)>]
	[<org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onPrepareOptionsMenu(android.view.Menu)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$3: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.ListControllerOnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onOptionsItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreate(android.os.Bundle)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onContextItemSelected(android.view.MenuItem)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$5: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.controller.AlbumListController$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: boolean onKeyDown(int,android.view.KeyEvent)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onResume()>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onPause()>, <org.xbmc.android.remote.presentation.activity.ConfigurationManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>, <org.xbmc.android.remote.presentation.activity.DialogFactory$2: void onClick(android.view.View)>, <org.xbmc.android.remote.presentation.activity.MusicArtistActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>]
Analysis has run for 17.979812132 seconds
